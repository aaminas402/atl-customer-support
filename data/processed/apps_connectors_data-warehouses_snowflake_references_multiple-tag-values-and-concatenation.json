{
  "source_url": "apps_connectors_data-warehouses_snowflake_references_multiple-tag-values-and-concatenation.html",
  "text": "Multiple tag values and concatenation | Atlan Documentation\nSkip to main content\nOn this page\nAtlan supports assigning multiple tag values to a single Snowflake object. When multiple tag values are assigned, Atlan concatenates them into a single string using a configurable delimiter.\nRequirements\nâ\nBoth\nreverse sync\nand\nconcatenation\nmust be enabled for multi-value synchronization to work.\nConstraints\nâ\nWhen configuring multiple tag values, keep the following constraints in mind:\nThe chosen delimiter\ncan't\nappear inside any tag value to prevent parsing errors.\nThe concatenated tag values length must not exceed\n256 characters\n.\nIf the\nallowed list\nis enabled for a tag in Snowflake, concatenated tag values that you attach to Snowflake objects must come from the tagâs predefined list. To use a new value, add it to the list.\nEach tag supports up to\n300 values\n. For more information, see\nSnowflake tag quota for objects\n.\nHow concatenation works\nâ\nImportant\nTag concatenation is an Atlan feature. Concatenated values created in Atlan are synced to Snowflake. However, if you concatenate tag values in Snowflake workflows, those concatenated references won't be synced back to Atlan.\nAtlan manages multiple tag values by concatenating them into a single string that can be synchronized back to Snowflake. The process involves sorting, concatenation, and synchronization behaviors described below.\nSingle values\nâ\nWhen only one value is assigned to a tag, no concatenation occurs. The single value is sent as-is to Snowflake.\nFor example, if you have a tag\ncost_center\nand assign only the value\nfinance\nto an object, the result in Snowflake is the single value\nfinance\nwithout any concatenation.\nMultiple values\nâ\nYou can assign multiple values to a single tag for any object in Atlan. When multiple values are assigned, they're concatenated into a single string using a delimiter character.\nFor example, if you have a tag\ncost_center\nand assign the values\nfinance\n,\nengineering\n, and\nsales\nto an object with comma as the delimiter, the result is the concatenated string\nengineering,finance,sales\n.\nSorting\nâ\nTag values are sorted alphabetically before concatenation to maintain consistent ordering.\nFor example, if you have a tag\nenvironment\nwith values\nproduction\n,\ndevelopment\n, and\nstaging\nassigned to an object and use a comma (\n,\n) as your delimiter, Atlan sorts them alphabetically (\ndevelopment\n,\nproduction\n,\nstaging\n) and concatenates them as:\ndevelopment,production,staging\n.\nReverse sync\nâ\nConcatenation and reverse sync apply at the schema level for imported Snowflake tags. When reverse sync is enabled, the concatenated tag values are synchronized back to the corresponding objects in Snowflake.\nUpdates and removals\nâ\nWhen you update or remove tag assignments in Atlan, these changes can be synchronized back to Snowflake and depend on the combination of reverse sync and concatenation settings:\nWhen\nreverse sync is OFF\n: Snowflake isn't updated\nWhen\nreverse sync is ON\nbut\nconcatenation is OFF\n: Only one tag value (typically the latest) is sent to Snowflake\nWhen\nboth reverse sync and concatenation are ON\n: All tag values are concatenated and sent as a single string\nSee also\nâ\nSnowflake object tagging introduction\n- Learn about Snowflake's tag capabilities, quotas, and supported objects\nRequirements\nConstraints\nHow concatenation works\nSee also",
  "source_type": "docs"
}