{
  "source_url": "patterns_create_gds.html",
  "text": "Manage Google Data Studio assets - Developer\nSkip to content\nManage Google Data Studio assets\n¶\nOperations on Google Data Studio assets (connections, data sources, reports).\nIn general, these should be:\nCreated in top-down order\n(connection, then data sources and reports)\nDeleted in bottom-up order (data sources and reports, then connections)\n1\nerDiagram\nConnection ||--o{ DataStudioAsset : contains\nAsset structure\n¶\nConnection\n¶\n7.0.0\n4.0.0\nA Google Data Studio\nconnection\nrequires a\nname\nand\nqualifiedName\n. For creation, specific settings are also required to distinguish it as a Google Data Studio connection rather than another type of connection. In addition,\nat least one\nof\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nJava\nPython\nKotlin\nRaw REST API\nCreate a Google Data Studio connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nString\nadminRoleGuid\n=\nclient\n.\ngetRoleCache\n().\ngetIdForName\n(\n\"$admin\"\n);\n// (1)\nConnection\nconnection\n=\nConnection\n.\ncreator\n(\n// (2)\n\"gds-connection\"\n,\n// (3)\nAtlanConnectorType\n.\nDATASTUDIO\n,\n// (4)\nList\n.\nof\n(\nadminRoleGuid\n),\n// (5)\nList\n.\nof\n(\n\"group2\"\n),\n// (6)\nList\n.\nof\n(\n\"jsmith\"\n))\n// (7)\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\nconnection\n.\nsave\n(\nclient\n);\n// (8)\nString\nconnectionQualifiedName\n=\nresponse\n.\ngetCreatedAssets\n().\nget\n(\n0\n).\ngetQualifiedName\n();\n// (9)\nRetrieve the GUID for the admin role, to use later for defining the roles that can administer the connection.\nBuild up the minimum request to create a connection.\nProvide a human-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nSet the type of connection to Google Data Studio.\nList the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nActually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nRetrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.)\nCreate a GDS connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nConnection\n,\nDataStudioAsset\nfrom\npyatlan.model.enums\nimport\nAtlanConnectorType\nclient\n=\nAtlanClient\n()\nadmin_role_guid\n=\nclient\n.\nrole_cache\n.\nget_id_for_name\n(\n\"$admin\"\n)\n# (1)\nconnection\n=\nConnection\n.\ncreator\n(\n# (2)\nclient\n=\nclient\n,\n# (3)\nname\n=\n\"gds-connection\"\n,\n# (4)\nconnector_type\n=\nAtlanConnectorType\n.\nDATASTUDIO\n,\n# (5)\nadmin_roles\n=\n[\nadmin_role_guid\n],\n# (6)\nadmin_groups\n=\n[\n\"group2\"\n],\n# (7)\nadmin_users\n=\n[\n\"jsmith\"\n]\n# (8)\n)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\nconnection\n)\n# (9)\nconnection_qualified_name\n=\nresponse\n.\nassets_created\n(\nasset_type\n=\nConnection\n)[\n0\n]\n.\nqualified_name\n# (10)\nRetrieve the GUID for the admin role, to use later for defining the roles that can administer the connection.\nBuild up the minimum request to create a connection.\nYou must provide a client instance.\nProvide a human-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nSet the type of connection to Google Data Studio.\nList the workspace roles that should be able to administer the connection (or\nNone\nif none) . All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nIt's important to note that the provided admin roles, groups, or users pertain to Atlan and not Google Data Studio. They define who has administrative control over this connection within Atlan.\nList the group names that can administer this connection (or\nNone\nif none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nIt's important to note that the provided admin roles, groups, or users pertain to Atlan and not Google Data Studio. They define who has administrative control over this connection within Atlan.\nList the user names that can administer this connection (or\nNone\nif none). Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nIt's important to note that the provided admin roles, groups, or users pertain to Atlan and not Google Data Studio. They define who has administrative control over this connection within Atlan.\nActually call Atlan to create the connection.\nRetrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.)\nCreate a Google Data Studio connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nval\nadminRoleGuid\n=\nclient\n.\nroleCache\n.\ngetIdForName\n(\n\"\\\n$\nadmin\n\"\n)\n// (1)\nval\nconnection\n=\nConnection\n.\ncreator\n(\n// (2)\n\"gds-connection\"\n,\n// (3)\nAtlanConnectorType\n.\nDATASTUDIO\n,\n// (4)\nlistOf\n(\nadminRoleGuid\n),\n// (5)\nlistOf\n(\n\"group2\"\n),\n// (6)\nlistOf\n(\n\"jsmith\"\n))\n// (7)\n.\nbuild\n()\nval\nresponse\n=\nconnection\n.\nsave\n(\nclient\n)\n// (8)\nval\nconnectionQualifiedName\n=\nresponse\n.\ncreatedAssets\n[\n0\n]\n.\nqualifiedName\n// (9)\nRetrieve the GUID for the admin role, to use later for defining the roles that can administer the connection.\nBuild up the minimum request to create a connection.\nProvide a human-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nSet the type of connection to Google Data Studio.\nList the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nActually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nRetrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.)\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"Connection\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"gds-connection\"\n,\n// (2)\n\"connectorName\"\n:\n\"datastudio\"\n,\n// (3)\n\"qualifiedName\"\n:\n\"default/datastudio/123456789\"\n,\n// (4)\n\"category\"\n:\n\"bi\"\n,\n// (5)\n\"adminRoles\"\n:\n[\n// (6)\n\"e7ae0295-c60a-469a-bd2c-fb903943aa02\"\n],\n\"adminGroups\"\n:\n[\n// (7)\n\"group2\"\n],\n\"adminUsers\"\n:\n[\n// (8)\n\"jsmith\"\n]\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nConnection\n.\nHuman-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nThe\nconnectorName\nmust be exactly\ndatastudio\n.\nThe\nqualifiedName\nshould follow the pattern:\ndefault/datastudio/<epoch>\n, where\n<epoch>\nis the time in milliseconds at which the connection is being created.\nThe\ncategory\nmust be\nbi\n.\nList any workspace roles that can administer this connection. All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList any groups that can administer this connection. All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList any users that can administer this connection. Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nAccess policies\nAtlan creates the policies that grant access to a connection, including the ability to retrieve the connection and to create assets within it, asynchronously. It can take several seconds (even up to approximately 30 seconds) before these are in place after creating the connection.\nYou may therefore need to wait before you'll be able to create the assets below within the connection.\nTo confirm access,\nretrieve the connection\nafter it has been created. The SDKs' retry loops will automatically retry until the connection can be successfully retrieved. At that point, your API token has permission to create the other assets.\nNote: if you are\nreusing\nan existing connection rather than creating one via your API token, you must give your API token a persona that has access to that connection. Otherwise all attempts to create, read, update, or delete assets within that connection will fail due to a lack of permissions.\nDataStudioAsset (report)\n¶\n2.0.0\n4.0.0\nA Google Data Studio\nreport asset\nrequires a\nname\nand a\nqualifiedName\n. For creation, you also need to specify the\nconnectionQualifiedName\nof the connection for the workspace and set the\ndataStudioAssetType\nto\nREPORT\n.\nJava\nPython\nKotlin\nRaw REST API\nCreate a Google Data Studio report\n11\n12\n13\n14\n15\n16\n17\nDataStudioAsset\nreport\n=\nDataStudioAsset\n.\ncreator\n(\n// (1)\n\"gds-report\"\n,\n// (2)\nconnectionQualifiedName\n,\n// (3)\nGoogleDataStudioAssetType\n.\nREPORT\n,\n// (4)\n\"identifier-from-gds\"\n)\n// (5)\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\nreport\n.\nsave\n(\nclient\n);\n// (6)\nBuild up the minimum request to create a report asset.\nProvide a human-readable name for your report asset.\nProvide the qualifiedName of the connection for this report asset.\nSpecify the type of the asset, to ensure we are creating a report asset.\n(Recommended) Provide the unique identifier of this asset, from Google Data Studio itself. This will allow you to reconstruct the qualifiedName, for example if you later want to update this same asset. Alternatively, you can leave out this final parameter and a random UUID will be generated for you; however, you will not have a way to reconstruct this later for more efficient updates.\nActually call Atlan to create the report asset. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nCreate a Google Data Studio report\n17\n18\n19\n20\n21\n22\nreport\n=\nDataStudioAsset\n.\ncreator\n(\n# (1)\nname\n=\n\"gds-report\"\n,\n# (2)\nconnection_qualified_name\n=\nconnection_qualified_name\n# (3)\ndata_studio_asset_type\n=\nGoogleDataStudioAssetType\n.\nREPORT\n# (4)\n)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\nreport\n)\n# (5)\nBuild up the minimum request to create a report asset.\nProvide a human-readable name for your report asset.\nProvide the\nqualified_name\nof the connection for this report asset.\nSpecify the type of the asset, to ensure we are creating a report asset.\nActually call Atlan to create the report asset.\nCreate a Google Data Studio report\n11\n12\n13\n14\n15\n16\n17\nval\nreport\n=\nDataStudioAsset\n.\ncreator\n(\n// (1)\n\"gds-report\"\n,\n// (2)\nconnectionQualifiedName\n,\n// (3)\nGoogleDataStudioAssetType\n.\nREPORT\n,\n// (4)\n\"identifier-from-gds\"\n)\n// (5)\n.\nbuild\n()\nval\nresponse\n=\nreport\n.\nsave\n(\nclient\n)\n// (6)\nBuild up the minimum request to create a report asset.\nProvide a human-readable name for your report asset.\nProvide the qualifiedName of the connection for this report asset.\nSpecify the type of the asset, to ensure we are creating a report asset.\n(Recommended) Provide the unique identifier of this asset, from Google Data Studio itself. This will allow you to reconstruct the qualifiedName, for example if you later want to update this same asset. Alternatively, you can leave out this final parameter and a random UUID will be generated for you; however, you will not have a way to reconstruct this later for more efficient updates.\nActually call Atlan to create the report asset. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"DataStudioAsset\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"gds-report\"\n,\n// (2)\n\"qualifiedName\"\n:\n\"default/datastudio/123456789/gds-report\"\n,\n// (3)\n\"connectionQualifiedName\"\n:\n\"default/datastudio/123456789\"\n,\n// (4)\n\"connectorName\"\n:\n\"datastudio\"\n,\n// (5)\n\"dataStudioAssetType\"\n:\n\"REPORT\"\n// (6)\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nDataStudioAsset\n.\nHuman-readable name for your asset.\nThe\nqualifiedName\nshould follow the pattern:\ndefault/datastudio/<epoch>/<asset_name>\n, where\ndefault/datastudio/<epoch>\nis the qualifiedName of the connection for this asset and\n<asset_name>\nis the name of the asset.\nThe\nconnectionQualifiedName\nmust be the exact qualifiedName of the connection for this asset.\nThe\nconnectorName\nmust be exactly\ndatastudio\n.\nThe\ndataStudioAssetType\nmust be exactly\nREPORT\n.\nDataStudioAsset (source)\n¶\n2.0.0\n4.0.0\nA Google Data Studio\ndata source asset\nrequires a\nname\nand a\nqualifiedName\n. For creation, you also need to specify the\nconnectionQualifiedName\nof the connection for the workspace and set the\ndataStudioAssetType\nto\nDATA_SOURCE\n.\nJava\nPython\nKotlin\nRaw REST API\nCreate a Google Data Studio data source\n11\n12\n13\n14\n15\n16\n17\nDataStudioAsset\nsource\n=\nDataStudioAsset\n.\ncreator\n(\n// (1)\n\"gds-source\"\n,\n// (2)\nconnectionQualifiedName\n,\n// (3)\nGoogleDataStudioAssetType\n.\nDATA_SOURCE\n,\n// (4)\n\"identifier-from-gds\"\n)\n// (5)\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\nsource\n.\nsave\n(\nclient\n);\n// (6)\nBuild up the minimum request to create a data source asset.\nProvide a human-readable name for your data source asset.\nProvide the qualifiedName of the connection for this data source asset.\nSpecify the type of the asset, to ensure we are creating a data source asset.\n(Recommended) Provide the unique identifier of this asset, from Google Data Studio itself. This will allow you to reconstruct the qualifiedName, for example if you later want to update this same asset. Alternatively, you can leave out this final parameter and a random UUID will be generated for you; however, you will not have a way to reconstruct this later for more efficient updates.\nActually call Atlan to create the data source asset. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nCreate a Google Data Studio data source\n17\n18\n19\n20\n21\n22\nsource\n=\nDataStudioAsset\n.\ncreator\n(\n# (1)\nname\n=\n\"gds-source\"\n,\n# (2)\nconnection_qualified_name\n=\nconnection_qualified_name\n# (3)\ndata_studio_asset_type\n=\nGoogleDataStudioAssetType\n.\nDATA_SOURCE\n# (4)\n)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\nsource\n)\n# (5)\nBuild up the minimum request to create a data source asset.\nProvide a human-readable name for your data source asset.\nProvide the\nqualified_name\nof the connection for this data source asset.\nSpecify the type of the asset, to ensure we are creating a data source asset.\nActually call Atlan to create the data source asset.\nCreate a Google Data Studio data source\n11\n12\n13\n14\n15\n16\n17\nval\nsource\n=\nDataStudioAsset\n.\ncreator\n(\n// (1)\n\"gds-source\"\n,\n// (2)\nconnectionQualifiedName\n,\n// (3)\nGoogleDataStudioAssetType\n.\nDATA_SOURCE\n,\n// (4)\n\"identifier-from-gds\"\n)\n// (5)\n.\nbuild\n()\nval\nresponse\n=\nsource\n.\nsave\n(\nclient\n)\n// (6)\nBuild up the minimum request to create a data source asset.\nProvide a human-readable name for your data source asset.\nProvide the qualifiedName of the connection for this data source asset.\nSpecify the type of the asset, to ensure we are creating a data source asset.\n(Recommended) Provide the unique identifier of this asset, from Google Data Studio itself. This will allow you to reconstruct the qualifiedName, for example if you later want to update this same asset. Alternatively, you can leave out this final parameter and a random UUID will be generated for you; however, you will not have a way to reconstruct this later for more efficient updates.\nActually call Atlan to create the data source asset. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"DataStudioAsset\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"gds-source\"\n,\n// (2)\n\"qualifiedName\"\n:\n\"default/datastudio/123456789/gds-source\"\n,\n// (3)\n\"connectionQualifiedName\"\n:\n\"default/datastudio/123456789\"\n,\n// (4)\n\"connectorName\"\n:\n\"datastudio\"\n,\n// (5)\n\"dataStudioAssetType\"\n:\n\"DATA_SOURCE\"\n// (6)\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nDataStudioAsset\n.\nHuman-readable name for your asset.\nThe\nqualifiedName\nshould follow the pattern:\ndefault/datastudio/<epoch>/<asset_name>\n, where\ndefault/datastudio/<epoch>\nis the qualifiedName of the connection for this asset and\n<asset_name>\nis the name of the asset.\nThe\nconnectionQualifiedName\nmust be the exact qualifiedName of the connection for this asset.\nThe\nconnectorName\nmust be exactly\ndatastudio\n.\nThe\ndataStudioAssetType\nmust be exactly\nDATA_SOURCE\n.\nAvailable relationships\n¶\nEvery level of the business intelligence structure is an\nAsset\n, and can therefore be related to the following other assets.\nerDiagram\nAsset }o--o{ AtlasGlossaryTerm : meanings\nAsset ||--o{ Link : links\nAsset ||--o| Readme : readme\nAsset }o--o{ Process : inputToProcesses\nAsset }o--o{ Process : outputFromProcesses\nAtlasGlossaryTerm\n¶\nA\nglossary term\nprovides meaning to an asset. The\nlink terms to assets snippet\nprovides more detail on setting this relationship.\nLink\n¶\nA\nlink\nprovides additional context to an asset, by providing a URL to additional information.\nReadme\n¶\nA\nREADME\nprovides rich documentation for an asset. The\nadd asset READMEs snippet\nprovides more detail on setting this relationship.\nProcess\n¶\nA\nprocess\nprovides lineage information for an asset. An asset can be both an input and an output for one or more processes. The\nlineage snippets\nprovide more detail on creating and working with lineage.\nAlthough if you want to delete everything in a connection, your better avenue is the packaged\nconnection delete utility\nin the UI.\n↩\n2022-09-09\n2025-06-11\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
  "source_type": "sdk"
}