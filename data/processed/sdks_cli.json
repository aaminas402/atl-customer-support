{
  "source_url": "sdks_cli.html",
  "text": "Atlan CLI - Developer\nSkip to content\nAtlan CLI\nÂ¶\nLimited functionality (so far)\nYou can use Atlan's command-line interface (CLI) to manage some metadata in Atlan. Currently data contracts and metadata for a limited set of asset types can be managed through the CLI.\nObtain the CLI\nÂ¶\n0.1.0\nFor now, the CLI must be downloaded as a pre-built binary:\nDisclaimer â€” closed preview\nThis feature is in closed preview and therefore any download and installation from this link will be subject to the terms applicable to\nProduct Release Stages\n. Contact your Atlan Customer Success Manager for your preview today.\nIf your organization is already part of the closed preview, your installation of the feature from this link shall become subject to the terms and scope of preview as agreed with your organization. Accordingly, any use of the feature outside the agreed scope may result in revocation of the closed preview for your organization. Please contact your system administrator before downloading.\nHomebrew\nMacOS (M1)\nMacOS (Intel)\nLinux\nWindows\nWindows\nRecommended\nWhen installed via Homebrew, you can easily keep things up-to-date. If you do not use it already, see Homebrew's own installation documents for\nsetting up Homebrew itself\n.\nbrew\ntap\natlanhq/atlan\nbrew\ninstall\natlan\ncurl\n-o\natlan.tgz\n-L\nhttps://github.com/atlanhq/atlan-cli-releases/releases/latest/download/atlan_Darwin_arm64.tar.gz\ntar\nxf\natlan.tgz\ncurl\n-o\natlan.tgz\n-L\nhttps://github.com/atlanhq/atlan-cli-releases/releases/latest/download/atlan_Darwin_amd64.tar.gz\ntar\nxf\natlan.tgz\ncurl\n-o\natlan.tgz\n-L\nhttps://github.com/atlanhq/atlan-cli-releases/releases/latest/download/atlan_Linux_amd64.tar.gz\ntar\n-zxf\natlan.tgz\ncurl\n-o\natlan.zip\n-L\nhttps://github.com/atlanhq/atlan-cli-releases/releases/latest/download/atlan_Windows_amd64.zip\nunzip\natlan.zip\nConfigure the CLI\nÂ¶\n0.1.0\nYou can configure the CLI using a config file or in some cases environment variables, with the following minimum settings\n1\n:\n.atlan/config.yaml\n1\n2\n3\n4\n5\natlan_api_key\n:\neyZid92...\n# (1)\natlan_base_url\n:\nhttps://tenant.atlan.com\n# (2)\nlog\n:\nenabled\n:\nfalse\n# (3)\nlevel\n:\ninfo\n# (4)\nAn API token that has access to your assets.\nThe base URL of your tenant (including the\nhttps://\n).\n(Optional) Enable logging to produce more details on what the CLI is doing.\nWhen logging is enabled, specify the level of verbosity.\nEnvironment variables\n1\nATLAN_API_KEY\n=\neyZid92...\n# (1)\nAn API token that has access to your assets.\nDefine data sources\nÂ¶\nYou should also define data sources in the config file:\n.atlan/config.yaml\n6\n7\n8\n9\n10\n11\n12\ndata_source snowflake\n:\n# (1)\ntype\n:\nsnowflake\n# (2)\nconnection\n:\n# (3)\nname\n:\nsnowflake-prod\n# (4)\nqualified_name\n:\n\"default/snowflake/1234567890\"\n# (5)\ndatabase\n:\ndb\n# (6)\nschema\n:\nanalytics\n# (7)\nEach data source definition must start with\ndata_source\n, followed by a space and a unique reference name for the data source (\nsnowflake\nin this example).\nReference name is your choice\nThe reference name you give in the configuration file is only used here and as a reference in any data contracts you define. It need not match the name of the connection or data source in Atlan itself.\nYou must indicate the type of connector for the data source (see\nconnector types\nfor options).\nDetails of the connection must also be provided.\nYou must provide the\nname\nof the connection, as it appears in Atlan.\nYou must provide the unique\nqualified_name\nof the connection in Atlan.\n(Optional) You can also specify the database to use for this connection's assets by default, if none is specified in the data contract.\n(Optional) You can also specify the schema to use for this connection's assets by default, if none is specified in the data contract.\nThese ensure the CLI can map the details you specify in your data contract to the appropriate corresponding asset in Atlan.\nWhat's next?\nÂ¶\nWith the CLI, you can:\nManage data contracts\nUpload and download files\nfrom Atlan's backing object store\nSync metadata\nto a limited set of asset types\nIntegrate data contracts with CI/CD\nprocessing\nWhen both are specified, environment variables will take precedence.\nâ†©\n2024-04-25\n2024-09-27\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better ðŸ’™\nGoogle Analytics\nAccept\nReject\nManage settings",
  "source_type": "sdk"
}