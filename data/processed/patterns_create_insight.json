{
  "source_url": "patterns_create_insight.html",
  "text": "Manage Insights assets - Developer\nSkip to content\nManage Insights assets (Collection, Folder, Query)\n¶\nIn general, these should be:\nCreated in top-down order\n(collection, folder, query)\nDeleted in bottom-up order (query, folder, collection)\n1\nerDiagram\nCollection ||--o{ Folder : contains\nFolder ||--o{ Query : contains\nCollection\n¶\n3.1.2\n4.0.0\nTo create a\nCollection\n:\nJava\nPython\nKotlin\nRaw REST API\nCreate a collection\n1\n2\n3\n4\nAtlanCollection\ncollection\n=\nAtlanCollection\n.\ncreator\n(\nclient\n,\n\"MyCollection\"\n)\n.\nadminGroup\n(\n\"admins\"\n)\n.\nbuild\n();\n// (1)\nAssetMutationResponse\nresponse\n=\ncollection\n.\nsave\n(\nclient\n);\n// (2)\nBuild the minimum request to create a collection.\nprovide an instance of\nAtlanClient\n.\nspecify a human-readable name for your collection.\n(optional)\nspecify the name of the group that can administer this collection.\nYou can use also use\nadminUsers\n,\nviewerUsers\n,\nownerUsers\n, etc to manage different levels of access control for the collection.\nActually call Atlan to create the collection. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nCreate a collection\n1\n2\n3\n4\n5\n6\n7\n8\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nCollection\nclient\n=\nAtlanClient\n()\ncollection\n=\nCollection\n.\ncreator\n(\nclient\n=\nclient\n,\nname\n=\n\"my-collection\"\n)\n# (1)\ncollection\n.\nadmin_groups\n=\n[\n\"admins\"\n]\n# (2)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\ncollection\n)\n# (3)\nBuild the minimum request to create a collection\nprovide an instance of\nAtlanClient\n.\nspecify a human-readable name for your collection.\n(optional)\nSpecify the name of the group that can administer this collection.\nYou can use also use\nadminUsers\n,\nviewerUsers\n,\nownerUsers\n, etc to manage\ndifferent levels of access control for the collection.\nActually call Atlan to create the collection.\nCreate a collection\n1\n2\n3\n4\nval\ncollection\n=\nAtlanCollection\n.\ncreator\n(\nclient\n,\n\"MyCollection\"\n)\n.\nadminGroup\n(\n\"admins\"\n)\n.\nbuild\n()\n// (1)\nval\nresponse\n=\ncollection\n.\nsave\n(\nclient\n)\n// (2)\nBuild the minimum request to create a collection.\nprovide an instance of\nAtlanClient\n.\nspecify a human-readable name for your collection.\n(optional)\nspecify the name of the group that can administer this collection.\nYou can use also use\nadminUsers\n,\nviewerUsers\n,\nownerUsers\n, etc to manage different levels of access control for the collection.\nActually call Atlan to create the collection. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"Collection\"\n,\n\"attributes\"\n:\n{\n\"qualifiedName\"\n:\n\"default/collection/service-account-apikey-9468b3e4-d30d-98ba-87d2-f080841a99ef/a08e5dcb-38bd-47d2-b2ea-e439cd0bbe22\"\n,\n// (1)\n\"name\"\n:\n\"MyCollection\"\n,\n// (2)\n\"adminGroups\"\n:\n[\n// (3)\n\"admins\"\n]\n}\n}\n]\n}\nWhen creating a collection through API tokens, make sure your qualified\nname follows this convention:\ndefault/collection/<api-token-username-here>/<some-uuid4-string>\n.\nSpecify a human-readable name for your collection.\n(optional)\nSpecify the name of the group that can administer this collection.\nYou can use also use\nadminUsers\n,\nviewerUsers\n,\nownerUsers\n, etc to manage\ndifferent levels of access control for the collection.\nFolder\n¶\n3.1.2\n4.0.0\nTo create a\nFolder\n:\nJava\nPython\nKotlin\nRaw REST API\nCreate a folder\n5\n6\nFolder\nfolder\n=\nFolder\n.\ncreator\n(\n\"MyFolder\"\n,\ncollection\n).\nbuild\n();\n// (1)\nAssetMutationResponse\nresponse\n=\nfolder\n.\nsave\n(\nclient\n);\n// (2)\nBuild the minimum request to create a folder.\nspecify a human-readable name for your folder.\nprovide an instance of\nCollection\n, or if you want to create a sub-folder, provide an instance of\nFolder\n.\nActually call Atlan to create the folder. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nCreate a folder\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nFolder\nclient\n=\nAtlanClient\n()\nfolder\n=\nFolder\n.\ncreator\n(\nname\n=\n\"my-folder\"\n,\ncollection_qualified_name\n=\n\"default/collection/user/abcdxyz\"\n,\n)\n# (1)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\nfolder\n)\n# (2)\nBuild the minimum request to create a folder.\nspecify a human-readable name for your folder.\nprovide the\nqualifiedName\nof the\nCollection\n, or\nif you want to create a sub-folder, provide the\nparent_folder_qualified_name\n.\nActually call Atlan to create the folder.\nCreate a folder\n5\n6\nval\nfolder\n=\nFolder\n.\ncreator\n(\n\"MyFolder\"\n,\ncollection\n).\nbuild\n()\n// (1)\nval\nresponse\n=\nfolder\n.\nsave\n(\nclient\n)\n// (2)\nBuild the minimum request to create a folder.\nspecify a human-readable name for your folder.\nprovide an instance of\nCollection\n, or if you want to create a sub-folder, provide an instance of\nFolder\n.\nActually call Atlan to create the folder. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"Folder\"\n,\n\"attributes\"\n:\n{\n\"qualifiedName\"\n:\n\"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi/MyFolder\"\n,\n// (1)\n\"name\"\n:\n\"MyFolder\"\n,\n// (2)\n\"parentQualifiedName\"\n:\n\"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi\"\n,\n// (3)\n\"collectionQualifiedName\"\n:\n\"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi\"\n,\n// (4)\n\"parent\"\n:\n{\n\"typeName\"\n:\n\"Collection\"\n,\n// (5)\n\"uniqueAttributes\"\n:\n{\n\"qualifiedName\"\n:\n\"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi\"\n}\n}\n}\n}\n]\n}\nWhen creating a folder through API tokens, make sure your qualified\nname follows this convention:\n<parent-qualified-name>/<folder-name>\n.\nSpecify a human-readable name for your folder.\nIn this example, we're creating a folder inside an existing collection;\ntherefore, we specify the\nqualifiedName\nof the collection here. If you're\ncreating a sub-folder, you should provide the\nqualifiedName\nof the parent\nFolder\n.\nSpecify the\nqualifiedName\nof the collection.\nIn this example, we're creating a folder inside an existing collection;\ntherefore, we specify the\nqualifiedName\nof the collection here. If you're\ncreating a sub-folder, you should provide the\nqualifiedName\nof the parent\nFolder\n.\nQuery\n¶\n3.1.2\n4.0.0\nTo create a\nQuery\n:\nJava\nPython\nKotlin\nRaw REST API\nCreate a query\n7\n8\n9\n10\n11\nString\nschemaQualifiedName\n=\n\"default/snowflake/1735591234/DB/SCHEMA\"\n;\nAtlanQuery\nquery\n=\nAtlanQuery\n.\ncreator\n(\n\"MyQuery\"\n,\nfolder\n)\n// (1)\n.\nwithRawQuery\n(\nschemaQualifiedName\n,\n\"SELECT * FROM CUSTOMERS;\"\n)\n// (2)\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\nquery\n.\nsave\n(\nclient\n);\n// (3)\nBuild the minimum request to create a query.\nspecify a human-readable name for your query.\nprovide an instance of\nFolder\n, or if you want to create a query inside a collectin, provide an instance of\nCollection\n.\nIn this example, we're creating a query for an existing\nSnowflake\nschema.\nActually call Atlan to create the folder. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nCreate a query\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nQuery\nclient\n=\nAtlanClient\n()\nschema_qualified_name\n=\n\"default/snowflake/1735591234/DB/SCHEMA\"\nquery\n=\nQuery\n.\ncreator\n(\nname\n=\n\"my-query\"\n,\nparent_folder_qualified_name\n=\n\"default/collection/user/abc/folder/user/xyz\"\n)\n# (1)\nquery\n.\nwith_raw_query\n(\nschema_qualified_name\n=\nschema_qualified_name\n,\nquery\n=\n\"SELECT * FROM CUSTOMERS;\"\n)\n# (2)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\nquery\n)\n# (3)\nBuild the minimum request to create a query.\nspecify a human-readable name for your query.\nprovide the qualifedName of the\nFolder\n, or if you want\nto create a query inside a collection, provide the\ncollection_qualified_name\n.\nIn this example, we're creating a query for an existing\nSnowflake\nschema.\nActually call Atlan to create the folder.\nCreate a query\n7\n8\n9\n10\n11\nval\nschemaQualifiedName\n=\n\"default/snowflake/1735591234/DB/SCHEMA\"\nval\nquery\n=\nAtlanQuery\n.\ncreator\n(\n\"MyQuery\"\n,\nfolder\n)\n// (1)\n.\nwithRawQuery\n(\nschemaQualifiedName\n,\n\"SELECT * FROM CUSTOMERS;\"\n)\n// (2)\n.\nbuild\n()\nval\nresponse\n=\nquery\n.\nsave\n(\nclient\n)\n// (3)\nBuild the minimum request to create a query.\nspecify a human-readable name for your query.\nprovide an instance of\nFolder\n, or if you want to create a query inside a collectin, provide an instance of\nCollection\n.\nIn this example, we're creating a query for an existing\nSnowflake\nschema.\nActually call Atlan to create the folder. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"Query\"\n,\n\"attributes\"\n:\n{\n\"qualifiedName\"\n:\n\"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi/folder/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/V2ddMTTMJItUy1aV6biSh/MyQuery\"\n,\n// (1)\n\"name\"\n:\n\"MyQuery\"\n,\n// (2)\n\"connectionName\"\n:\n\"snowflake\"\n,\n// (3)\n\"connectionQualifiedName\"\n:\n\"default/snowflake/1735591234\"\n,\n// (4)\n\"rawQueryText\"\n:\n\"SELECT * FROM CUSTOMERS;\"\n,\n// (5)\n\"defaultSchemaQualifiedName\"\n:\n\"default/snowflake/1735591234/DB/SCHEMA\"\n,\n// (6)\n\"defaultDatabaseQualifiedName\"\n:\n\"default/snowflake/1735591234/DB\"\n,\n// (7)\n\"variablesSchemaBase64\"\n:\n\"eyJjdXN0b212YXJpYWJsZXNEYXRlVGltZUZvcm1hdCI6IHsiZGVmYXVsdERhdGVGb3JtYXQiOiAiWVlZWS1NTS1ERCIsICJkZWZhdWx0VGltZUZvcm1hdCI6ICJISDptbSJ9LCAiY3VzdG9tVmFyaWFibGVzIjogW119\"\n,\n\"parentQualifiedName\"\n:\n\"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi/folder/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/V2ddMTTMJItUy1aV6biSh\"\n,\n// (8)\n\"collectionQualifiedName\"\n:\n\"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi\"\n,\n// (9)\n\"isVisualQuery\"\n:\nfalse\n,\n// (10)\n\"parent\"\n:\n{\n\"typeName\"\n:\n\"Folder\"\n,\n// (11)\n\"uniqueAttributes\"\n:\n{\n\"qualifiedName\"\n:\n\"default/collection/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/5zNMTC3MUzvfTS4L5QuRi/folder/service-account-apikey-d468b3e4-d30d-48ba-87d2-f080841a59ef/V2ddMTTMJItUy1aV6biSh\"\n}\n}\n}\n}\n]\n}\nWhen creating a query through API tokens, ensure that your\nqualifiedName\nfollows this convention:\n<parent-qualified-name>/<query-name>\n.\nSpecify a human-readable name for your query.\nSince we're creating a query for a\nSnowflake\nschema.\nProvide the\nqualifiedName\nof the\nSnowflake\nconnection.\nSpecify the raw SQL query.\nProvide the\nqualifiedName\nof the\nSnowflake\nschema.\nProvide the\nqualifiedName\nof the\nSnowflake\ndatabase.\nIn this example, we're creating a folder inside an existing collection; therefore, we specify the\nqualifiedName\nof the collection here. If you're creating a sub-folder, you should provide the\nqualifiedName\nof the parent folder.\nSpecify the\nqualifiedName\nof the collection.\nSince this is a non-visual query, ensure it is appropriately marked as such.\nIn this example, we're creating a query inside an existing folder; therefore, we specify the\nqualifiedName\nof the folder here. If you're creating a query inside a collection, you should provide the\nqualifiedName\nof the collection.\nAlthough if you want to delete everything in a connection, your better avenue is the packaged\nconnection delete utility\nin the UI.\n↩\n2024-12-31\n2025-01-16\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
  "source_type": "sdk"
}