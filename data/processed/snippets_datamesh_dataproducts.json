{
  "source_url": "snippets_datamesh_dataproducts.html",
  "text": "Managing data products - Developer\nSkip to content\nManage data products\n¶\nCreate a new data product\n¶\n4.0.0\n2.0.4\nTo create a new data product:\nJava\nPython\nKotlin\nRaw REST API\nCreate a data product\n1\n2\n3\n4\n5\n6\n7\n8\n9\nFluentSearch\nassets\n=\nTable\n.\nselect\n(\nclient\n)\n// (1)\n.\nwhere\n(\nTable\n.\nCERTIFICATE_STATUS\n.\neq\n(\nCertificateStatus\n.\nVERIFIED\n))\n.\nwhere\n(\nTable\n.\nATLAN_TAGS\n.\neq\n(\n\"Marketing\"\n))\n.\nbuild\n();\nDataProduct\ndp\n=\nDataProduct\n.\ncreator\n(\n\"Marketing Influence\"\n,\n// (2)\nDataDomain\n.\nrefByQualifiedName\n(\n\"default/domain/marketing\"\n),\n// (3)\nassets\n)\n// (4)\n.\nbuild\n();\n// (5)\nAssetMutationResponse\nresponse\n=\ndp\n.\nsave\n(\nclient\n);\n// (6)\nWhen defining a data product, you must define the assets within it. These are defined through a search, so that the assets included can be automatically managed. In this example, we are selecting all verified tables that have a tag of\nMarketing\n.\nYou must provide a human-readable name for your data product.\nYou must also provide the domain in which the data product should exist.\nAnd finally the search that was defined earlier, to define which assets to include in the data product.\nYou then need to build the object.\nAnd then you can\nsave()\nthe object you've built to create the new data product in Atlan. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nCreate a data product\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nDataProduct\n,\nTable\nfrom\npyatlan.model.fluent_search\nimport\nCompoundQuery\n,\nFluentSearch\nfrom\npyatlan.model.enums\nimport\nCertificateStatus\nclient\n=\nAtlanClient\n()\nassets\n=\n(\nFluentSearch\n()\n.\nwhere\n(\nCompoundQuery\n.\nactive_assets\n())\n.\nwhere\n(\nCompoundQuery\n.\nasset_type\n(\nTable\n))\n.\nwhere\n(\nTable\n.\nCERTIFICATE_STATUS\n.\neq\n(\nCertificateStatus\n.\nVERIFIED\n.\nvalue\n))\n.\nwhere\n(\nTable\n.\nATLAN_TAGS\n.\neq\n(\n\"Marketing\"\n))\n)\n.\nto_request\n()\n# (1)\nproduct\n=\nDataProduct\n.\ncreator\n(\nname\n=\n\"Marketing Influence\"\n,\n# (2)\nasset_selection\n=\nassets\n,\n# (3)\ndomain_qualified_name\n=\n\"default/domain/marketing\"\n# (4)\n)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\nproduct\n)\n# (5)\nWhen defining a data product, you must define the assets within it. These are defined through a search, so that the assets included can be automatically managed. In this example, we are selecting all verified tables that have a tag of\nMarketing\n.\nYou must provide a human-readable name for your data product.\nYou must provide the index search request that was defined earlier, to define which assets to include in the data product.\nYou must also provide the domain in which the data product should exist.\nAnd then you can\nsave()\nthe object you've built to create the new data product in Atlan.\nCreate a data product\n1\n2\n3\n4\n5\n6\n7\n8\n9\nval\nassets\n=\nTable\n.\nselect\n(\nclient\n)\n// (1)\n.\nwhere\n(\nTable\n.\nCERTIFICATE_STATUS\n.\neq\n(\nCertificateStatus\n.\nVERIFIED\n))\n.\nwhere\n(\nTable\n.\nATLAN_TAGS\n.\neq\n(\n\"Marketing\"\n))\n.\nbuild\n()\nval\ndp\n=\nDataProduct\n.\ncreator\n(\n\"Marketing Influence\"\n,\n// (2)\nDataDomain\n.\nrefByQualifiedName\n(\n\"default/domain/marketing\"\n),\n// (3)\nassets\n)\n// (4)\n.\nbuild\n()\n// (5)\nval\nresponse\n=\ndp\n.\nsave\n(\nclient\n)\n// (6)\nWhen defining a data product, you must define the assets within it. These are defined through a search, so that the assets included can be automatically managed. In this example, we are selecting all verified tables that have a tag of\nMarketing\n.\nYou must provide a human-readable name for your data product.\nYou must also provide the domain in which the data product should exist.\nAnd finally the search that was defined earlier, to define which assets to include in the data product.\nYou then need to build the object.\nAnd then you can\nsave()\nthe object you've built to create the new data product in Atlan. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"DataProduct\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"Marketing Influence\"\n,\n// (2)\n\"qualifiedName\"\n:\n\"default/domain/8S8vbC9hT6iPLMY2ydXqf/super/product/marketingInfluence\"\n,\n// (3)\n\"parentDomainQualifiedName\"\n:\n\"default/domain/8S8vbC9hT6iPLMY2ydXqf/super\"\n,\n// (4)\n\"superDomainQualifiedName\"\n:\n\"default/domain/8S8vbC9hT6iPLMY2ydXqf/super\"\n,\n// (5)\n\"dataProductAssetsDSL\"\n:\n\"{\\\"query\\\": {\\\"attributes\\\": [\\\"__traitNames\\\", \\\"connectorName\\\", \\\"__customAttributes\\\", \\\"certificateStatus\\\", \\\"tenantId\\\", \\\"anchor\\\", \\\"parentQualifiedName\\\", \\\"Query.parentQualifiedName\\\", \\\"AtlasGlossaryTerm.anchor\\\", \\\"databaseName\\\", \\\"schemaName\\\", \\\"parent\\\", \\\"connectionQualifiedName\\\", \\\"collectionQualifiedName\\\", \\\"announcementMessage\\\", \\\"announcementTitle\\\", \\\"announcementType\\\", \\\"announcementUpdatedAt\\\", \\\"announcementUpdatedBy\\\", \\\"allowQuery\\\", \\\"allowQueryPreview\\\", \\\"adminGroups\\\", \\\"adminRoles\\\", \\\"adminUsers\\\", \\\"category\\\", \\\"credentialStrategy\\\", \\\"connectionSSOCredentialGuid\\\", \\\"certificateStatus\\\", \\\"certificateUpdatedAt\\\", \\\"certificateUpdatedBy\\\", \\\"classifications\\\", \\\"connectionId\\\", \\\"connectionQualifiedName\\\", \\\"connectorName\\\", \\\"dataType\\\", \\\"defaultDatabaseQualifiedName\\\", \\\"defaultSchemaQualifiedName\\\", \\\"description\\\", \\\"displayName\\\", \\\"links\\\", \\\"link\\\", \\\"meanings\\\", \\\"name\\\", \\\"ownerGroups\\\", \\\"ownerUsers\\\", \\\"qualifiedName\\\", \\\"typeName\\\", \\\"userDescription\\\", \\\"displayDescription\\\", \\\"subDataType\\\", \\\"rowLimit\\\", \\\"queryTimeout\\\", \\\"previewCredentialStrategy\\\", \\\"policyStrategy\\\", \\\"policyStrategyForSamplePreview\\\", \\\"useObjectStorage\\\", \\\"objectStorageUploadThreshold\\\", \\\"outputPortDataProducts\\\"], \\\"dsl\\\": {\\\"from\\\": 0, \\\"query\\\": {\\\"bool\\\": {\\\"filter\\\": {\\\"bool\\\": {\\\"filter\\\": [{\\\"term\\\": {\\\"__state\\\": {\\\"value\\\": \\\"ACTIVE\\\", \\\"case_insensitive\\\": false}}}, {\\\"term\\\": {\\\"__typeName.keyword\\\": {\\\"value\\\": \\\"Table\\\", \\\"case_insensitive\\\": false}}}, {\\\"term\\\": {\\\"certificateStatus\\\": {\\\"value\\\": \\\"VERIFIED\\\", \\\"case_insensitive\\\": false}}}, {\\\"term\\\": {\\\"__traitNames\\\": {\\\"value\\\": \\\"Marketing\\\", \\\"case_insensitive\\\": false}}}]}}}}}, \\\"suppressLogs\\\": true}, \\\"filterScrubbed\\\": true}\"\n,\n// (6)\n\"dataProductAssetsPlaybookFilter\"\n:\n\"{\\\"condition\\\":\\\"AND\\\",\\\"isGroupLocked\\\":false,\\\"rules\\\":[]}\"\n// (7)\n},\n\"relationshipAttributes\"\n:\n{\n\"dataDomain\"\n:\n{\n\"typeName\"\n:\n\"DataDomain\"\n,\n\"uniqueAttributes\"\n:\n{\n// (8)\n\"qualifiedName\"\n:\n\"default/domain/8S8vbC9hT6iPLMY2ydXqf/super\"\n}\n}\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nDataProduct\n.\nProvide a human-readable name for your data product.\nEnsure the\nqualifiedName\nfollows the pattern:\n<parentDomainQualifiedName>/product/<lowerCamelCaseName>\n.\nProvide a\nparentDomainQualifiedName\nfor the data domain under which you want to create this product.\nProvide a\nsuperDomainQualifiedName\nfor the data domain under which you want to create this product. If creating a product under sub-domains, this should be the qualified name of the root-level domain.\nProvide the DSL that defines the assets to include in the data product as an embedded JSON string.\nUse SDK to create data products\nThe above data products assets DSL requires a filter as a nested object construct within an outer bool, rather than a list or array. It's recommended to create data products via SDK as it handles this complexity automatically.\nSpecify the default playbook filter to define which assets are shown in the data product UI.\nSpecify the\nqualifiedName\nof the data domain under which you want to create this product.\nRetrieve a data product\n¶\n4.0.0\n2.2.1\nTo retrieve a data product by its human-readable name:\nJava\nPython\nKotlin\nRaw REST API\nRetrieve a data product by its human-readable name\n1\n2\n3\nDataProduct\nproduct\n=\nDataProduct\n.\nfindByName\n(\n// (1)\nclient\n,\n\"marketingInfluence\"\n,\nList\n.\nof\n(\n\"certificateStatus\"\n)\n).\nget\n(\n0\n);\nUse\nDataProduct.findByName()\nmethod to retrieve a data product by its human-readable name:\nclient through which to access a tenant.\nname of the data product.\n(optional) a list of attributes to retrieve for the data product, for example\ncertificateStatus\n.\nRetrieve a data product by its human-readable name\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nDataProduct\nclient\n=\nAtlanClient\n()\nproduct\n=\nclient\n.\nasset\n.\nfind_product_by_name\n(\n# (1)\nname\n=\n\"marketingInfluence\"\n,\nattributes\n=\n[\n\"certificateStatus\"\n]\n)\nassert\nproduct\nassert\nproduct\n.\ncertificate_status\nUse\nclient.asset.find_product_by_name()\nmethod to retrieve a data product by its human-readable name:\nname of the data product.\n(optional) a list of attributes to retrieve\nfor the data product, for example\ncertificateStatus\n.\nRetrieve a data product by its human-readable name\n1\n2\n3\nval\nproduct\n=\nDataProduct\n.\nfindByName\n(\n// (1)\nclient\n,\n\"marketingInfluence\"\n,\nlistOf\n(\n\"certificateStatus\"\n)\n).\nget\n(\n0\n)\nUse\nDataProduct.findByName()\nmethod to retrieve a data product by its human-readable name:\nclient through which to access a tenant.\nname of the data product.\n(optional) a list of attributes to retrieve for the data product, for example\ncertificateStatus\n.\nPOST /api/meta/search/indexsearch\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n{\n\"dsl\"\n:\n{\n\"from\"\n:\n0\n,\n\"size\"\n:\n100\n,\n\"aggregations\"\n:\n{},\n\"track_total_hits\"\n:\ntrue\n,\n\"query\"\n:\n{\n\"bool\"\n:\n{\n\"filter\"\n:\n[\n{\n\"term\"\n:\n{\n\"name.keyword\"\n:\n{\n\"value\"\n:\n\"marketingInfluence\"\n// (1)\n}\n}\n},\n{\n\"term\"\n:\n{\n\"__typeName.keyword\"\n:\n{\n\"value\"\n:\n\"DataProduct\"\n}\n}\n}\n]\n}\n},\n\"sort\"\n:\n[\n{\n\"__guid\"\n:\n{\n\"order\"\n:\n\"asc\"\n}\n}\n]\n},\n\"attributes\"\n:\n[\n\"certificateStatus\"\n// (2)\n]\n}\nHuman-readable name of the data product.\n(optional) a list of attributes to retrieve\nfor the data product, for example\ncertificateStatus\n.\nRetrieve all assets linked to a data product\n¶\n4.2.2\n7.0.0\nTo retrieve list of all assets associated with a data product:\nJava\nPython\nKotlin\nRaw REST API\nRetrieve list of all assets linked to a data product\n1\n2\n3\n4\n5\n6\nDataProduct\ndp\n=\nDataProduct\n.\nget\n(\nclient\n,\n\"49abc625-9a03-4733-bdfb-ec0cb5315cac\"\n,\ntrue\n);\n// (1)\nIndexSearchResponse\nresponse\n=\ndp\n.\ngetAssets\n(\nclient\n);\n// (2)\nfor\n(\nAsset\nresult\n:\nresponse\n)\n{\n// Do something with the assets retrieved...\n}\nUse\nDataProduct.get()\nmethod to retrieve the data product by its\nGUID\n.\nUse\nDataProduct.getAssets()\nmethod to retrieve all assets linked to the data product, providing the\nclient\nused to access the tenant.\nRetrieve list of all assets linked to a data product\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nDataProduct\nclient\n=\nAtlanClient\n()\nproduct\n=\nclient\n.\nasset\n.\nget_by_guid\n(\n# (1)\nguid\n=\n\"49abc625-9a03-4733-bdfb-ec0cb5315cac\"\n,\nasset_type\n=\nDataProduct\n)\nresponse\n=\nproduct\n.\nget_assets\n(\nclient\n)\n# (2)\nfor\nassets\nin\nresponse\n:\n//\nDo\nsomething\nwith\nthe\nassets\nretrieved\n...\nassert\nproduct\nassert\nresponse\nUse\nclient.asset.get_by_guid()\nmethod to retrieve the data product by its\nGUID\n.\nUse\nDataProduct.get_assets()\nmethod to retrieve all assets linked to the data product.\nRetrieve list of all assets linked to a data product\n1\n2\n3\n4\n5\n6\nval\nproduct\n=\nDataProduct\n.\nget\n(\nclient\n,\n\"49abc625-9a03-4733-bdfb-ec0cb5315cac\"\n,\ntrue\n);\n// (1)\nval\nresponse\n=\ndp\n.\ngetAssets\n(\nclient\n);\n// (2)\nfor\n(\nresult\nin\nresponse\n)\n{\n// Do something with the assets retrieved...\n}\nUse\nDataProduct.get()\nmethod to retrieve the data product by its\nGUID\n.\nUse\nDataProduct.getAssets()\nmethod to retrieve all assets linked to the data product, providing the\nclient\nused to access the tenant.\nPOST /api/meta/search/indexsearch\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n{\n\"dsl\"\n:\n{\n\"from\"\n:\n0\n,\n\"size\"\n:\n100\n,\n\"aggregations\"\n:\n{},\n\"track_total_hits\"\n:\ntrue\n,\n\"query\"\n:\n{\n\"bool\"\n:\n{\n\"filter\"\n:\n{\n\"bool\"\n:\n{\n\"filter\"\n:\n[\n// (1)\n{\n\"term\"\n:\n{\n\"__state\"\n:\n{\n\"value\"\n:\n\"ACTIVE\"\n,\n\"case_insensitive\"\n:\nfalse\n}\n}\n},\n{\n\"term\"\n:\n{\n\"__typeName.keyword\"\n:\n{\n\"value\"\n:\n\"Table\"\n,\n\"case_insensitive\"\n:\nfalse\n}\n}\n}\n]\n}\n}\n}\n},\n\"sort\"\n:\n[]\n},\n\"attributes\"\n:\n[\n// (2)\n\"certificateStatus\"\n,\n\"connectorName\"\n,\n\"__customAttributes\"\n,\n\"certificateStatus\"\n,\n]\n}\nList the asset type and active status for all assets included in the data product.\n(optional) a list of attributes to retrieve\nfor the data product's list of all assets, for example\ncertificateStatus\n.\nUpdate a data product\n¶\n4.0.0\n2.4.5\nTo update a data product:\nJava\nPython\nKotlin\nRaw REST API\nUpdate a data product\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\nFluentSearch\nassets\n=\nTable\n.\nselect\n(\nclient\n)\n.\nwhere\n(\nTable\n.\nCERTIFICATE_STATUS\n.\neq\n(\nCertificateStatus\n.\nVERIFIED\n))\n.\nwhere\n(\nTable\n.\nATLAN_TAGS\n.\neq\n(\n\"Digital Marketing\"\n))\n.\nbuild\n();\n// (1)\nDataProduct\ndp\n=\nDataProduct\n.\nupdater\n(\n\"default/product/marketingInfluence\"\n,\n// (2)\n\"Marketing Influence\"\n)\n.\nuserDescription\n(\n\"Now with a description!\"\n)\n// (3)\n.\nassetSelection\n(\nAtlan\n.\ngetDefaultClient\n(),\nassets\n)\n.\nbuild\n();\n// (4)\nAssetMutationResponse\nresponse\n=\ndp\n.\nsave\n(\nclient\n);\n// (5)\n(Optional)\nYou can also update the assets within an existing product.\nThese assets are defined through a search, allowing for automatic management.\nIn this example, we select all verified tables that are tagged with\nDigital Marketing\n.\nUse the\nupdater()\nmethod to update a data product,\nproviding the\nqualifiedName\nand\nname\nof the data product.\nYou can chain additional enrichments onto the updater, such as:\nuserDescription\n: updating the product's description.\nassetSelection\n: modifying the assets within the product.\nYou then need to build the object.\nYou can then\nsave()\nthe object you've built to update the data product in Atlan. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nUpdate a data product\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nDataProduct\nclient\n=\nAtlanClient\n()\nassets\n=\n(\nFluentSearch\n()\n.\nwhere\n(\nCompoundQuery\n.\nactive_assets\n())\n.\nwhere\n(\nCompoundQuery\n.\nasset_type\n(\nTable\n))\n.\nwhere\n(\nTable\n.\nCERTIFICATE_STATUS\n.\neq\n(\nCertificateStatus\n.\nVERIFIED\n.\nvalue\n))\n.\nwhere\n(\nTable\n.\nATLAN_TAGS\n.\neq\n(\n\"Digital Marketing\"\n))\n)\n.\nto_request\n()\n# (1)\nproduct\n=\nDataProduct\n.\nupdater\n(\n# (2)\nqualified_name\n=\n\"default/product/marketingInfluence\"\n,\n# (3)\nname\n=\n\"Marketing Influence\"\n,\n# (4)\nasset_selection\n=\nassets\n,\n# (5)\n)\nproduct\n.\nuser_description\n=\n\"Now with a description!\"\n# (6)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\nproduct\n)\n# (7)\n(Optional)\nYou can also update the assets within an existing product.\nThese assets are defined through a search, allowing for automatic management.\nIn this example, we select all verified tables that are tagged with\nDigital Marketing\n.\nUse the\nupdater()\nmethod to update a data product.\nYou must provide the\nqualifiedName\nof the data product.\nYou must provide the\nname\nof the data product.\nOptionally, you can provide an index search request to define the assets to include in the data product.\nYou can then add on any other updates, such as changing the user description of the data product.\nTo update the data product in Atlan, call the\nsave()\nmethod with the object you've built.\nUpdate a data product\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\nval\nassets\n=\nTable\n.\nselect\n(\nclient\n)\n.\nwhere\n(\nTable\n.\nCERTIFICATE_STATUS\n.\neq\n(\nCertificateStatus\n.\nVERIFIED\n))\n.\nwhere\n(\nTable\n.\nATLAN_TAGS\n.\neq\n(\n\"Digital Marketing\"\n))\n.\nbuild\n();\n// (1)\nval\ndp\n=\nDataProduct\n.\nupdater\n(\n\"default/product/marketingInfluence\"\n,\n// (2)\n\"Marketing Influence\"\n)\n.\nuserDescription\n(\n\"Now with a description!\"\n)\n// (3)\n.\nassetSelection\n(\nAtlan\n.\ngetDefaultClient\n(),\nassets\n)\n.\nbuild\n()\n// (4)\nval\nresponse\n=\ndp\n.\nsave\n(\nclient\n)\n// (5)\n(Optional)\nYou can also update the assets within an existing product.\nThese assets are defined through a search, allowing for automatic management.\nIn this example, we select all verified tables that are tagged with\nDigital Marketing\n.\nUse the\nupdater()\nmethod to update a data product,\nproviding the\nqualifiedName\nand\nname\nof the data product.\nYou can chain additional enrichments onto the updater, such as:\nuserDescription\n: updating the product's description.\nassetSelection\n: modifying the assets within the product.\nYou then need to build the object.\nYou can then\nsave()\nthe object you've built to update the data product in Atlan. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"DataProduct\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"Marketing Influence\"\n,\n// (2)\n\"qualifiedName\"\n:\n\"default/product/marketingInfluence\"\n,\n// (3)\n\"userDescription\"\n:\n\"Now with a description!\"\n,\n// (4)\n\"dataProductAssetsDSL\"\n:\n\"{\\\"query\\\": {\\\"attributes\\\": [\\\"__traitNames\\\", \\\"connectorName\\\", \\\"__customAttributes\\\", \\\"certificateStatus\\\", \\\"tenantId\\\", \\\"anchor\\\", \\\"parentQualifiedName\\\", \\\"Query.parentQualifiedName\\\", \\\"AtlasGlossaryTerm.anchor\\\", \\\"databaseName\\\", \\\"schemaName\\\", \\\"parent\\\", \\\"connectionQualifiedName\\\", \\\"collectionQualifiedName\\\", \\\"announcementMessage\\\", \\\"announcementTitle\\\", \\\"announcementType\\\", \\\"announcementUpdatedAt\\\", \\\"announcementUpdatedBy\\\", \\\"allowQuery\\\", \\\"allowQueryPreview\\\", \\\"adminGroups\\\", \\\"adminRoles\\\", \\\"adminUsers\\\", \\\"category\\\", \\\"credentialStrategy\\\", \\\"connectionSSOCredentialGuid\\\", \\\"certificateStatus\\\", \\\"certificateUpdatedAt\\\", \\\"certificateUpdatedBy\\\", \\\"classifications\\\", \\\"connectionId\\\", \\\"connectionQualifiedName\\\", \\\"connectorName\\\", \\\"dataType\\\", \\\"defaultDatabaseQualifiedName\\\", \\\"defaultSchemaQualifiedName\\\", \\\"description\\\", \\\"displayName\\\", \\\"links\\\", \\\"link\\\", \\\"meanings\\\", \\\"name\\\", \\\"ownerGroups\\\", \\\"ownerUsers\\\", \\\"qualifiedName\\\", \\\"typeName\\\", \\\"userDescription\\\", \\\"displayDescription\\\", \\\"subDataType\\\", \\\"rowLimit\\\", \\\"queryTimeout\\\", \\\"previewCredentialStrategy\\\", \\\"policyStrategy\\\", \\\"policyStrategyForSamplePreview\\\", \\\"useObjectStorage\\\", \\\"objectStorageUploadThreshold\\\", \\\"outputPortDataProducts\\\"], \\\"dsl\\\": {\\\"from\\\": 0, \\\"query\\\": {\\\"bool\\\": {\\\"filter\\\": {\\\"bool\\\": {\\\"filter\\\": [{\\\"term\\\": {\\\"__state\\\": {\\\"value\\\": \\\"ACTIVE\\\", \\\"case_insensitive\\\": false}}}, {\\\"term\\\": {\\\"__typeName.keyword\\\": {\\\"value\\\": \\\"Table\\\", \\\"case_insensitive\\\": false}}}, {\\\"term\\\": {\\\"certificateStatus\\\": {\\\"value\\\": \\\"VERIFIED\\\", \\\"case_insensitive\\\": false}}}, {\\\"term\\\": {\\\"__traitNames\\\": {\\\"value\\\": \\\"Digital Marketing\\\", \\\"case_insensitive\\\": false}}}]}}}}}, \\\"suppressLogs\\\": true}, \\\"filterScrubbed\\\": true}\"\n,\n// (5)\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nDataProduct\n.\nHuman-readable name for your data product.\nYou must provide the the\nqualifiedName\nof the data product to update.\nYou can add on any other updates, such as changing the user description of the data product.\n(Optional)\nYou can update the product's assets by providing\na DSL that defines the assets to include in the data product, as an embedded JSON string.\nUse SDK to update data products\nThe above data products assets DSL requires a filter as a\nnested object construct within an outer bool, rather than a list or array.\nIt's recommended to update data products via SDK as it handles this complexity automatically.\nDelete a data product\n¶\n4.0.0\n1.8.1\nSoft-delete (archive)\n¶\nTo soft-delete, or archive, a data product:\nJava\nPython\nKotlin\nRaw REST API\nDelete a data product\n1\nAssetDeletionResponse\nresponse\n=\nDataProduct\n.\ndelete\n(\nclient\n,\n\"218c8144-dc39-43a5-b0c0-9eeb4d11e74a\"\n);\n// (1)\nTo archive a data product in Atlan, call the\nDataProduct.delete()\nmethod with the GUID of the data product. Because this operation will archive the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nDelete a data product\n1\n2\n3\n4\n5\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nclient\n=\nAtlanClient\n()\nclient\n.\nasset\n.\ndelete_by_guid\n(\n\"218c8144-dc39-43a5-b0c0-9eeb4d11e74a\"\n)\n# (1)\nTo archive a data product in Atlan, call the\nasset.delete_by_guid()\nmethod with the GUID of the data product.\nDelete a data product\n1\nval\nresponse\n=\nDataProduct\n.\ndelete\n(\nclient\n,\n\"218c8144-dc39-43a5-b0c0-9eeb4d11e74a\"\n)\n// (1)\nTo archive a data product in Atlan, call the\nDataProduct.delete()\nmethod with the GUID of the data product. Because this operation will archive the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nDELETE /api/meta/entity/bulk?guid=218c8144-dc39-43a5-b0c0-9eeb4d11e74a&deleteType=SOFT\n1\n// (1)\nAll the details for deleting the data product are specified in the URL directly. Note that you must provide the GUID of the data product to delete it.\nHard-delete (purge)\n¶\nTo permanently delete (purge) a data product:\nJava\nPython\nKotlin\nRaw REST API\nDelete a data product\n1\nAssetDeletionResponse\nresponse\n=\nDataProduct\n.\npurge\n(\nclient\n,\n\"218c8144-dc39-43a5-b0c0-9eeb4d11e74a\"\n);\n// (1)\nTo permanently delete a data product in Atlan, call the\nDataProduct.purge()\nmethod with the GUID of the data product. Because this operation will remove the asset from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nDelete a product\n1\n2\n3\n4\n5\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nclient\n=\nAtlanClient\n()\nclient\n.\nasset\n.\npurge_by_guid\n(\n\"218c8144-dc39-43a5-b0c0-9eeb4d11e74a\"\n)\n# (1)\nTo permanently delete a data product in Atlan, call the\nasset.purge_by_guid()\nmethod with the GUID of the data product.\nDelete a data product\n1\nval\nresponse\n=\nDataProduct\n.\npurge\n(\nclient\n,\n\"218c8144-dc39-43a5-b0c0-9eeb4d11e74a\"\n)\n// (1)\nTo permanently delete a data product in Atlan, call the\nDataProduct.purge()\nmethod with the GUID of the data product. Because this operation will remove the asset from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nDELETE /api/meta/entity/bulk?guid=218c8144-dc39-43a5-b0c0-9eeb4d11e74a&deleteType=PURGE\n1\n// (1)\nAll the details for deleting the data product are specified in the URL directly. Note that you must provide the GUID of the data product to delete it.\n2023-11-27\n2025-06-11\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
  "source_type": "sdk"
}