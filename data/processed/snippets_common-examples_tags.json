{
  "source_url": "snippets_common-examples_tags.html",
  "text": "Manage asset tags - Developer\nSkip to content\nTag (classify) assets\n¶\nAtlan tags must exist before tagging assets\nRemember that you must first\ncreate the Atlan tag\nbefore you will be able to tag any assets.\nCannot add tags when creating assets\nCurrently it is not possible to add tags when creating\nassets\n, other than via dbt.\nAdd to an existing asset\n¶\n6.2.0\n4.0.0\nTo add tags to an existing asset:\ndbt\nJava\nPython\nKotlin\nRaw REST API\nAdd tags to an existing asset\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\nmodels\n:\n-\nname\n:\nTOP_BEVERAGE_USERS\n# (1)\nmeta\n:\natlan\n:\nclassificationNames\n:\n# (2)\n-\nPII\n# (3)\n-\nMarketing Analysis\nclassificationNames\n:\n# (4)\n-\nname\n:\nPII\n# (5)\npropagate\n:\ntrue\n# (6)\nremovePropagationsOnEntityDelete\n:\ntrue\n# (7)\nrestrictPropagationThroughLineage\n:\nfalse\n# (8)\nrestrictPropagationThroughHierarchy\n:\nfalse\n# (9)\n-\nname\n:\nMarketing Analysis\npropagate\n:\ntrue\nremovePropagationsOnEntityDelete\n:\ntrue\nrestrictPropagationThroughLineage\n:\nfalse\nrestrictPropagationThroughHierarchy\n:\nfalse\nclassifications\n:\n# (10)\n-\ntypeName\n:\nyQBDoKHdTLJhqAsdR3RMq6\n# (11)\npropagate\n:\ntrue\nremovePropagationsOnEntityDelete\n:\ntrue\nrestrictPropagationThroughLineage\n:\nfalse\nrestrictPropagationThroughHierarchy\n:\nfalse\n-\ntypeName\n:\nWCVjmgKnW40G151dESXZ03\npropagate\n:\ntrue\nremovePropagationsOnEntityDelete\n:\ntrue\nrestrictPropagationThroughLineage\n:\nfalse\nrestrictPropagationThroughHierarchy\n:\nfalse\nYou must of course give the name of the object.\nThe simplest way to tag an asset, using the default values for propagation (those shown below), is to use the\nmeta\n.\natlan\n.\nclassificationNames\nstructure.\nWhen using this simplified form, you can give the normal human-readable name of the tags rather than the\nhashed-string representation\n.\nAlternatively, if you want to override the propagation settings, you can use this more detailed structure.\nEach listed item must itself be a YAML object consisting of the human-readable\nname\nof the tag and the propagation setting overrides:\n(Optional) You can decide whether to propagate this tag (true) or not (false). If you choose false, no propagation of this tag from the asset will occur — neither through lineage nor parent-child relationships.\n(Optional) If propagation is allowed, you can then define whether propagated tags should be removed if this asset is deleted (true) or not (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for lineage (true) or still allow it through lineage (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for hierarchy (true) or still allow it through hierarchy (false).\nAlternatively, you can specify tags nested within the\nmeta\n.\natlan\n.\nclassifications\nstructure.\nIn this structure, each tag you want to add must be given using its\nhashed-string representation\n. Its propagation settings can be overridden using the same options described above.\nReplaces all tags\nUnlike the examples for the SDKs and raw APIs, dbt will always replace all tags on the asset. Any tags that already exist on the asset that are not specified here will be removed.\nAdd tags to an existing asset\n1\n2\n3\n4\nTable\n.\nappendAtlanTags\n(\n// (1)\nclient\n,\n// (2)\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\n// (3)\nList\n.\nof\n(\n\"PII\"\n,\n\"Marketing Analysis\"\n));\n// (4)\nUse the\nappendAtlanTags()\nhelper method, which for most objects requires a minimal set of information. This helper method will construct the necessary request and call the necessary API(s) to add the tags all-in-one.\nBecause this operation will directly change the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe\nqualifiedName\nof the asset.\nA list of the tags (the names as you set them up in the UI) to add to the asset.\nAdd tags to an existing asset\n1\n2\n3\n4\n5\n6\n7\n8\n9\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nTable\nclient\n=\nAtlanClient\n()\nclient\n.\nasset\n.\nadd_atlan_tags\n(\n# (1)\nasset_type\n=\nTable\n,\nqualified_name\n=\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\natlan_tag_names\n=\n[\n\"PII\"\n,\n\"Marketing Analysis\"\n],\n# (2)\n)\nUse the\nasset.add_atlan_tags()\nmethod, which for most objects requires a minimal set of information. This helper method will construct the necessary request and call the necessary API(s) to add the tags all-in-one.\nA list of the tags (the names as you set them up in the UI) to add to the asset.\nAdd tags to an existing asset\n1\n2\n3\n4\nval\ntable\n=\nTable\n.\nappendAtlanTags\n(\n// (1)\nclient\n,\n// (2)\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\n// (3)\nlistOf\n(\n\"PII\"\n,\n\"Marketing Analysis\"\n))\n// (4)\nUse the\nappendAtlanTags()\nhelper method, which for most objects requires a minimal set of information. This helper method will construct the necessary request and call the necessary API(s) to add the tags all-in-one.\nBecause this operation will directly change the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe\nqualifiedName\nof the asset.\nA list of the tags (the names as you set them up in the UI) to add to the asset.\nPOST /api/meta/entity/bulk?replaceTags=false&appendTags=true&replaceBusinessAttributes=false&overwriteBusinessAttributes=false\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n{\n\"entities\"\n:\n[\n// (1)\n{\n\"typeName\"\n:\n\"Table\"\n,\n// (2)\n\"attributes\"\n:\n{\n\"qualifiedName\"\n:\n\"default/snowflake/1746022526/WIDE_WORLD_IMPORTERS/BRONZE_WAREHOUSE/FIVETRAN_AUDIT\"\n,\n// (3)\n\"name\"\n:\n\"FIVETRAN_AUDIT\"\n// (4)\n},\n\"addOrUpdateClassifications\"\n:\n[\n{\n\"typeName\"\n:\n\"VfsfmLbnuxc2vdNJ0Ysh\"\n,\n// (5)\n\"propagate\"\n:\nfalse\n,\n// (6)\n\"removePropagationsOnEntityDelete\"\n:\ntrue\n,\n// (7)\n\"restrictPropagationThroughLineage\"\n:\nfalse\n,\n// (8)\n\"restrictPropagationThroughHierarchy\"\n:\ntrue\n// (9)\n},\n{\n\"typeName\"\n:\n\"RsCmLbnuxc2vdNJ234Ysh\"\n,\n\"propagate\"\n:\nfalse\n,\n\"removePropagationsOnEntityDelete\"\n:\ntrue\n,\n\"restrictPropagationThroughLineage\"\n:\nfalse\n,\n\"restrictPropagationThroughHierarchy\"\n:\ntrue\n}\n]\n}\n]\n}\nAll assets must be wrapped in an\nentities\narray.\nYou must provide the exact type name for the asset (case-sensitive).\nYou must provide the exact\nqualifiedName\nof the asset (case-sensitive).\nYou must provide the exact name of the asset (case-sensitive).\nEach tag you want to add must be given using its\nhashed-string representation\n.\n(Optional) You can decide whether to propagate this tag (true) or not (false). If you choose false, no propagation of this tag from the asset will occur — neither through lineage nor parent-child relationships.\n(Optional) If propagation is allowed, you can then define whether propagated tags should be removed if this asset is deleted (true) or not (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for lineage (true) or still allow it through lineage (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for hierarchy (true) or still allow it through hierarchy (false).\nUpdate on an existing asset\n¶\n6.2.0\n4.0.0\nTo update tags on an existing asset:\ndbt\nJava\nPython\nKotlin\nRaw REST API\nNot possible through dbt\nIn dbt, the tags will be replaced in their entirety. It is not possible to just update a single tag through dbt.\nUpdate tags on an existing asset\n1\n2\n3\n4\n5\n6\n7\n8\n9\nTable\n.\nupdateAtlanTags\n(\n// (1)\nclient\n,\n// (2)\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\n// (3)\nList\n.\nof\n(\n\"PII\"\n,\n\"Marketing Analysis\"\n),\n// (4)\ntrue\n,\n// (5)\ntrue\n,\n// (6)\nfalse\n,\n// (7)\nfalse\n// (8)\n);\nUse the\nupdateAtlanTags()\nhelper method, which for most objects requires a minimal set of information. This helper method will construct the necessary request and call the necessary API(s) to update tags for an asset, all-in-one.\nBecause this operation will directly change the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe\nqualifiedName\nof the asset.\nA list of the tags (the names as you set them up in the UI) to update for the asset.\n(Optional) You can decide whether to propagate these tags (true) or not (false). If you choose false, no propagation for these tags from the asset will occur — neither through lineage nor parent-child relationships.\n(Optional) If propagation is allowed, you can then define whether propagated tags should be removed if this asset is deleted (true) or not (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tags only for lineage (true) or still allow it through lineage (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for hierarchy (true) or still allow it through hierarchy (false).\nUpdate tags on an existing asset\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nTable\nclient\n=\nAtlanClient\n()\nclient\n.\nasset\n.\nupdate_atlan_tags\n(\n# (1)\nasset_type\n=\nTable\n,\nqualified_name\n=\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\natlan_tag_names\n=\n[\n\"PII\"\n,\n\"Marketing Analysis\"\n],\n# (2)\nTrue\n,\n# (3)\nTrue\n,\n# (4)\nFalse\n,\n# (5)\nFalse\n,\n# (6)\n)\nUse the\nasset.update_atlan_tags()\nmethod, which for most objects requires a minimal set of information. This helper method will construct the necessary request and call the necessary API(s) to update tags for an asset, all-in-one.\nA list of the tags (the names as you set them up in the UI) to update for the asset.\n(Optional) You can decide whether to propagate these tags (True) or not (False). If you choose False, no propagation for these tags from the asset will occur — neither through lineage nor parent-child relationships.\n(Optional) If propagation is allowed, you can then define whether propagated tags should be removed if this asset is deleted (True) or not (False).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tags only for lineage (True) or still allow it through lineage (False).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for hierarchy (True) or still allow it through hierarchy (False).\nUpdate tags on an existing asset\n1\n2\n3\n4\n5\n6\n7\n8\n9\nval\ntable\n=\nTable\n.\nupdateAtlanTags\n(\n// (1)\nclient\n,\n// (2)\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\n// (3)\nlistOf\n(\n\"PII\"\n,\n\"Marketing Analysis\"\n),\n// (4)\ntrue\n,\n// (5)\ntrue\n,\n// (6)\nfalse\n,\n// (7)\nfalse\n// (8)\n)\nUse the\nupdateAtlanTags()\nhelper method, which for most objects requires a minimal set of information. This helper method will construct the necessary request and call the necessary API(s) to update tags for an asset, all-in-one.\nBecause this operation will directly change the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe\nqualifiedName\nof the asset.\nA list of the tags (the names as you set them up in the UI) to update for the asset.\n(Optional) You can decide whether to propagate these tags (true) or not (false). If you choose false, no propagation for these tags from the asset will occur — neither through lineage nor parent-child relationships.\n(Optional) If propagation is allowed, you can then define whether propagated tags should be removed if this asset is deleted (true) or not (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tags only for lineage (true) or still allow it through lineage (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for hierarchy (true) or still allow it through hierarchy (false).\nPOST /api/meta/entity/bulk?replaceTags=false&appendTags=true&replaceBusinessAttributes=false&overwriteBusinessAttributes=false\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n{\n\"entities\"\n:\n[\n// (1)\n{\n\"typeName\"\n:\n\"Table\"\n,\n// (2)\n\"attributes\"\n:\n{\n\"qualifiedName\"\n:\n\"default/snowflake/1746022526/WIDE_WORLD_IMPORTERS/BRONZE_WAREHOUSE/FIVETRAN_AUDIT\"\n,\n// (3)\n\"name\"\n:\n\"FIVETRAN_AUDIT\"\n// (4)\n},\n\"addOrUpdateClassifications\"\n:\n[\n{\n\"typeName\"\n:\n\"VfsfmLbnuxc2vdNJ0Ysh\"\n,\n// (5)\n\"propagate\"\n:\nfalse\n,\n// (6)\n\"removePropagationsOnEntityDelete\"\n:\nfalse\n,\n// (7)\n\"restrictPropagationThroughLineage\"\n:\nfalse\n,\n// (8)\n\"restrictPropagationThroughHierarchy\"\n:\nfalse\n// (9)\n},\n{\n\"typeName\"\n:\n\"RsCmLbnuxc2vdNJ234Ysh\"\n,\n\"propagate\"\n:\ntrue\n,\n\"removePropagationsOnEntityDelete\"\n:\ntrue\n,\n\"restrictPropagationThroughLineage\"\n:\nfalse\n,\n\"restrictPropagationThroughHierarchy\"\n:\nfalse\n}\n]\n}\n]\n}\nAll assets must be wrapped in an\nentities\narray.\nYou must provide the exact type name for the asset (case-sensitive).\nYou must provide the exact\nqualifiedName\nof the asset (case-sensitive).\nYou must provide the exact name of the asset (case-sensitive).\nEach tag you want to add must be given using its\nhashed-string representation\n.\n(Optional) You can decide whether to propagate this tag (true) or not (false). If you choose false, no propagation of this tag from the asset will occur — neither through lineage nor parent-child relationships.\n(Optional) If propagation is allowed, you can then define whether propagated tags should be removed if this asset is deleted (true) or not (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for lineage (true) or still allow it through lineage (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for hierarchy (true) or still allow it through hierarchy (false).\nRemove from existing assets\n¶\nRemove a single tag\n¶\n6.2.0\n4.0.0\nTo remove a single tag from an existing asset:\ndbt\nJava\nPython\nKotlin\nRaw REST API\nRemove one tag from an existing asset\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\nmodels\n:\n-\nname\n:\nTOP_BEVERAGE_USERS\n# (1)\nmeta\n:\natlan\n:\nclassificationNames\n:\n# (2)\n-\nPII\n# (3)\nclassifications\n:\n# (4)\n-\ntypeName\n:\nyQBDoKHdTLJhqAsdR3RMq6\n# (5)\npropagate\n:\ntrue\nremovePropagationsOnEntityDelete\n:\ntrue\nrestrictPropagationThroughLineage\n:\nfalse\nrestrictPropagationThroughHierarchy\n:\nfalse\nYou must of course give the name of the object.\nYou can use the\nmeta\n.\natlan\n.\nclassificationNames\nstructure, as above.\nWhen using this simplified form, you can give the normal human-readable name of the tags you want to remain, rather than the\nhashed-string representation\n.\nThe tag being\nremoved\nis no longer present\nYou are\nremoving\nthe tag by not specifying it anymore here in dbt.\nThe tags must be nested within the\nmeta\n.\natlan\n.\nclassifications\nstructure.\nEach tag you want to remain must be given using its\nhashed-string representation\n.\nThe tag being\nremoved\nis no longer present\nYou are\nremoving\nthe tag by not specifying it anymore here in dbt.\nRemove one tag from an existing asset\n1\n2\n3\n4\nTable\n.\nremoveAtlanTag\n(\n// (1)\nclient\n,\n// (2)\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\n// (3)\n\"Marketing Analysis\"\n);\n// (4)\nUse the\nremoveAtlanTag()\nhelper method, which for most objects requires a minimal set of information. This helper method will construct the necessary request and call the necessary API(s) to remove a tag from an asset, all-in-one.\nBecause this operation will directly change the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe\nqualifiedName\nof the asset.\nThe tag (the name you set up in the UI) to remove from the asset.\nRemove one tag from an existing asset\n1\n2\n3\n4\n5\n6\n7\n8\n9\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nTable\nclient\n=\nAtlanClient\n()\nclient\n.\nasset\n.\nremove_atlan_tag\n(\n# (1)\nasset_type\n=\nTable\n,\nqualified_name\n=\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\natlan_tag_name\n=\n\"Marketing Analysis\"\n,\n# (2)\n)\nUse the\nasset.remove_atlan_tag()\nmethod, which for most objects requires a minimal set of information. This method will construct the necessary request and call the necessary API(s) to remove a tag from an asset, all-in-one.\nThe tag (the name you set up in the UI) to remove from the asset.\nRemove one tag from an existing asset\n1\n2\n3\n4\nTable\n.\nremoveAtlanTag\n(\n// (1)\nclient\n,\n// (2)\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\n// (3)\n\"Marketing Analysis\"\n)\n// (4)\nUse the\nremoveAtlanTag()\nhelper method, which for most objects requires a minimal set of information. This helper method will construct the necessary request and call the necessary API(s) to remove a tag from an asset, all-in-one.\nBecause this operation will directly change the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe\nqualifiedName\nof the asset.\nThe tag (the name you set up in the UI) to remove from the asset.\nDELETE /api/meta/entity/uniqueAttribute/type/Table/classification/WCVjmgKnW40G151dESXZ03?attr:qualifiedName=default%2Fsnowflake%2F1657037873%2FSAMPLE_DB%2FFOOD_BEV%2FTOP_BEVERAGE_USERS\n1\n// (1)\nNote that all of the details for the deletion are embedded in the URL or query parameters to the request. Once again the\nhashed-string representation\nof the tag is required. You would either need to first retrieve the list of tags via API to determine this value, or look through the development console of your browser while opening the tag in the Atlan UI.\nRemove multiple tags\n¶\n6.2.0\nTo remove one or more tags from an existing asset:\ndbt\nJava\nPython\nKotlin\nRaw REST API\nComing soon\nComing soon\nRemove multiple tags from an existing asset\n1\n2\n3\n4\n5\n6\n7\n8\n9\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nTable\nclient\n=\nAtlanClient\n()\nclient\n.\nasset\n.\nremove_atlan_tags\n(\n# (1)\nasset_type\n=\nTable\n,\nqualified_name\n=\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\natlan_tag_names\n=\n[\n\"Marketing Analysis\"\n,\n\"PII\"\n],\n# (2)\n)\nUse the\nasset.remove_atlan_tags()\nmethod, which for most objects requires a minimal set of information. This method will construct the necessary request and call the necessary API(s) to remove a tag from an asset, all-in-one.\nA list of the tags (the names as you set them up in the UI) to remove for the asset.\nComing soon\nPOST /api/meta/entity/bulk?replaceTags=false&appendTags=true&replaceBusinessAttributes=false&overwriteBusinessAttributes=false\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n{\n\"entities\"\n:\n[\n// (1)\n{\n\"typeName\"\n:\n\"Table\"\n,\n// (2)\n\"attributes\"\n:\n{\n\"qualifiedName\"\n:\n\"default/snowflake/1746022526/WIDE_WORLD_IMPORTERS/BRONZE_WAREHOUSE/FIVETRAN_AUDIT\"\n,\n// (3)\n\"name\"\n:\n\"FIVETRAN_AUDIT\"\n// (4)\n},\n\"removeClassifications\"\n:\n[\n{\n\"typeName\"\n:\n\"VfsfmLbnuxc2vdNJ0Ysh\"\n// (5)\n},\n{\n\"typeName\"\n:\n\"RsCmLbnuxc2vdNJ234Ysh\"\n}\n]\n}\n]\n}\nAll assets must be wrapped in an\nentities\narray.\nYou must provide the exact type name for the asset (case-sensitive).\nYou must provide the exact\nqualifiedName\nof the asset (case-sensitive).\nYou must provide the exact name of the asset (case-sensitive).\nEach tag you want to add must be given using its\nhashed-string representation\n.\nRemove all tags\n¶\nCould create a new asset\nRemember that Atlan matches the provided\nqualifiedName\nto determine whether to\nupdate or create the asset\n.\n2.0.0\n4.0.0\nTo remove all tags from an existing asset, you need to specify no tags in your object:\ndbt\nJava\nPython\nKotlin\nRaw REST API\nRemove all tags from an existing asset\n1\n2\n3\n4\n5\nmodels\n:\n-\nname\n:\nTOP_BEVERAGE_USERS\n# (1)\nmeta\n:\natlan\n:\nclassifications\n:\n[]\n# (2)\nYou must of course give the name of the object.\nThe tags must be nested within the\nmeta\n.\natlan\n.\nclassifications\nstructure. To remove all of them, send an explicit empty list.\nRemove all tags from an existing asset\n1\n2\n3\n4\n5\nTable\ntable\n=\nTable\n.\nupdater\n(\n// (1)\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\n\"TOP_BEVERAGE_USERS\"\n).\nbuild\n();\nAssetMutationResponse\nresponse\n=\ntable\n.\nsave\n(\nclient\n,\ntrue\n);\n// (2)\nassert\nresponse\n.\ngetUpdatedAssets\n().\nsize\n()\n==\n1\n;\n// (3)\nUse the\nupdater()\nmethod to initialize the object with all necessary attributes for updating it(../advanced-examples/update.md#build-minimal-object-needed). (Removing the tags is still an update to the asset, we are not deleting the asset itself.)\nCall the\nsave()\nmethod to actually update the asset, using\ntrue\nas the second argument to overwrite tags. Since we have not provided any tags in our object, this will\nreplace\nthe existing tags on the asset with no tags. (In other words, it will remove all tags from the asset.) Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe response will include that single asset that was updated (again, removing tags is an update to the asset — we are not deleting the asset itself).\nRemove all tags from an existing asset\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nTable\nclient\n=\nAtlanClient\n()\ntable\n=\nTable\n.\nupdater\n(\n# (1)\nqualified_name\n=\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\nname\n=\n\"TOP_BEVERAGE_USERS\"\n,\n)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\ntable\n,\nreplace_atlan_tags\n=\nTrue\n)\n#  (2)\nassert\n1\n==\nlen\n(\nresponse\n.\nassets_updated\n(\nasset_type\n=\nTable\n))\n# (3)\nUse the\nupdater()\nmethod to create an asset suitable for modifiaction i.e. with all the requisite attributes.\nCall the\nsave()\nmethod to actually update the asset, using\nTrue\nfor the replace_atlan_tags argument will cause the tags to be overwritten. Since we have not provided any tags in our object,  this will\nreplace\nthe existing tags on the asset with no tags. (In other words, it will remove all tags from the asset.)\nThe response should only include that single asset that was updated (again, removing tags is an update to the asset — we are not deleting the asset itself).\nRemove all tags from an existing asset\n1\n2\n3\n4\n5\nval\ntable\n=\nTable\n.\nupdater\n(\n// (1)\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\n\"TOP_BEVERAGE_USERS\"\n).\nbuild\n()\nval\nresponse\n=\ntable\n.\nsave\n(\nclient\n,\ntrue\n)\n// (2)\nassert\n(\nresponse\n.\nupdatedAssets\n.\nsize\n==\n1\n)\n// (3)\nUse the\nupdater()\nmethod to initialize the object with all necessary attributes for updating it(../advanced-examples/update.md#build-minimal-object-needed). (Removing the tags is still an update to the asset, we are not deleting the asset itself.)\nCall the\nsave()\nmethod to actually update the asset, using\ntrue\nas the second argument to overwrite tags. Since we have not provided any tags in our object, this will\nreplace\nthe existing tags on the asset with no tags. (In other words, it will remove all tags from the asset.) Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe response will include that single asset that was updated (again, removing tags is an update to the asset — we are not deleting the asset itself).\nPOST /api/meta/entity/bulk?replaceTags=true&replaceBusinessAttributes=false&overwriteBusinessAttributes=false\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n{\n// (1)\n\"entities\"\n:\n[\n// (2)\n{\n\"typeName\"\n:\n\"Table\"\n,\n// (3)\n\"attributes\"\n:\n{\n\"qualifiedName\"\n:\n\"default/snowflake/1665450065/DBT_FOOD_BEVERAGE/PUBLIC/INSTACART_ORDER_PRODUCTS_USERS_TIME_MASTER\"\n,\n// (4)\n\"name\"\n:\n\"INSTACART_ORDER_PRODUCTS_USERS_TIME_MASTER\"\n// (5)\n}\n}\n]\n}\nNote that the query parameter\nreplaceTags\nis equal to\ntrue\nin the request. This is what causes the override behavior — so when you do not specify any tags in the request body those overwrite any existing tags on the asset. (The result being that there are then no tags on the asset.)\nAll assets must be wrapped in an\nentities\narray.\nYou must provide the exact type name for the asset (case-sensitive).\nYou must provide the exact\nqualifiedName\nof the asset (case-sensitive).\nYou must provide the exact name of the asset (case-sensitive).\nIn bulk\n¶\n7.0.0\n4.0.0\nYou can modify many tags, for many assets, at the same time.\nOperates as a replace\nApplying tags in bulk can currently only be done as a replacement. All tags on the asset(s) you upate will be replaced with the tags you specify. This means any tags that already exist on the asset in Atlan that are\nnot\nin your update will be\nremoved\nfrom that asset.\ndbt\nJava\nPython\nKotlin\nRaw REST API\nReplace tags on multiple assets\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\nmodels\n:\n-\nname\n:\nTOP_BEVERAGE_USERS\n# (1)\nmeta\n:\natlan\n:\nclassificationNames\n:\n# (2)\n-\nPII\n# (3)\n-\nMarketing Analysis\nclassificationNames\n:\n# (4)\n-\nname\n:\nPII\n# (5)\npropagate\n:\ntrue\n# (6)\nremovePropagationsOnEntityDelete\n:\ntrue\n# (7)\nrestrictPropagationThroughLineage\n:\nfalse\n# (8)\nrestrictPropagationThroughHierarchy\n:\nfalse\n# (9)\n-\nname\n:\nMarketing Analysis\npropagate\n:\ntrue\nremovePropagationsOnEntityDelete\n:\ntrue\nrestrictPropagationThroughLineage\n:\nfalse\nrestrictPropagationThroughHierarchy\n:\nfalse\nclassifications\n:\n# (10)\n-\ntypeName\n:\nyQBDoKHdTLJhqAsdR3RMq6\n# (11)\npropagate\n:\ntrue\nremovePropagationsOnEntityDelete\n:\ntrue\nrestrictPropagationThroughLineage\n:\nfalse\nrestrictPropagationThroughHierarchy\n:\nfalse\n-\ntypeName\n:\nWCVjmgKnW40G151dESXZ03\npropagate\n:\ntrue\nremovePropagationsOnEntityDelete\n:\ntrue\nrestrictPropagationThroughLineage\n:\nfalse\nrestrictPropagationThroughHierarchy\n:\nfalse\n-\nname\n:\nANOTHER_ASSET\n# (12)\nmeta\n:\natlan\n:\nclassificationNames\n:\n-\n...\nYou must of course give the name of the object.\nThe simplest way to tag an asset, using the default values for propagation (those shown below), is to use the\nmeta\n.\natlan\n.\nclassificationNames\nstructure.\nWhen using this simplified form, you can give the normal human-readable name of the tags rather than the\nhashed-string representation\n.\nAlternatively, if you want to override the propagation settings, you can use this more detailed structure.\nEach listed item must itself be a YAML object consisting of the human-readable\nname\nof the tag and the propagation setting overrides:\n(Optional) You can decide whether to propagate this tag (true) or not (false). If you choose false, no propagation of this tag from the asset will occur — neither through lineage nor parent-child relationships.\n(Optional) If propagation is allowed, you can then define whether propagated tags should be removed if this asset is deleted (true) or not (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for lineage (true) or still allow it through lineage (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for hierarchy (true) or still allow it through hierarchy (false).\nAlternatively, you can specify tags nested within the\nmeta\n.\natlan\n.\nclassifications\nstructure.\nIn this structure, each tag you want to add must be given using its\nhashed-string representation\n. Its propagation settings can be overridden using the same options described above.\nTo apply tags to multiple assets, just list all of the assets in the model file.\nReplace tags on multiple assets\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\nTable\ntable\n=\nTable\n.\nupdater\n(\n// (1)\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\n\"TOP_BEVERAGE_USERS\"\n)\n.\natlanTag\n(\nAtlanTag\n.\nof\n(\n\"PII\"\n))\n// (2)\n.\natlanTag\n(\nAtlanTag\n.\nbuilder\n()\n// (3)\n.\ntypeName\n(\n\"Marketing Analysis\"\n)\n.\npropagate\n(\ntrue\n)\n.\nremovePropagationsOnEntityDelete\n(\ntrue\n)\n.\nrestrictPropagationThroughLineage\n(\nfalse\n)\n.\nrestrictPropagationThroughHierarchy\n(\nfalse\n)\n.\nbuild\n())\n.\natlanTag\n(\nAtlanTag\n.\nof\n(\n\"Sensitivity\"\n,\n// (4)\nSourceTagAttachment\n.\nbyName\n(\nclient\n,\n// (5)\nSourceTagCache\n.\nSourceTagName\n(\n\"snowflake/development@@DB/SCH/SENSITIVITY\"\n),\n// (6)\nList\n.\nof\n(\nSourceTagAttachmentValue\n.\nof\n(\nnull\n,\n\"Restricted\"\n)))))\n// (7)\n.\nbuild\n();\nAtlanMutationResponse\nresponse\n=\ntable\n.\nsave\n(\nclient\n,\ntrue\n);\n// (8)\nUse the\nupdater()\nhelper method, which for most objects requires a minimal set of information. This helper method will construct a builder onto which you can chain any tag details. (You can also do this at creation time, using the\ncreator()\nhelper method, which will also return a builder.)\nYou can chain simple Atlan tags using\n.atlanTag()\nand the\nAtlanTag.of()\nhelper.\nYou can chain a fully-configured Atlan tag using\n.atlanTag()\nand the\nAtlanTag.builder()\nhelper to specify the exact propagation options.\nOr you can chain a source-synced tag using\n.atlanTag()\nand the\nAtlanTag.of()\nhelper that takes a\nSourceTagAttachment\nobject.\nBecause creating a source tag attachment may need to look up information in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nYou can build a source tag attachment by name or qualifiedName of the source tag. To build by name, you need to specify the source tag in the format:\n{{connectorType}}/{{connectionName}}@@DB_NAME/SCHEMA_NAME/TAG_NAME\n.\nYou can then also specify the value(s) for that source tag, either by key (first argument to\nSourceTagAttachemntValue.of()\n) or value (second argument to\nSourceTagAttachmentValue.of()\n).\nWhen you save the object, you must send\ntrue\nto the optional parameter to replace tags (otherwise all tags in your request will be ignored). Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nReplace tags on multiple assets\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nTable\nfrom\npyatlan.model.core\nimport\nAtlanTag\n,\nAtlanTagName\nfrom\npyatlan.cache.source_tag_cache\nimport\nSourceTagName\nfrom\npyatlan.model.structs\nimport\nSourceTagAttachment\n,\nSourceTagAttachmentValue\nclient\n=\nAtlanClient\n()\ntable\n=\nTable\n.\nupdater\n(\n# (1)\nqualified_name\n=\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\nname\n=\n\"TOP_BEVERAGE_USERS\"\n,\n)\ntable\n.\natlan_tags\n=\n[\n# (2)\nAtlanTag\n.\nof\n(\natlan_tag_name\n=\nAtlanTagName\n(\n\"PII\"\n)),\nAtlanTag\n(\ntype_name\n=\nAtlanTagName\n(\n\"Marketing Analysis\"\n),\n# (3)\nremove_propagations_on_entity_delete\n=\nTrue\n,\nrestrict_propagation_through_lineage\n=\nFalse\n,\nrestrict_propagation_through_hierarchy\n=\nFalse\n,\n),\nAtlanTag\n.\nof\n(\n# (4)\natlan_tag_name\n=\nAtlanTagName\n(\n\"Sensitivity\"\n),\nsource_tag_attachment\n=\nSourceTagAttachment\n.\nby_name\n(\nclient\n=\nclient\n,\nname\n=\nSourceTagName\n(\nclient\n=\nclient\n,\ntag\n=\n\"snowflake/development@@DB/SCH/SENSITIVITY\"\n),\n# (5)\nsource_tag_values\n=\n[\nSourceTagAttachmentValue\n(\ntag_attachment_key\n=\n\"\"\n,\ntag_attachment_value\n=\n\"Restricted\"\n)\n# (6)\n],\n),\n),\n]\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\ntable\n,\nreplace_atlan_tags\n=\nTrue\n)\n# (7)\nUse the\nupdater()\nhelper method, which typically requires\nonly a minimal set of information for most objects.\nYou can assign Atlan tags directly to\ntable.atlan_tags\n.\nTo create a fully-configured Atlan tag, use the\nAtlanTag()\nmodel,\nallowing you to specify precise propagation options.\nAlternatively, create a source-synced tag using the\nAtlanTag.of()\nhelper,\nwhich takes a\nSourceTagAttachment\nobject.\nBuild a source tag attachment using either the\nname\nor\nqualified_name\nof the source tag. To build by name, specify the source tag in this format:\n{{connectorType}}/{{connectionName}}@@DB_NAME/SCHEMA_NAME/TAG_NAME\n.\nSpecify the value(s) for the source tag using either the key\n(\ntag_attachment_key\n) or the value (\ntag_attachment_value\n).\nWhen saving the object, include the optional parameter\nreplace_atlan_tags=true\nto replace the tags\n(otherwise, all tags in the request will be ignored).\nAdd tags to an existing asset\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\nval\ntable\n=\nTable\n.\nupdater\n(\n// (1)\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n,\n\"TOP_BEVERAGE_USERS\"\n)\n.\natlanTag\n(\nAtlanTag\n.\nof\n(\n\"PII\"\n))\n// (2)\n.\natlanTag\n(\nAtlanTag\n.\nbuilder\n()\n// (3)\n.\ntypeName\n(\n\"Marketing Analysis\"\n)\n.\npropagate\n(\ntrue\n)\n.\nremovePropagationsOnEntityDelete\n(\ntrue\n)\n.\nrestrictPropagationThroughLineage\n(\nfalse\n)\n.\nrestrictPropagationThroughHierarchy\n(\nfalse\n)\n.\nbuild\n())\n.\natlanTag\n(\nAtlanTag\n.\nof\n(\n\"Sensitivity\"\n,\n// (4)\nSourceTagAttachment\n.\nbyName\n(\nclient\n,\n// (5)\nSourceTagCache\n.\nSourceTagName\n(\n\"snowflake/development@@DB/SCH/SENSITIVITY\"\n),\n// (6)\nlistOf\n(\nSourceTagAttachmentValue\n.\nof\n(\nnull\n,\n\"Restricted\"\n)))))\n// (7)\n.\nbuild\n()\nval\nresponse\n=\ntable\n.\nsave\n(\nclient\n,\ntrue\n)\n// (8)\nUse the\nupdater()\nhelper method, which for most objects requires a minimal set of information. This helper method will construct a builder onto which you can chain any tag details. (You can also do this at creation time, using the\ncreator()\nhelper method, which will also return a builder.)\nYou can chain simple Atlan tags using\n.atlanTag()\nand the\nAtlanTag.of()\nhelper.\nYou can chain a fully-configured Atlan tag using\n.atlanTag()\nand the\nAtlanTag.builder()\nhelper to specify the exact propagation options.\nOr you can chain a source-synced tag using\n.atlanTag()\nand the\nAtlanTag.of()\nhelper that takes a\nSourceTagAttachment\nobject.\nBecause creating a source tag attachment may need to look up information in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nYou can build a source tag attachment by name or qualifiedName of the source tag. To build by name, you need to specify the source tag in the format:\n{{connectorType}}/{{connectionName}}@@DB_NAME/SCHEMA_NAME/TAG_NAME\n.\nYou can then also specify the value(s) for that source tag, either by key (first argument to\nSourceTagAttachemntValue.of()\n) or value (second argument to\nSourceTagAttachmentValue.of()\n).\nWhen you save the object, you must send\ntrue\nto the optional parameter to replace tags (otherwise all tags in your request will be ignored). Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n{\n\"entities\"\n:\n[\n// (1)\n{\n\"typeName\"\n:\n\"Table\"\n,\n// (2)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"TOP_BEVERAGE_USERS\"\n,\n// (3)\n\"qualifiedName\"\n:\n\"default/snowflake/1657037873/SAMPLE_DB/FOOD_BEV/TOP_BEVERAGE_USERS\"\n// (4)\n},\n\"classifications\"\n:\n[\n// (5)\n{\n\"typeName\"\n:\n\"yQBDoKHdTLJhqAsdR3RMq6\"\n,\n// (6)\n\"propagate\"\n:\ntrue\n,\n// (7)\n\"removePropagationsOnEntityDelete\"\n:\ntrue\n,\n// (8)\n\"restrictPropagationThroughLineage\"\n:\nfalse\n,\n// (9)\n\"restrictPropagationThroughHierarchy\"\n:\nfalse\n// (10)\n},\n{\n\"typeName\"\n:\n\"WCVjmgKnW40G151dESXZ03\"\n,\n\"propagate\"\n:\ntrue\n,\n\"removePropagationsOnEntityDelete\"\n:\ntrue\n,\n\"restrictPropagationThroughLineage\"\n:\nfalse\n,\n\"restrictPropagationThroughHierarchy\"\n:\nfalse\n},\n{\n\"typeName\"\n:\n\"Z96sGJrF0S68PxYTUdKG6b\"\n,\n\"propagate\"\n:\ntrue\n,\n\"removePropagationsOnEntityDelete\"\n:\ntrue\n,\n\"restrictPropagationThroughLineage\"\n:\nfalse\n,\n\"restrictPropagationThroughHierarchy\"\n:\nfalse\n,\n\"attributes\"\n:\n{\n// (11)\n\"rt5N3mHZTcxXafuu6ZPpyL\"\n:\n[\n// (12)\n{\n\"sourceTagName\"\n:\n\"CONFIDENTIAL\"\n,\n// (13)\n\"sourceTagQualifiedName\"\n:\n\"default/snowflake/1726834662/ANALYTICS/WIDE_WORLD_IMPORTERS/CONFIDENTIAL\"\n,\n// (14)\n\"sourceTagGuid\"\n:\n\"c28c08a8-320b-4a1a-b52e-75d120b4a8cc\"\n,\n// (15)\n\"sourceTagConnectorName\"\n:\n\"snowflake\"\n,\n// (16)\n\"isSourceTagSynced\"\n:\nfalse\n,\n\"sourceTagSyncTimestamp\"\n:\n0\n,\n\"sourceTagValue\"\n:\n[\n// (17)\n{\n\"tagAttachmentValue\"\n:\n\"Highly Restricted\"\n// (18)\n}\n]\n}\n]\n}\n}\n]\n}\n]\n}\nAll assets must be wrapped in an\nentities\narray.\nYou must provide the exact type name for the asset (case-sensitive).\nYou must provide the exact name of the asset (case-sensitive).\nYou must provide the exact\nqualifiedName\nof the asset (case-sensitive).\nEach tag you want to apply to the asset must be wrapped in a\nclassifications\narray.\nEach tag you want to add must be given using its\nhashed-string representation\n.\n(Optional) You can decide whether to propagate this tag (true) or not (false). If you choose false, no propagation of this tag from the asset will occur — neither through lineage nor parent-child relationships.\n(Optional) If propagation is allowed, you can then define whether propagated tags should be removed if this asset is deleted (true) or not (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for lineage (true) or still allow it through lineage (false).\n(Optional) If propagation is allowed, you can also decide whether to disable propagation of the tag only for hierarchy (true) or still allow it through hierarchy (false).\nFor source tags, you must also specify an embedded\nattributes\nin the tag.\nYou must give the\nhashed-string representation\nof the attribute whose\ndisplayName\nis\nsourceTagAttachment\n.\nYou must give the name of the tag in the source.\nYou must give the\nqualifiedName\nof the Tag asset representing that tag in Atlan.\nYou must give the\nguid\nof the Tag asset representing that tag in Atlan.\nYou must give the name of the connector for the source where the tag comes from.\nTo specify a value for the tag, you must wrap it in a\nsourceTagValue\narray.\nYou can then specify the value using\ntagAttachmentValue\nor its key using\ntagAttachmentKey\n.\nFind hashed-string names\n¶\nWhen using either the raw APIs or dbt, you must provide the custom metadata names using Atlan's hashed-string representation.\nNot necessary for SDKs\nNote that this is not needed when using the SDKs, which translate these for you!\nTo look up the hashed-string representations:\nGET /api/meta/types/typedefs?type=classification\nThe response will include\ndisplayName\nand\nname\nfor each tag. The\ndisplayName\nis what you see in Atlan's UI, and the\nname\nis the hashed-string representation:\nSimplified response\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n{\n\"enumDefs\"\n:\n[],\n\"structDefs\"\n:\n[],\n\"classificationDefs\"\n:\n[\n{\n\"category\"\n:\n\"CLASSIFICATION\"\n,\n\"guid\"\n:\n\"c43e2f52-975f-40b6-88fa-93697fb54f52\"\n,\n\"name\"\n:\n\"WCVjmgKnW40G151dESXZ03\"\n,\n// (1)\n\"displayName\"\n:\n\"Marketing Analysis\"\n,\n\"description\"\n:\n\"Assets relevant to the marketing domain\"\n},\n{\n\"category\"\n:\n\"CLASSIFICATION\"\n,\n\"guid\"\n:\n\"ec641061-d8fa-4090-9145-a5f23c9c3e99\"\n,\n\"name\"\n:\n\"yQBDoKHdTLJhqAsdR3RMq6\"\n,\n// (2)\n\"displayName\"\n:\n\"PII\"\n,\n\"description\"\n:\n\"Personally-identifiable information can be used to uniquely identify an individual person.\"\n},\n{\n\"category\"\n:\n\"CLASSIFICATION\"\n,\n\"guid\"\n:\n\"70211696-f3fb-4a4a-a81a-db589e29f436\"\n,\n\"name\"\n:\n\"Z96sGJrF0S68PxYTUdKG6b\"\n,\n// (3)\n\"displayName\"\n:\n\"Sensitivity\"\n,\n\"attributeDefs\"\n:\n[\n{\n\"name\"\n:\n\"rt5N3mHZTcxXafuu6ZPpyL\"\n,\n// (4)\n\"displayName\"\n:\n\"sourceTagAttachment\"\n,\n\"description\"\n:\n\"\"\n,\n\"typeName\"\n:\n\"array<SourceTagAttachment>\"\n,\n\"isDefaultValueNull\"\n:\nfalse\n,\n\"isOptional\"\n:\ntrue\n,\n\"cardinality\"\n:\n\"SET\"\n,\n\"valuesMinCount\"\n:\n0\n,\n\"valuesMaxCount\"\n:\n2147483647\n,\n\"isUnique\"\n:\nfalse\n,\n\"isIndexable\"\n:\nfalse\n,\n\"includeInNotification\"\n:\nfalse\n,\n\"skipScrubbing\"\n:\nfalse\n,\n\"searchWeight\"\n:\n-1\n,\n\"isNew\"\n:\ntrue\n}\n],\n}\n],\n\"entityDefs\"\n:\n[],\n\"relationshipDefs\"\n:\n[],\n\"businessMetadataDefs\"\n:\n[]\n}\nHashed-string name for the tag named\nMarketing Analysis\n.\nHashed-string name for the tag named\nPII\n.\nHashed-string name for the tag named\nSensitivity\n.\nHashed-string name for the\nsourceTagAttachment\nattribute in the\nSensitivity\nclassification.\n2022-08-22\n2025-06-11\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
  "source_type": "sdk"
}