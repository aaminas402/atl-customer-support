[
  {
    "content": "Manage DocumentDB assets - Developer\nSkip to content\nManage DocumentDB assets\n¶\nOperations on DocumentDB assets (connections, databases, collections).\nIn general, these should be:\nCreated in top-down order\n(connection, then database, then collection)\nDeleted in bottom-up order (collections, then databases, then connections)\n1\nerDiagram\nConnection ||--o{ DocumentDBDatabase : contains\nDocumentDBDatabase ||--o{ DocumentDBCollection : contains\nAsset structure\n¶\nConnection\n¶\n7.0.0\n5.0.6\nA DocumentDB\nconnection\nrequires a\nname\nand\nqualifiedName\n. For creation, specific settings are also required to distinguish it as a DocumentDB connection rather than another type of connection. In addition,\nat least one\nof\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nJava\nPython\nKotlin\nRaw REST API\nCreate a DocumentDB connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nString\nadminRoleGuid\n=\nclient\n.\ngetRoleCache\n().\ngetIdForName\n(\n\"$admin\"\n);\n// (1)\nConnection\nconnection\n=\nConnection\n.\ncreator\n(\n// (2)\n\"documentdb-connection\"\n,\n// (3)\nAtlanConnectorType\n.\nDOCUMENTDB\n,\n// (4)\nList\n.\nof\n(\nadminRoleGuid\n),\n// (5)\nList\n.\nof\n(\n\"group2\"\n),\n// (6)\nList\n.\nof\n(\n\"jsmith\"\n))\n// (7)\n.\nbuild\n();\nAssetMutationResponse",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 0
    }
  },
  {
    "content": ",\n// (3)\nAtlanConnectorType\n.\nDOCUMENTDB\n,\n// (4)\nList\n.\nof\n(\nadminRoleGuid\n),\n// (5)\nList\n.\nof\n(\n\"group2\"\n),\n// (6)\nList\n.\nof\n(\n\"jsmith\"\n))\n// (7)\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\nconnection\n.\nsave\n(\nclient\n);\n// (8)\nString\nconnectionQualifiedName\n=\nresponse\n.\ngetCreatedAssets\n().\nget\n(\n0\n).\ngetQualifiedName\n();\n// (9)\nRetrieve the GUID for the admin role, to use later for defining the roles that can administer the connection.\nBuild up the minimum request to create a connection.\nProvide a human-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nSet the type of connection to DocumentDB.\nList the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 1
    }
  },
  {
    "content": "At least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nActually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nRetrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.)\nCreate a DocumentDB connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nConnection\n,\nDocumentDBDatabase\n,\nDocumentDBCollection\nfrom\npyatlan.model.enums\nimport\nAtlanConnectorType\nclient\n=\nAtlanClient\n()\nadmin_role_guid\n=\nstr\n(\nclient\n.\nrole_cache\n.\nget_id_for_name\n(\n\"$admin\"\n))\n# (1)\nconnection\n=\nConnection\n.\ncreator\n(\n# (2)\nclient\n=\nclient\n,\n# (3)\nname\n=\n\"documentdb-connection\"\n,\n# (4)\nconnector_type\n=\nAtlanConnectorType\n.\nDOCUMENTDB\n,\n# (5)\nadmin_roles\n=\n[\nadmin_role_guid\n],\n# (6)\nadmin_groups\n=\n[\n\"group2\"\n],\n# (7)\nadmin_users\n=\n[",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 2
    }
  },
  {
    "content": ",\n# (3)\nname\n=\n\"documentdb-connection\"\n,\n# (4)\nconnector_type\n=\nAtlanConnectorType\n.\nDOCUMENTDB\n,\n# (5)\nadmin_roles\n=\n[\nadmin_role_guid\n],\n# (6)\nadmin_groups\n=\n[\n\"group2\"\n],\n# (7)\nadmin_users\n=\n[\n\"jsmith\"\n],\n# (8)\n)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\nconnection\n)\n# (9)\nconnection_qualified_name\n=\nresponse\n.\nassets_created\n(\nasset_type\n=\nConnection\n)[\n0\n]\n.\nqualified_name\n# (10)\nRetrieve the GUID for the admin role, to use later for defining the roles that can administer the connection.\nBuild up the minimum request to create a connection.\nYou must provide a client instance.\nProvide a human-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nSet the type of connection to DocumentDB.\nList the workspace roles that should be able to administer the connection (or\nNone\nif none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadmin_roles\n,\nadmin_groups\n, or\nadmin_users\nmust be provided.\nList the group names that can administer this connection (or\nNone",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 3
    }
  },
  {
    "content": "At least one of\nadmin_roles\n,\nadmin_groups\n, or\nadmin_users\nmust be provided.\nList the group names that can administer this connection (or\nNone\nif none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadmin_roles\n,\nadmin_groups\n, or\nadmin_users\nmust be provided.\nList the user names that can administer this connection (or\nNone\nif none). Note that the values here are the username(s) of the user(s).\nAt least one of\nadmin_roles\n,\nadmin_groups\n, or\nadmin_users\nmust be provided.\nActually call Atlan to create the connection.\nRetrieve the\nqualified_name\nfor use in subsequent creation calls. (You'd probably want to do some null checking first.)\nCreate a DocumentDB connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nval\nadminRoleGuid\n=\nclient\n.\nroleCache\n.\ngetIdForName\n(\n\"\\\n$\nadmin\n\"\n)\n// (1)\nval\nconnection\n=\nConnection\n.\ncreator\n(\n// (2)\n\"documentdb-connection\"\n,\n// (3)\nAtlanConnectorType\n.\nDOCUMENTDB\n,\n// (4)\nlistOf\n(\nadminRoleGuid\n),\n// (5)\nlistOf\n(\n\"group2\"\n),\n// (6)\nlistOf\n(\n\"jsmith\"\n))\n// (7)\n.\nbuild\n()\nval\nresponse\n=\nconnection\n.\nsave\n(\nclient\n)\n// (8)\nval\nconnectionQualifiedName\n=",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 4
    }
  },
  {
    "content": ",\n// (4)\nlistOf\n(\nadminRoleGuid\n),\n// (5)\nlistOf\n(\n\"group2\"\n),\n// (6)\nlistOf\n(\n\"jsmith\"\n))\n// (7)\n.\nbuild\n()\nval\nresponse\n=\nconnection\n.\nsave\n(\nclient\n)\n// (8)\nval\nconnectionQualifiedName\n=\nresponse\n.\ncreatedAssets\n[\n0\n]\n.\nqualifiedName\n// (9)\nRetrieve the GUID for the admin role, to use later for defining the roles that can administer the connection.\nBuild up the minimum request to create a connection.\nProvide a human-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nSet the type of connection to DocumentDB.\nList the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 5
    }
  },
  {
    "content": "At least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nActually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nRetrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.)\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"Connection\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"documentdb-connection\"\n,\n// (2)\n\"connectorName\"\n:\n\"documentdb\"\n,\n// (3)\n\"qualifiedName\"\n:\n\"default/documentdb/123456789\"\n,\n// (4)\n\"category\"\n:\n\"database\"\n,\n// (5)\n\"adminRoles\"\n:\n[\n// (6)\n\"e7ae0295-c60a-469a-bd2c-fb903943aa02\"\n],\n\"adminGroups\"\n:\n[\n// (7)\n\"group2\"\n],\n\"adminUsers\"\n:\n[\n// (8)\n\"jsmith\"\n]\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nConnection\n.\nHuman-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nThe\nconnectorName",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 6
    }
  },
  {
    "content": "// (7)\n\"group2\"\n],\n\"adminUsers\"\n:\n[\n// (8)\n\"jsmith\"\n]\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nConnection\n.\nHuman-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nThe\nconnectorName\nmust be exactly\ndocumentdb\n.\nThe\nqualifiedName\nshould follow the pattern:\ndefault/documentdb/<epoch>\n, where\n<epoch>\nis the time in milliseconds at which the connection is being created.\nThe\ncategory\nmust be\ndatabase\n.\nList any workspace roles that can administer this connection. All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList any groups that can administer this connection. All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList any users that can administer this connection. Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 7
    }
  },
  {
    "content": "List any users that can administer this connection. Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nAccess policies\nAtlan creates the policies that grant access to a connection, including the ability to retrieve the connection and to create assets within it, asynchronously. It can take several seconds (even up to approximately 30 seconds) before these are in place after creating the connection.\nYou may therefore need to wait before you'll be able to create the assets below within the connection.\nTo confirm access,\nretrieve the connection\nafter it has been created. The SDKs' retry loops will automatically retry until the connection can be successfully retrieved. At that point, your API token has permission to create the other assets.\nNote: if you are\nreusing\nan existing connection rather than creating one via your API token, you must give your API token a persona that has access to that connection. Otherwise all attempts to create, read, update, or delete assets within that connection will fail due to a lack of permissions.\nDocumentDBDatabase\n¶\n6.0.3\n5.0.6\nA\nDocumentDB database\nrequires a\nname",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 8
    }
  },
  {
    "content": "DocumentDBDatabase\n¶\n6.0.3\n5.0.6\nA\nDocumentDB database\nrequires a\nname\nand a\nqualifiedName\n. For creation, you also need to specify the\nconnectionQualifiedName\nof the connection for the database.\nJava\nPython\nKotlin\nRaw REST API\nCreate a DocumentDB database\n11\n12\n13\n14\n15\n16\n17\nDocumentDBDatabase\ndatabase\n=\nDocumentDBDatabase\n.\ncreator\n(\n// (1)\n\"my-docdb\"\n,\n// (2)\nconnectionQualifiedName\n)\n// (3)\n.\ndocumentDBDatabaseCollectionCount\n(\n10\n)\n// (4)\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\ndatabase\n.\nsave\n(\nclient\n);\n// (5)\ndatabase\n=\nresponse\n.\ngetResult\n(\ndatabase\n);\n// (6)\nBuild up the minimum request to create a DocumentDB database.\nProvide a human-readable name for your database.\nProvide the qualifiedName of the connection for this database.\nOptionally provide additional metadata about the database.\nActually call Atlan to create the database. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nRetrieve the created database for use in subsequent creation calls. (You'd probably want to do some null checking first.)\nCreate a DocumentDB database\n17\n18\n19\n20\n21\n22\n23\ndatabase\n=\nDocumentDBDatabase\n.",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 9
    }
  },
  {
    "content": "Create a DocumentDB database\n17\n18\n19\n20\n21\n22\n23\ndatabase\n=\nDocumentDBDatabase\n.\ncreator\n(\n# (1)\nname\n=\n\"my-docdb\"\n,\n# (2)\nconnection_qualified_name\n=\nconnection_qualified_name\n,\n# (3)\n)\ndatabase\n.\ndocument_dbdatabase_collection_count\n=\n10\n# (4)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\ndatabase\n)\n# (5)\ndatabase\n=\nresponse\n.\nassets_created\n(\nasset_type\n=\nDocumentDBDatabase\n)[\n0\n]\n# (6)\nBuild up the minimum request to create a DocumentDB database.\nProvide a human-readable name for your database.\nProvide the qualifiedName of the connection for this database.\nOptionally provide additional metadata about the database.\nActually call Atlan to create the database.\nRetrieve the created database for use in subsequent creation calls. (You'd probably want to do some null checking first.)\nCreate a DocumentDB database\n11\n12\n13\n14\n15\n16\n17\nval\ndatabase\n=\nDocumentDBDatabase\n.\ncreator\n(\n// (1)\n\"my-docdb\"\n,\n// (2)\nconnectionQualifiedName\n)\n// (3)\n.\ndocumentDBDatabaseCollectionCount\n(\n10\n)\n// (4)\n.\nbuild\n()\nval\nresponse\n=\ndatabase\n.\nsave\n(\nclient\n)\n// (5)\nval\ncreatedDatabase\n=\nresponse\n.\ngetResult\n(\ndatabase\n)\n// (6)\nBuild up the minimum request to create a DocumentDB database.",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 10
    }
  },
  {
    "content": "(\n10\n)\n// (4)\n.\nbuild\n()\nval\nresponse\n=\ndatabase\n.\nsave\n(\nclient\n)\n// (5)\nval\ncreatedDatabase\n=\nresponse\n.\ngetResult\n(\ndatabase\n)\n// (6)\nBuild up the minimum request to create a DocumentDB database.\nProvide a human-readable name for your database.\nProvide the qualifiedName of the connection for this database.\nOptionally provide additional metadata about the database.\nActually call Atlan to create the database. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nRetrieve the created database for use in subsequent creation calls. (You'd probably want to do some null checking first.)\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"DocumentDBDatabase\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"my-docdb\"\n,\n// (2)\n\"qualifiedName\"\n:\n\"default/documentdb/123456789/my-docdb\"\n,\n// (3)\n\"connectionQualifiedName\"\n:\n\"default/documentdb/123456789\"\n,\n// (4)\n\"connectorName\"\n:\n\"documentdb\"\n,\n// (5)\n\"documentDBDatabaseCollectionCount\"\n:\n10\n// (6)\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nDocumentDBDatabase\n.\nHuman-readable name for your database.\nThe\nqualifiedName\nshould follow the pattern:",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 11
    }
  },
  {
    "content": ",\n// (5)\n\"documentDBDatabaseCollectionCount\"\n:\n10\n// (6)\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nDocumentDBDatabase\n.\nHuman-readable name for your database.\nThe\nqualifiedName\nshould follow the pattern:\ndefault/documentdb/<epoch>/<database_name>\n, where\ndefault/documentdb/<epoch>\nis the qualifiedName of the connection for this asset and\n<database_name>\nis the name of the database.\nThe\nconnectionQualifiedName\nmust be the exact qualifiedName of the connection for this asset.\nThe\nconnectorName\nmust be the same value as the connector type used when creating the connection.\nOptionally include additional metadata about the database.\nDocumentDBCollection\n¶\n6.0.3\n5.0.6\nA\nDocumentDB collection\nrequires a\nname\nand a\nqualifiedName\n. For creation, you also need to specify the\ndatabaseQualifiedName\nof the database that contains the collection.\nJava\nPython\nKotlin\nRaw REST API\nCreate a DocumentDB collection\n18\n19\n20\n21\n22\n23\n24\n25\nDocumentDBCollection\ncollection\n=\nDocumentDBCollection\n.\ncreator\n(\n// (1)\n\"users\"\n,\n// (2)\ndatabase\n.\ngetQualifiedName\n())\n// (3)\n.\ndocumentDBCollectionSchemaDefinition\n(",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 12
    }
  },
  {
    "content": "18\n19\n20\n21\n22\n23\n24\n25\nDocumentDBCollection\ncollection\n=\nDocumentDBCollection\n.\ncreator\n(\n// (1)\n\"users\"\n,\n// (2)\ndatabase\n.\ngetQualifiedName\n())\n// (3)\n.\ndocumentDBCollectionSchemaDefinition\n(\n\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\"}}}\"\n)\n// (4)\n.\ndocumentDBCollectionIsCapped\n(\nfalse\n)\n// (5)\n.\ndocumentDBCollectionNumIndexes\n(\n3\n)\n// (6)\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\ncollection\n.\nsave\n(\nclient\n);\n// (7)\nBuild up the minimum request to create a DocumentDB collection.\nProvide a human-readable name for your collection.\nProvide the qualifiedName of the database that contains this collection.\nOptionally provide the schema definition for the collection.\nOptionally specify whether the collection is capped or not.\nOptionally provide additional metadata about the collection.\nActually call Atlan to create the collection. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nCreate a DocumentDB collection\n24\n25\n26\n27\n28\n29\n30\n31\ncollection\n=\nDocumentDBCollection\n.\ncreator\n(\n# (1)\nname\n=\n\"users\"\n,\n# (2)\ndatabase_qualified_name\n=\ndatabase\n.",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 13
    }
  },
  {
    "content": "Create a DocumentDB collection\n24\n25\n26\n27\n28\n29\n30\n31\ncollection\n=\nDocumentDBCollection\n.\ncreator\n(\n# (1)\nname\n=\n\"users\"\n,\n# (2)\ndatabase_qualified_name\n=\ndatabase\n.\nqualified_name\n,\n# (3)\n)\ncollection\n.\ndocument_dbcollection_schema_definition\n=\n\"{\n\\\"\ntype\n\\\"\n:\n\\\"\nobject\n\\\"\n,\n\\\"\nproperties\n\\\"\n:{\n\\\"\nname\n\\\"\n:{\n\\\"\ntype\n\\\"\n:\n\\\"\nstring\n\\\"\n},\n\\\"\nemail\n\\\"\n:{\n\\\"\ntype\n\\\"\n:\n\\\"\nstring\n\\\"\n}}}\"\n# (4)\ncollection\n.\ndocument_dbcollection_is_capped\n=\nFalse\n# (5)\ncollection\n.\ndocument_dbcollection_num_indexes\n=\n3\n# (6)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\ncollection\n)\n# (7)\nBuild up the minimum request to create a DocumentDB collection.\nProvide a human-readable name for your collection.\nProvide the qualifiedName of the database that contains this collection.\nOptionally provide the schema definition for the collection.\nOptionally specify whether the collection is capped or not.\nOptionally provide additional metadata about the collection.\nActually call Atlan to create the collection.\nCreate a DocumentDB collection\n18\n19\n20\n21\n22\n23\n24\n25\nval\ncollection\n=\nDocumentDBCollection\n.\ncreator\n(\n#\n(\n1\n)\n\"users\"\n,\n#\n(\n2\n)\ndatabase\n.\nqualifiedName\n)\n#\n(\n3\n)\n.\ndocumentDBCollectionSchemaDefinition\n(",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 14
    }
  },
  {
    "content": "18\n19\n20\n21\n22\n23\n24\n25\nval\ncollection\n=\nDocumentDBCollection\n.\ncreator\n(\n#\n(\n1\n)\n\"users\"\n,\n#\n(\n2\n)\ndatabase\n.\nqualifiedName\n)\n#\n(\n3\n)\n.\ndocumentDBCollectionSchemaDefinition\n(\n\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\"}}}\"\n)\n#\n(\n4\n)\n.\ndocumentDBCollectionIsCapped\n(\nfalse\n)\n#\n(\n5\n)\n.\ndocumentDBCollectionNumIndexes\n(\n3\n)\n#\n(\n6\n)\n.\nbuild\n()\nval\nresponse\n=\ncollection\n.\nsave\n(\nclient\n)\n#\n(\n7\n)\nBuild up the minimum request to create a DocumentDB collection.\nProvide a human-readable name for your collection.\nProvide the qualifiedName of the database that contains this collection.\nOptionally provide the schema definition for the collection.\nOptionally specify whether the collection is capped or not.\nOptionally provide additional metadata about the collection.\nActually call Atlan to create the collection. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"DocumentDBCollection\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"users\"\n,\n// (2)\n\"qualifiedName\"\n:",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 15
    }
  },
  {
    "content": "POST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"DocumentDBCollection\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"users\"\n,\n// (2)\n\"qualifiedName\"\n:\n\"default/documentdb/123456789/my-docdb/users\"\n,\n// (3)\n\"databaseQualifiedName\"\n:\n\"default/documentdb/123456789/my-docdb\"\n,\n// (4)\n\"connectorName\"\n:\n\"documentdb\"\n,\n// (5)\n\"documentDBCollectionSchemaDefinition\"\n:\n\"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\"}}}\"\n,\n// (6)\n\"documentDBCollectionIsCapped\"\n:\nfalse\n,\n// (7)\n\"documentDBCollectionNumIndexes\"\n:\n3\n// (8)\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nDocumentDBCollection\n.\nHuman-readable name for your collection.\nThe\nqualifiedName\nshould follow the pattern:\ndefault/documentdb/<epoch>/<database_name>/<collection_name>\n, where\ndefault/documentdb/<epoch>/<database_name>\nis the qualifiedName of the database that contains this collection.\nThe\ndatabaseQualifiedName\nmust be the exact qualifiedName of the database that contains this collection.\nThe\nconnectorName\nmust be the same value as the connector type used when creating the connection.\nOptionally provide the schema definition for the collection.",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 16
    }
  },
  {
    "content": "The\nconnectorName\nmust be the same value as the connector type used when creating the connection.\nOptionally provide the schema definition for the collection.\nOptionally specify whether the collection is capped or not.\nOptionally provide additional metadata about the collection.\nAdditional collection properties\n¶\nThe\nDocumentDBCollection\nasset type has a number of specific properties that you can use to provide more detailed information:\ndocumentDBCollectionAverageObjectSize\n: Average size of an object in the collection\ndocumentDBCollectionExpireAfterSeconds\n: Seconds after which documents in a time series collection or clustered collection expire\ndocumentDBCollectionMaxSize\n: Maximum size allowed in a capped collection\ndocumentDBCollectionMaximumDocumentCount\n: Maximum number of documents allowed in a capped collection\ndocumentDBCollectionNumOrphanDocs\n: Number of orphaned documents in the collection\ndocumentDBCollectionSubtype\n: Subtype of a DocumentDB collection (e.g., Capped, Time Series, etc.)\ndocumentDBCollectionTimeField\n: Name of the field containing the date in each time series document\ndocumentDBCollectionTimeGranularity",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 17
    }
  },
  {
    "content": "documentDBCollectionTimeField\n: Name of the field containing the date in each time series document\ndocumentDBCollectionTimeGranularity\n: Closest match to the time span between consecutive incoming measurements\ndocumentDBCollectionTotalIndexSize\n: Total size of all indexes\nAvailable relationships\n¶\nEach DocumentDB asset is an\nAsset\n, and can therefore be related to the following other assets.\nerDiagram\nAsset }o--o{ AtlasGlossaryTerm : meanings\nAsset ||--o{ Link : links\nAsset ||--o| Readme : readme\nAsset }o--o{ Process : inputToProcesses\nAsset }o--o{ Process : outputFromProcesses\nAtlasGlossaryTerm\n¶\nA\nglossary term\nprovides meaning to an asset. The\nlink terms to assets snippet\nprovides more detail on setting this relationship.\nLink\n¶\nA\nlink\nprovides additional context to an asset, by providing a URL to additional information.\nReadme\n¶\nA\nREADME\nprovides rich documentation for an asset. The\nadd asset READMEs snippet\nprovides more detail on setting this relationship.\nProcess\n¶\nA\nprocess\nprovides lineage information for an asset. An asset can be both an input and an output for one or more processes. The\nlineage snippets\nprovide more detail on creating and working with lineage.",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 18
    }
  },
  {
    "content": "provides lineage information for an asset. An asset can be both an input and an output for one or more processes. The\nlineage snippets\nprovide more detail on creating and working with lineage.\nNote that unlike other assets, the packaged\nconnection delete utility\nin the UI will\nnot\nremove DocumentDB assets associated with the connection. So the DocumentDB assets themselves must be deleted, separately from the connection.\n↩\n2025-04-11\n2025-06-11\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
    "metadata": {
      "source_url": "patterns_create_documentdb.html",
      "source_type": "sdk",
      "file": "patterns_create_documentdb.json",
      "chunk_id": 19
    }
  }
]