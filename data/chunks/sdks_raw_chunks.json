[
  {
    "content": "Raw REST API - Developer\nSkip to content\nRaw REST API\nÂ¶\nAtlan University\nWalk through step-by-step in our\nintro to custom integration course\n(30 mins).\nNot for the faint of heart\nThere are a number of details and nuances to understand about the underlying REST APIs to use them most effectively:\nthe underlying REST API communications (HTTP protocols, methods, headers, endpoint URLs, response codes, etc)\ntranslating the complex JSON structures for each request and response payload\nknowing exactly which values are required (and which aren't) depending on the object you're interacting with, what operation you're carrying out, etc\n(including which exact string (and capitalization) to use for values that are really enumerations behind-the-scenes)\nUltimately, all pull-based integration mechanisms (including the SDKs) use the REST API; however, the SDKs also encode best practices to avoid the need to understand all these details and low-level nuances.\nIf you want to adopt these best practices from the start, we would\nstrongly recommend\ndirectly using any of our SDKs rather than the raw REST APIs directly:\nJava\nPython\nKotlin",
    "metadata": {
      "source_url": "sdks_raw.html",
      "source_type": "sdk",
      "file": "sdks_raw.json",
      "chunk_id": 0
    }
  },
  {
    "content": "If you want to adopt these best practices from the start, we would\nstrongly recommend\ndirectly using any of our SDKs rather than the raw REST APIs directly:\nJava\nPython\nKotlin\nThat being said, we have documented the raw REST API interactions in most cases. So if you\nreally\nwant to interact with the APIs directly, there should still be some guidance â€” anywhere you see\nRaw REST API\ngives details on endpoint URLs, methods, and payloads.\nPostman\nÂ¶\nIf all you really want to do is some initial experimentation directly against the API, you can use\nPostman\n.\nWe do not maintain a Postman collection of requests, but you can use the\nRaw REST API\ntab to find the endpoint and an example payload to use for most operations here on developer.atlan.com.\nOpenAPI spec\nÂ¶\nWhy not just publish an OpenAPI spec?\nWe did try this in the past, as we liked the idea of generating client libraries using tools like the\nOpenAPI Generator\n.\nUnfortunately, in our own testing of these tools, we found that:\nWe could generate code that is free from syntax errors, but\nthe generated code was not fully functional.\nProblems we found:",
    "metadata": {
      "source_url": "sdks_raw.html",
      "source_type": "sdk",
      "file": "sdks_raw.json",
      "chunk_id": 1
    }
  },
  {
    "content": ".\nUnfortunately, in our own testing of these tools, we found that:\nWe could generate code that is free from syntax errors, but\nthe generated code was not fully functional.\nProblems we found:\nThe generated code drops significant portions of data from payloads. (Our APIs are payload-rich and endpoint-light, while the generators seem to favor endpoint-rich and payload-light APIs.)\nThe various objects the generator creates often make developer consumption cumbersome â€” long, difficult-to-read object names; many variations of similar objects; and so on.\nThe generated code naturally does not include any validation that can't be encoded in the OpenAPI spec. To add this we'd need to wrap the generated code with another layer anyway.\nAfter several attempts at mangling the OpenAPI spec to meet the constraints of the code generator, we eventually decided to go the way we've seen other API-first companies adopt. We found very few API-first companies appear to rely on these code generators, but rather directly maintain their own SDKs for which they may have their own code generators. (Which is in fact exactly what we're doing as well.)\nRequest for feedback\nÂ¶",
    "metadata": {
      "source_url": "sdks_raw.html",
      "source_type": "sdk",
      "file": "sdks_raw.json",
      "chunk_id": 2
    }
  },
  {
    "content": "Request for feedback\nÂ¶\nIf you use the raw REST APIs rather than one of the provided SDKs, we would love to understand more. If you can spare a few minutes to\nfill out our survey\n, we would be very grateful!\n2023-12-07\n2025-03-06\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better ðŸ’™\nGoogle Analytics\nAccept\nReject\nManage settings",
    "metadata": {
      "source_url": "sdks_raw.html",
      "source_type": "sdk",
      "file": "sdks_raw.json",
      "chunk_id": 3
    }
  }
]