[
  {
    "content": "Generate SDK bindings - Developer\nSkip to content\nBind the SDKs\n¶\nOf course, to actually test the UX you should create some assets of the new type(s) and test. The simplest way to do this is to make them programmatically accessible — via an SDK.\nClone SDK repository\n¶\nTo actually implement the SDK bindings, you will first need to clone the SDK's code repository:\nJava\nPython\nSet up the development environment for the\nJava SDK\n.\nOpen the terminal and clone the latest\natlan-java\nrepository:\ngit\nclone\nhttps://github.com/atlanhq/atlan-java.git\nEnsure you have a working Java 21 JDK as your\n$JAVA_HOME\n:\njava\n-version\necho\n$JAVA_HOME\nexport\nJAVA_HOME\n=\n/Library/Java/JavaVirtualMachines/openjdk-21.jdk/Contents/Home\nEnsure Gradle is set up and able to compile (this will also ensure all dependencies are downloaded):\n./gradlew\nassemble\nshadowJar\nSet up the development environment for\npyatlan\n.\nOpen the terminal and clone the latest\npyatlan\nrepository:\ngit\nclone\nhttps://github.com/atlanhq/atlan-python.git\nWe recommend creating a new\nvirtual environment\n:\npython3\n-m\nvenv\nvenv\nActivate the virtual environment:\nsource\nvenv/bin/activate",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 0
    }
  },
  {
    "content": "repository:\ngit\nclone\nhttps://github.com/atlanhq/atlan-python.git\nWe recommend creating a new\nvirtual environment\n:\npython3\n-m\nvenv\nvenv\nActivate the virtual environment:\nsource\nvenv/bin/activate\nIn the project root directory, install the required dependencies:\npip\ninstall\n-e\n.\n&&\npip\ninstall\n-r\nrequirements-dev.txt\nImplement\ncreator\nmethods\n¶\nEach SDK contains a generator package that generates SDK code based on the latest typedefs available in your Atlan instance. However, each new asset type will also have a specific set of minimal attributes required when creating any instances of that type.\nThis minimal set of attributes is defined for developers to understand and consume through a\ncreator\nmethod.\nqualifiedName\n¶\nAll asset types require a\nqualifiedName\n, and this must be unique for all instances of that asset type.\nConsider carefully how the\nqualifiedName\nshould be constructed\nSince it must be unique across all instances of that asset type, carefully consider how the\nqualifiedName\nshould be constructed — and automate or enforce this as much as possible in your\ncreator\nimplementation. While names are often used in the\nqualifiedName",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 1
    }
  },
  {
    "content": "qualifiedName\nshould be constructed — and automate or enforce this as much as possible in your\ncreator\nimplementation. While names are often used in the\nqualifiedName\n, if the system you are representing does not have unique names at a given level (or these are subject to change without the object itself changing) you may need to use some other string in the\nqualifiedName\nto ensure it remains unique.\nTypically this will be:\ndefault/\n{{\nconnectorType\n}}\n/\n{{\nepoch\n}}\n/\n{{\nuniqueName\n}}\n# (1)\ndefault/\n{{\nconnectorType\n}}\n/\n{{\nepoch\n}}\n/.../\n{{\nuniqueName\n}}\n# (2)\nFor a top-level asset, the connection's\nqualifiedName\nconcatenated with the (unique) name of the top-level asset:\nFor a child asset, the parent's\nqualifiedName\nconcatenated with the (unique) name of the child asset:\nRunning example (expand for details)\nIn our running example, this would mean\nqualifiedName\ns that look like this:\ndefault/genericdb/1234567890/some-dataset\n# (1)\ndefault/genericdb/1234567890/some-dataset/some-table\n# (2)\ndefault/genericdb/1234567890/some-dataset/some-table/some-field\n# (3)\nAn example\nqualifiedName\nfor a dataset named\nsome-dataset",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 2
    }
  },
  {
    "content": "# (1)\ndefault/genericdb/1234567890/some-dataset/some-table\n# (2)\ndefault/genericdb/1234567890/some-dataset/some-table/some-field\n# (3)\nAn example\nqualifiedName\nfor a dataset named\nsome-dataset\n, in a generic database connection (that happened to be created on February 13, 2009 at 23:31:30 GMT).\nAn example\nqualifiedName\nfor a table named\nsome-table\ncreated within that dataset.\nAn example\nqualifiedName\nfor a field named\nsome-field\ncreated within that table.\nFrom the examples above, you can see all assets require at least the following information at creation (even top-level assets):\ntypeName\n— to define the type of asset being created\nqualifiedName\n— which must be unique across all instances of the asset type, since it is used to determine whether to update or create a new instance\nconnectionQualifiedName\n— for UX filtering and access control purposes, which has embedded within it a\nconnectorType\n(which in turn determines\nwhich icon to use\nto represent each instance of an asset)\nRunning example (expand for details)\nSample creation payload (CustomDataset)\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"CustomDataset\"\n,\n\"attributes\"\n:\n{\n\"name\"\n:\n\"some-dataset\"\n,\n\"qualifiedName\"\n:",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 3
    }
  },
  {
    "content": "Running example (expand for details)\nSample creation payload (CustomDataset)\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"CustomDataset\"\n,\n\"attributes\"\n:\n{\n\"name\"\n:\n\"some-dataset\"\n,\n\"qualifiedName\"\n:\n\"default/genericdb/1234567890/some-dataset\"\n,\n\"connectionQualifiedName\"\n:\n\"default/genericdb/1234567890\"\n,\n\"connectorName\"\n:\n\"genericdb\"\n}\n}\n]\n}\nThe sections below walkthrough writing the code-generator templates for the running example.\nCustomDataset\ntemplate\n¶\nNow that we know the minimal required attributes for creation, we can define these in a template for each SDK. These templates define only the unique portion of the generated code in each SDK — any standard code will still continue to be generated automatically:\nJava\nPython\nsdk/src/main/resources/templates/CustomDataset.ftl\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n<\n#\nmacro\nall\n>\n/**\n* Builds the minimal object necessary to create a CustomDataset.\n*\n* @param name of the CustomDataset\n* @param connectionQualifiedName unique name of the connection through which the spec is accessible",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 4
    }
  },
  {
    "content": "*\n* @param name of the CustomDataset\n* @param connectionQualifiedName unique name of the connection through which the spec is accessible\n* @return the minimal object necessary to create the CustomDataset, as a builder\n*/\npublic\nstatic\nCustomDatasetBuilder\n<?\n,\n?>\ncreator\n(\nString\nname\n,\nString\nconnectionQualifiedName\n)\n{\n// (1)\nreturn\nCustomDataset\n.\n_internal\n()\n.\nguid\n(\n\"-\"\n+\nThreadLocalRandom\n.\ncurrent\n().\nnextLong\n(\n0\n,\nLong\n.\nMAX_VALUE\n-\n1\n))\n// (2)\n.\nqualifiedName\n(\nconnectionQualifiedName\n+\n\"/\"\n+\nname\n)\n.\nname\n(\nname\n)\n.\nconnectionQualifiedName\n(\nconnectionQualifiedName\n)\n.\nconnectorType\n(\nConnection\n.\ngetConnectorTypeFromQualifiedName\n(\nconnectionQualifiedName\n));\n}\n/**\n* Builds the minimal object necessary to update a CustomDataset.\n*\n* @param qualifiedName of the CustomDataset\n* @param name of the CustomDataset\n* @return the minimal request necessary to update the CustomDataset, as a builder\n*/\npublic\nstatic\nCustomDatasetBuilder\n<?\n,\n?>\nupdater\n(\nString\nqualifiedName\n,\nString\nname\n)\n{\n// (3)\nreturn\nCustomDataset\n.\n_internal\n()\n.\nguid\n(\n\"-\"\n+\nThreadLocalRandom\n.\ncurrent\n().\nnextLong\n(\n0\n,\nLong\n.\nMAX_VALUE\n-\n1\n))\n.\nqualifiedName\n(\nqualifiedName\n)\n.\nname\n(\nname\n);\n}\n/**",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 5
    }
  },
  {
    "content": "name\n)\n{\n// (3)\nreturn\nCustomDataset\n.\n_internal\n()\n.\nguid\n(\n\"-\"\n+\nThreadLocalRandom\n.\ncurrent\n().\nnextLong\n(\n0\n,\nLong\n.\nMAX_VALUE\n-\n1\n))\n.\nqualifiedName\n(\nqualifiedName\n)\n.\nname\n(\nname\n);\n}\n/**\n* Builds the minimal object necessary to apply an update to a CustomDataset, from a potentially\n* more-complete CustomDataset object.\n*\n* @return the minimal object necessary to update the CustomDataset, as a builder\n* @throws InvalidRequestException if any of the minimal set of required properties for CustomDataset are not found in the initial object\n*/\n@Override\npublic\nCustomDatasetBuilder\n<?\n,\n?>\ntrimToRequired\n()\nthrows\nInvalidRequestException\n{\n// (4)\nvalidateRequired\n(\nTYPE_NAME\n,\nMap\n.\nof\n(\n\"qualifiedName\"\n,\nthis\n.\ngetQualifiedName\n(),\n\"name\"\n,\nthis\n.\ngetName\n()\n));\nreturn\nupdater\n(\nthis\n.\ngetQualifiedName\n(),\nthis\n.\ngetName\n());\n}\n</\n#\nmacro\n>\nEven though we require 4 attributes to create an\nCustomDataset\n, we can derive all of them from just 2 inputs. So to keep the interface as simple as possible, we will only request the 2 inputs we need to derive (automatically) the rest.\nAlways set the\nguid",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 6
    }
  },
  {
    "content": ", we can derive all of them from just 2 inputs. So to keep the interface as simple as possible, we will only request the 2 inputs we need to derive (automatically) the rest.\nAlways set the\nguid\nto a random, negative integer. This allows the SDK (and Atlan's back-end) to handle referential integrity when multiple inter-related assets are submitted in a single request — even if some of them need to be created.\nAlso implement an\nupdater()\nmethod that takes the minimal set of attributes required to\nupdate\nan asset of this type. In almost all cases this will be\nqualifiedName\nand\nname\n, but in some very rare cases could require other attributes.\nFinally, implement the\ntrimToRequired\nmethod to validate that an object of this type has the minimal set of attributes required to be used to update such an asset in Atlan. Like the\nupdater\nmethod this will in almost all cases just validate\nqualifiedName\nand\nname\nare present, but in some very rare cases could validate other attributes.\nIn Python, we need to create two templates:\npyatlan/generator/templates/methods/asset/custom_dataset.jinja2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n@classmethod\n@init_guid\ndef\ncreator\n(",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 7
    }
  },
  {
    "content": "pyatlan/generator/templates/methods/asset/custom_dataset.jinja2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n@classmethod\n@init_guid\ndef\ncreator\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\nconnection_qualified_name\n:\nstr\n)\n->\nCustomDataset\n:\n# (1)\nvalidate_required_fields\n(\n[\n\"name\"\n,\n\"connection_qualified_name\"\n],\n[\nname\n,\nconnection_qualified_name\n]\n)\nattributes\n=\nCustomDataset\n.\nAttributes\n.\ncreate\n(\nname\n=\nname\n,\nconnection_qualified_name\n=\nconnection_qualified_name\n)\nreturn\ncls\n(\nattributes\n=\nattributes\n)\n@classmethod\n@init_guid\ndef\ncreate\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\nconnection_qualified_name\n:\nstr\n)\n->\nCustomDataset\n:\nwarn\n(\n(\n\"This method is deprecated, please use 'creator' \"\n\"instead, which offers identical functionality.\"\n),\nDeprecationWarning\n,\nstacklevel\n=\n2\n,\n)\nreturn\ncls\n.\ncreator\n(\nname\n=\nname\n,\nconnection_qualified_name\n=\nconnection_qualified_name\n)\nEven though we require 4 attributes to create an\nCustomDataset\n, we can derive all of them from just 2 inputs. So to keep the interface as simple as possible, we will only request the 2 inputs we need to derive (automatically) the rest.\npyatlan/generator/templates/methods/attribute/custom_dataset.jinja2\n1\n2\n3\n4\n5\n6\n7\n8\n9",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 8
    }
  },
  {
    "content": "pyatlan/generator/templates/methods/attribute/custom_dataset.jinja2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n@classmethod\n@init_guid\ndef\ncreate\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\nconnection_qualified_name\n:\nstr\n)\n->\n{{\nentity_def\n.\nname\n}}\n.\nAttributes\n:\nvalidate_required_fields\n(\n[\n\"name\"\n,\n\"connection_qualified_name\"\n],\n[\nname\n,\nconnection_qualified_name\n]\n)\nreturn\n{{\nentity_def\n.\nname\n}}\n.\nAttributes\n(\n# (1)\nname\n=\nname\n,\nqualified_name\n=\nf\n\"\n{\nconnection_qualified_name\n}\n/\n{\nname\n}\n\"\n,\nconnection_qualified_name\n=\nconnection_qualified_name\n,\nconnector_name\n=\nAtlanConnectorType\n.\nget_connector_name\n(\nconnection_qualified_name\n),\n)\nIt is within the attributes template that we derive all the required attributes from the minimal inputs requested in the asset-level template.\nCustomTable\ntemplate\n¶\nAs stated earlier, the\nqualifiedName\nshould be a concatenation onto the parent's\nqualifiedName\n(in our running example, the parent of a\nCustomTable\nis a\nCustomDataset\n).\nJava\nPython\nsdk/src/main/resources/templates/CustomTable.ftl\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 9
    }
  },
  {
    "content": "1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n<\n#\nmacro\nall\n>\n/**\n* Builds the minimal object necessary to create a CustomTable.\n*\n* @param name of the CustomTable\n* @param customDataset in which the CustomTable should be created, which must have at least\n*                a qualifiedName\n* @return the minimal request necessary to create the CustomTable, as a builder\n* @throws InvalidRequestException if the CustomDataset provided is without a qualifiedName\n*/\npublic\nstatic\nCustomTableBuilder\n<?\n,\n?>\ncreator\n(\nString\nname\n,\nCustomDataset\ncustomDataset\n)\nthrows\nInvalidRequestException\n{\n// (1)\nvalidateRelationship\n(\nCustomDataset\n.\nTYPE_NAME\n,\nMap\n.\nof\n(\n\"qualifiedName\"\n,\ncustomDataset\n.\ngetQualifiedName\n()\n));\nreturn\ncreator\n(\nname\n,\ncustomDataset\n.\ngetQualifiedName\n()\n).\ncustomDataset\n(\ncustomDataset\n.\ntrimToReference\n());\n// (2)\n}\n/**\n* Builds the minimal object necessary to create an CustomTable.\n*\n* @param name unique name of the CustomTable",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 10
    }
  },
  {
    "content": "getQualifiedName\n()\n).\ncustomDataset\n(\ncustomDataset\n.\ntrimToReference\n());\n// (2)\n}\n/**\n* Builds the minimal object necessary to create an CustomTable.\n*\n* @param name unique name of the CustomTable\n* @param customDatasetQualifiedName unique name of the CustomDataset through which the table is accessible\n* @return the minimal object necessary to create the CustomTable, as a builder\n*/\npublic\nstatic\nCustomTableBuilder\n<?\n,\n?>\ncreator\n(\nString\nname\n,\nString\ncustomDatasetQualifiedName\n)\n{\n// (3)\nString\nconnectionQualifiedName\n=\nStringUtils\n.\ngetParentQualifiedNameFromQualifiedName\n(\ncustomDatasetQualifiedName\n);\nreturn\nCustomTable\n.\n_internal\n()\n.\nguid\n(\n\"-\"\n+\nThreadLocalRandom\n.\ncurrent\n().\nnextLong\n(\n0\n,\nLong\n.\nMAX_VALUE\n-\n1\n))\n.\nqualifiedName\n(\ncustomDatasetQualifiedName\n+\n\"/\"\n+\nname\n)\n.\nname\n(\nname\n)\n.\ncustomDataset\n(\nCustomDataset\n.\nrefByQualifiedName\n(\ncustomDatasetQualifiedName\n))\n.\nconnectionQualifiedName\n(\nconnectionQualifiedName\n)\n.\nconnectorType\n(\nConnection\n.\ngetConnectorTypeFromQualifiedName\n(\nconnectionQualifiedName\n));\n}\n/**\n* Builds the minimal object necessary to update a CustomTable.\n*\n* @param qualifiedName of the CustomTable\n* @param name of the CustomTable",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 11
    }
  },
  {
    "content": "(\nconnectionQualifiedName\n));\n}\n/**\n* Builds the minimal object necessary to update a CustomTable.\n*\n* @param qualifiedName of the CustomTable\n* @param name of the CustomTable\n* @return the minimal request necessary to update the CustomTable, as a builder\n*/\npublic\nstatic\nCustomTableBuilder\n<?\n,\n?>\nupdater\n(\nString\nqualifiedName\n,\nString\nname\n)\n{\nreturn\nCustomTable\n.\n_internal\n()\n.\nguid\n(\n\"-\"\n+\nThreadLocalRandom\n.\ncurrent\n().\nnextLong\n(\n0\n,\nLong\n.\nMAX_VALUE\n-\n1\n))\n.\nqualifiedName\n(\nqualifiedName\n)\n.\nname\n(\nname\n);\n}\n/**\n* Builds the minimal object necessary to apply an update to a CustomTable, from a potentially\n* more-complete CustomTable object.\n*\n* @return the minimal object necessary to update the CustomTable, as a builder\n* @throws InvalidRequestException if any of the minimal set of required properties for CustomTable are not found in the initial object\n*/\n@Override\npublic\nCustomTableBuilder\n<?\n,\n?>\ntrimToRequired\n()\nthrows\nInvalidRequestException\n{\nvalidateRequired\n(\nTYPE_NAME\n,\nMap\n.\nof\n(\n\"qualifiedName\"\n,\nthis\n.\ngetQualifiedName\n(),\n\"name\"\n,\nthis\n.\ngetName\n()\n));\nreturn\nupdater\n(\nthis\n.\ngetQualifiedName\n(),\nthis\n.\ngetName\n());\n}\n</\n#\nmacro\n>",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 12
    }
  },
  {
    "content": "validateRequired\n(\nTYPE_NAME\n,\nMap\n.\nof\n(\n\"qualifiedName\"\n,\nthis\n.\ngetQualifiedName\n(),\n\"name\"\n,\nthis\n.\ngetName\n()\n));\nreturn\nupdater\n(\nthis\n.\ngetQualifiedName\n(),\nthis\n.\ngetName\n());\n}\n</\n#\nmacro\n>\nFor asset types that have a parent asset, you should provide multiple overloaded\ncreator\nmethods. For example, one that takes the parent object itself (and validates the provided object has the minimal set of attributes we require on it) and one that takes only a\nqualifiedName\nof the parent asset.\nWhen implementing the method that takes a parent object, always set the relationship to the parent object explicitly and by using the\ntrimToReference()\nmethod on the parent object. This ensures that any GUID on the parent object is used to create the reference to the parent object — which ensures that any negative integer present for referential integrity is preferred over a\nqualifiedName\nfor the parent object. (Which further ensures that you can create both parent and child objects in the same request.)\nTypically the fully-parameterized\ncreator()\nmethod (with various string parameters) will be the one you call through to from any other overloaded\ncreator()",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 13
    }
  },
  {
    "content": "Typically the fully-parameterized\ncreator()\nmethod (with various string parameters) will be the one you call through to from any other overloaded\ncreator()\nmethods, so they all share the same foundational implementation.\npyatlan/generator/templates/methods/asset/custom_table.jinja2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n@overload\n@classmethod\ndef\ncreator\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\ncustom_dataset_qualified_name\n:\nstr\n,\n)\n->\nCustomTable\n:\n...\n@overload\n@classmethod\ndef\ncreator\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\ncustom_dataset_qualified_name\n:\nstr\n,\nconnection_qualified_name\n:\nstr\n,\n)\n->\nCustomTable\n:\n...\n@classmethod\n@init_guid\ndef\ncreator\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\ncustom_dataset_qualified_name\n:\nstr\n,\nconnection_qualified_name\n:\nOptional\n[\nstr\n]\n=\nNone\n,\n)\n->\nCustomTable\n:\nvalidate_required_fields\n(\n[\n\"name\"\n,\n\"custom_dataset_qualified_name\"\n],\n[\nname\n,\ncustom_dataset_qualified_name\n]\n)\nattributes\n=\nCustomTable\n.\nAttributes\n.\ncreate\n(\nname\n=\nname\n,\ncustom_dataset_qualified_name\n=\ncustom_dataset_qualified_name\n,\nconnection_qualified_name\n=\nconnection_qualified_name\n,\n)\nreturn\ncls\n(",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 14
    }
  },
  {
    "content": ")\nattributes\n=\nCustomTable\n.\nAttributes\n.\ncreate\n(\nname\n=\nname\n,\ncustom_dataset_qualified_name\n=\ncustom_dataset_qualified_name\n,\nconnection_qualified_name\n=\nconnection_qualified_name\n,\n)\nreturn\ncls\n(\nattributes\n=\nattributes\n)\n@classmethod\n@init_guid\ndef\ncreate\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\ncustom_dataset_qualified_name\n:\nstr\n)\n->\nCustomTable\n:\nwarn\n(\n(\n\"This method is deprecated, please use 'creator' \"\n\"instead, which offers identical functionality.\"\n),\nDeprecationWarning\n,\nstacklevel\n=\n2\n,\n)\nreturn\ncls\n.\ncreator\n(\nname\n=\nname\n,\ncustom_dataset_qualified_name\n=\ncustom_dataset_qualified_name\n)\npyatlan/generator/templates/methods/attribute/custom_table.jinja2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n@classmethod\n@init_guid\ndef\ncreate\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\ncustom_dataset_qualified_name\n:\nstr\n,\nconnection_qualified_name\n:\nOptional\n[\nstr\n]\n=\nNone\n,\n)\n->\nCustomTable\n.\nAttributes\n:\nvalidate_required_fields\n(\n[\n\"name\"\n,\n\"custom_dataset_qualified_name\"\n],\n[\nname\n,\ncustom_dataset_qualified_name\n],\n)\nif\nconnection_qualified_name\n:\nconnector_name\n=\nAtlanConnectorType\n.\nget_connector_name\n(\nconnection_qualified_name\n)\nelse\n:\nconnection_qn\n,\nconnector_name\n=",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 15
    }
  },
  {
    "content": "name\n,\ncustom_dataset_qualified_name\n],\n)\nif\nconnection_qualified_name\n:\nconnector_name\n=\nAtlanConnectorType\n.\nget_connector_name\n(\nconnection_qualified_name\n)\nelse\n:\nconnection_qn\n,\nconnector_name\n=\nAtlanConnectorType\n.\nget_connector_name\n(\ncustom_dataset_qualified_name\n,\n\"custom_dataset_qualified_name\"\n,\n4\n)\nreturn\nCustomTable\n.\nAttributes\n(\nname\n=\nname\n,\ncustom_dataset_qualified_name\n=\ncustom_dataset_qualified_name\n,\nconnector_name\n=\nconnector_name\n,\nconnection_qualified_name\n=\nconnection_qualified_name\nor\nconnection_qn\n,\nqualified_name\n=\nf\n\"\n{\ncustom_dataset_qualified_name\n}\n/\n{\nname\n}\n\"\n,\ncustom_dataset\n=\nCustomDataset\n.\nref_by_qualified_name\n(\ncustom_dataset_qualified_name\n),\n)\nCustomField\ntemplate\n¶\nFinally, the\nCustomField\ntemplate will be very similar to the\nCustomTable\ntemplate.\nIllustrates the case where a qualifiedName may contain forward-slashes\nSince\nqualifiedName\ns are typically constructed using a\n/\nas a delimiter, if the system you are representing could actually contain a\n/\nin the unique information you are placing into the\nqualifiedName\nyou need to be sure you pass\nall\ninformation to create the\nqualifiedName\n— you will not be able to parse the parent's",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 16
    }
  },
  {
    "content": "/\nin the unique information you are placing into the\nqualifiedName\nyou need to be sure you pass\nall\ninformation to create the\nqualifiedName\n— you will not be able to parse the parent's\nqualifiedName\nin these cases.\nJava\nPython\nsdk/src/main/resources/templates/CustomField.ftl\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n<\n#\nmacro\nall\n>\n/**\n* Builds the minimal object necessary to create a CustomField.\n*\n* @param name of the CustomField\n* @param customTable in which the CustomField should be created, which must have at least\n*                a qualifiedName\n* @return the minimal request necessary to create the CustomField, as a builder\n* @throws InvalidRequestException if the CustomTable provided is without a qualifiedName\n*/\npublic\nstatic\nCustomFieldBuilder\n<?\n,\n?>\ncreator\n(\nString\nname\n,",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 17
    }
  },
  {
    "content": "* @throws InvalidRequestException if the CustomTable provided is without a qualifiedName\n*/\npublic\nstatic\nCustomFieldBuilder\n<?\n,\n?>\ncreator\n(\nString\nname\n,\nCustomTable\ncustomTable\n)\nthrows\nInvalidRequestException\n{\n// (1)\nMap\n<\nString\n,\nString\n>\nmap\n=\nnew\nHashMap\n<>\n();\n// (2)\nmap\n.\nput\n(\n\"connectionQualifiedName\"\n,\ncustomTable\n.\ngetConnectionQualifiedName\n());\nmap\n.\nput\n(\n\"customDatasetName\"\n,\ncustomTable\n.\ngetCustomDatasetName\n());\nmap\n.\nput\n(\n\"customDatasetQualifiedName\"\n,\ncustomTable\n.\ngetCustomDatasetQualifiedName\n());\nmap\n.\nput\n(\n\"name\"\n,\ncustomTable\n.\ngetName\n());\nmap\n.\nput\n(\n\"qualifiedName\"\n,\ncustomTable\n.\ngetQualifiedName\n());\nvalidateRelationship\n(\nCustomTable\n.\nTYPE_NAME\n,\nmap\n);\nreturn\ncreator\n(\nname\n,\ncustomTable\n.\ngetConnectionQualifiedName\n(),\ncustomTable\n.\ngetCustomDatasetName\n(),\ncustomTable\n.\ngetCustomDatasetQualifiedName\n(),\ncustomTable\n.\ngetName\n(),\ncustomTable\n.\ngetQualifiedName\n()\n).\ncustomTable\n(\ncustomTable\n.\ntrimToReference\n());\n// (3)\n}\n/**\n* Builds the minimal object necessary to create a CustomField.\n*\n* @param name unique name of the CustomField\n* @param customTableQualifiedName unique name of the CustomTable through which the table is accessible",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 18
    }
  },
  {
    "content": "*\n* @param name unique name of the CustomField\n* @param customTableQualifiedName unique name of the CustomTable through which the table is accessible\n* @return the minimal object necessary to create the CustomField, as a builder\n*/\npublic\nstatic\nCustomFieldBuilder\n<?\n,\n?>\ncreator\n(\nString\nname\n,\nString\ncustomTableQualifiedName\n)\n{\n// (4)\nString\ncustomTableName\n=\nStringUtils\n.\ngetNameFromQualifiedName\n(\ncustomTableQualifiedName\n);\nString\ncustomDatasetQualifiedName\n=\nStringUtils\n.\ngetParentQualifiedNameFromQualifiedName\n(\ncustomTableQualifiedName\n);\nString\ncustomDatasetName\n=\nStringUtils\n.\ngetNameFromQualifiedName\n(\ncustomDatasetQualifiedName\n);\nString\nconnectionQualifiedName\n=\nStringUtils\n.\ngetParentQualifiedNameFromQualifiedName\n(\ncustomDatasetQualifiedName\n);\nreturn\ncreator\n(\nname\n,\nconnectionQualifiedName\n,\ncustomDatasetName\n,\ncustomDatasetQualifiedName\n,\ncustomTableName\n,\ncustomTableQualifiedName\n);\n}\n/**\n* Builds the minimal object necessary to create a CustomField.\n*\n* @param name of the CustomField\n* @param connectionQualifiedName unique name of the connection in which to create the CustomField",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 19
    }
  },
  {
    "content": "/**\n* Builds the minimal object necessary to create a CustomField.\n*\n* @param name of the CustomField\n* @param connectionQualifiedName unique name of the connection in which to create the CustomField\n* @param customDatasetQualifiedName simple name of the CustomDataset in which to create the CustomField\n* @param customDatasetName unique name of the CustomDataset in which to create the CustomField\n* @param customTableName simple name of the CustomTable in which to create the CustomField\n* @param customTableQualifiedName unique name of the CustomTable in which to create the CustomField\n* @return the minimal request necessary to create the CustomField, as a builder\n*/\npublic\nstatic\nCustomFieldBuilder\n<?\n,\n?>\ncreator\n(\nString\nname\n,\nString\nconnectionQualifiedName\n,\nString\ncustomDatasetQualifiedName\n,\nString\ncustomDatasetName\n,\nString\ncustomTableName\n,\nString\ncustomTableQualifiedName\n)\n{\nAtlanConnectorType\nconnectorType\n=\nConnection\n.\ngetConnectorTypeFromQualifiedName\n(\nconnectionQualifiedName\n);\nreturn\nCustomField\n.\n_internal\n()\n.\nguid\n(\n\"-\"\n+\nThreadLocalRandom\n.\ncurrent\n().\nnextLong\n(\n0\n,\nLong\n.\nMAX_VALUE\n-\n1\n))\n.\nname\n(\nname\n)\n.\nqualifiedName\n(\ngenerateQualifiedName\n(\nname\n,",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 20
    }
  },
  {
    "content": ");\nreturn\nCustomField\n.\n_internal\n()\n.\nguid\n(\n\"-\"\n+\nThreadLocalRandom\n.\ncurrent\n().\nnextLong\n(\n0\n,\nLong\n.\nMAX_VALUE\n-\n1\n))\n.\nname\n(\nname\n)\n.\nqualifiedName\n(\ngenerateQualifiedName\n(\nname\n,\ncustomTableQualifiedName\n))\n.\nconnectorType\n(\nconnectorType\n)\n.\ncustomTableName\n(\ncustomTableName\n)\n.\ncustomTableQualifiedName\n(\ncustomTableQualifiedName\n)\n.\ncustomTable\n(\nCustomTable\n.\nrefByQualifiedName\n(\ncustomTableQualifiedName\n))\n.\ncustomDatasetName\n(\ncustomDatasetName\n)\n.\ncustomDatasetQualifiedName\n(\ncustomDatasetQualifiedName\n)\n.\nconnectionQualifiedName\n(\nconnectionQualifiedName\n);\n}\n/**\n* Generate a unique CustomField name.\n*\n* @param name of the CustomField\n* @param customTableQualifiedName unique name of the CustomTable in which this CustomField exists\n* @return a unique name for the CustomField\n*/\npublic\nstatic\nString\ngenerateQualifiedName\n(\nString\nname\n,\nString\ncustomTableQualifiedName\n)\n{\n// (6)\nreturn\ncustomTableQualifiedName\n+\n\"/\"\n+\nname\n;\n}\n/**\n* Builds the minimal object necessary to update a CustomField.\n*\n* @param qualifiedName of the CustomField\n* @param name of the CustomField\n* @return the minimal request necessary to update the CustomField, as a builder\n*/\npublic\nstatic",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 21
    }
  },
  {
    "content": "*\n* @param qualifiedName of the CustomField\n* @param name of the CustomField\n* @return the minimal request necessary to update the CustomField, as a builder\n*/\npublic\nstatic\nCustomFieldBuilder\n<?\n,\n?>\nupdater\n(\nString\nqualifiedName\n,\nString\nname\n)\n{\nreturn\nCustomField\n.\n_internal\n()\n.\nguid\n(\n\"-\"\n+\nThreadLocalRandom\n.\ncurrent\n().\nnextLong\n(\n0\n,\nLong\n.\nMAX_VALUE\n-\n1\n))\n.\nqualifiedName\n(\nqualifiedName\n)\n.\nname\n(\nname\n);\n}\n/**\n* Builds the minimal object necessary to apply an update to a CustomField, from a potentially\n* more-complete CustomField object.\n*\n* @return the minimal object necessary to update the CustomField, as a builder\n* @throws InvalidRequestException if any of the minimal set of required properties for CustomField are not found in the initial object\n*/\n@Override\npublic\nCustomFieldBuilder\n<?\n,\n?>\ntrimToRequired\n()\nthrows\nInvalidRequestException\n{\nvalidateRequired\n(\nTYPE_NAME\n,\nMap\n.\nof\n(\n\"qualifiedName\"\n,\nthis\n.\ngetQualifiedName\n(),\n\"name\"\n,\nthis\n.\ngetName\n()\n));\nreturn\nupdater\n(\nthis\n.\ngetQualifiedName\n(),\nthis\n.\ngetName\n());\n}\n</\n#\nmacro\n>\nFor asset types that have a parent asset, you should provide multiple overloaded\ncreator",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 22
    }
  },
  {
    "content": "\"name\"\n,\nthis\n.\ngetName\n()\n));\nreturn\nupdater\n(\nthis\n.\ngetQualifiedName\n(),\nthis\n.\ngetName\n());\n}\n</\n#\nmacro\n>\nFor asset types that have a parent asset, you should provide multiple overloaded\ncreator\nmethods. For example, one that takes the parent object itself (and validates the provided object has the minimal set of attributes we require on it) and one that takes all the\nqualifiedName\ns and de-normalized\nname\ns  of the ancestral assets.\nWhen receiving only the parent asset, you will need to validate you have all the other information required on that parent asset (in particular, the full set of de-normalized attributes needed to create this asset).\nWhen implementing the method that takes a parent object, always set the relationship to the parent object explicitly and by using the\ntrimToReference()\nmethod on the parent object. This ensures that any GUID on the parent object is used to create the reference to the parent object — which ensures that any negative integer present for referential integrity is preferred over a\nqualifiedName\nfor the parent object. (Which further ensures that you can create both parent and child objects in the same request.)",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 23
    }
  },
  {
    "content": "qualifiedName\nfor the parent object. (Which further ensures that you can create both parent and child objects in the same request.)\nYou may still want to implement a\ncreator()\nthat parses details from the immediate parent's\nqualifiedName\n, if you know you will have control over when you must use the other (because some element of the\nqualifiedName\nitself has a\n/\nin it).\nTypically the fully-parameterized\ncreator()\nmethod (with various string parameters) will be the one you call through to from any other overloaded\ncreator()\nmethods, so they all share the same foundational implementation.\nYou may also want to define a distinct method to generate the\nqualifiedName\nfor the asset based on a set of defined inputs.\npyatlan/generator/templates/methods/asset/custom_field.jinja2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n@overload\n@classmethod\ndef\ncreator\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\ncustom_table_qualified_name\n:\nstr\n,\n)\n->\nCustomField\n:\n...\n@overload\n@classmethod\ndef\ncreator\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\ncustom_table_qualified_name\n:\nstr\n,\ncustom_table_name\n:\nstr\n,",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 24
    }
  },
  {
    "content": ",\n*\n,\nname\n:\nstr\n,\ncustom_table_qualified_name\n:\nstr\n,\n)\n->\nCustomField\n:\n...\n@overload\n@classmethod\ndef\ncreator\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\ncustom_table_qualified_name\n:\nstr\n,\ncustom_table_name\n:\nstr\n,\ncustom_dataset_name\n:\nstr\n,\ncustom_dataset_qualified_name\n:\nstr\n,\nconnection_qualified_name\n:\nstr\n,\n)\n->\nCustomField\n:\n...\n@classmethod\n@init_guid\ndef\ncreator\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\ncustom_table_qualified_name\n:\nstr\n,\ncustom_table_name\n:\nOptional\n[\nstr\n]\n=\nNone\n,\ncustom_dataset_name\n:\nOptional\n[\nstr\n]\n=\nNone\n,\ncustom_dataset_qualified_name\n:\nOptional\n[\nstr\n]\n=\nNone\n,\nconnection_qualified_name\n:\nOptional\n[\nstr\n]\n=\nNone\n,\n)\n->\nCustomField\n:\nvalidate_required_fields\n(\n[\n\"name\"\n,\n\"custom_table_qualified_name\"\n],\n[\nname\n,\ncustom_table_qualified_name\n]\n)\nattributes\n=\nCustomField\n.\nAttributes\n.\ncreate\n(\nname\n=\nname\n,\ncustom_table_qualified_name\n=\ncustom_table_qualified_name\n,\ncustom_table_name\n=\ncustom_table_name\n,\ncustom_dataset_name\n=\ncustom_dataset_name\n,\ncustom_dataset_qualified_name\n=\ncustom_dataset_qualified_name\n,\nconnection_qualified_name\n=\nconnection_qualified_name\n,\n)\nreturn\ncls\n(\nattributes\n=\nattributes\n)\n@classmethod\n@init_guid\ndef\ncreate\n(\ncls\n,\n*\n,\nname\n:\nstr\n,",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 25
    }
  },
  {
    "content": "=\ncustom_dataset_qualified_name\n,\nconnection_qualified_name\n=\nconnection_qualified_name\n,\n)\nreturn\ncls\n(\nattributes\n=\nattributes\n)\n@classmethod\n@init_guid\ndef\ncreate\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\ncustom_table_qualified_name\n:\nstr\n)\n->\nCustomField\n:\nwarn\n(\n(\n\"This method is deprecated, please use 'creator' \"\n\"instead, which offers identical functionality.\"\n),\nDeprecationWarning\n,\nstacklevel\n=\n2\n,\n)\nreturn\ncls\n.\ncreator\n(\nname\n=\nname\n,\ncustom_table_qualified_name\n=\ncustom_table_qualified_name\n)\npyatlan/generator/templates/methods/attribute/custom_field.jinja2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n@classmethod\n@init_guid\ndef\ncreate\n(\ncls\n,\n*\n,\nname\n:\nstr\n,\ncustom_table_qualified_name\n:\nstr\n,\ncustom_table_name\n:\nOptional\n[\nstr\n]\n=\nNone\n,\ncustom_dataset_name\n:\nOptional\n[\nstr\n]\n=\nNone\n,\ncustom_dataset_qualified_name\n:\nOptional\n[\nstr\n]\n=\nNone\n,\nconnection_qualified_name\n:\nOptional\n[\nstr\n]\n=\nNone\n,\n)\n->\nCustomField\n.\nAttributes\n:\nvalidate_required_fields\n(\n[\n\"name\"\n,\n\"custom_table_qualified_name\"\n],\n[\nname\n,\ncustom_table_qualified_name\n],\n)\nif\nconnection_qualified_name\n:\nconnector_name\n=",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 26
    }
  },
  {
    "content": "None\n,\n)\n->\nCustomField\n.\nAttributes\n:\nvalidate_required_fields\n(\n[\n\"name\"\n,\n\"custom_table_qualified_name\"\n],\n[\nname\n,\ncustom_table_qualified_name\n],\n)\nif\nconnection_qualified_name\n:\nconnector_name\n=\nAtlanConnectorType\n.\nget_connector_name\n(\nconnection_qualified_name\n)\nelse\n:\nconnection_qn\n,\nconnector_name\n=\nAtlanConnectorType\n.\nget_connector_name\n(\ncustom_table_qualified_name\n,\n\"custom_table_qualified_name\"\n,\n5\n)\nfields\n=\ncustom_table_qualified_name\n.\nsplit\n(\n\"/\"\n)\nqualified_name\n=\nf\n\"\n{\ncustom_table_qualified_name\n}\n/\n{\nname\n}\n\"\nconnection_qualified_name\n=\nconnection_qualified_name\nor\nconnection_qn\ncustom_dataset_name\n=\ncustom_dataset_name\nor\nfields\n[\n3\n]\ncustom_table_name\n=\ncustom_table_name\nor\nfields\n[\n4\n]\ncustom_dataset_qualified_name\n=\n(\ncustom_dataset_qualified_name\nor\nf\n\"\n{\nconnection_qualified_name\n}\n/\n{\ncustom_dataset_name\n}\n\"\n)\nreturn\nCustomField\n.\nAttributes\n(\nname\n=\nname\n,\nqualified_name\n=\nqualified_name\n,\ncustom_table_qualified_name\n=\ncustom_table_qualified_name\n,\ncustom_table_name\n=\ncustom_table_name\n,\ncustom_dataset_name\n=\ncustom_dataset_name\n,\ncustom_dataset_qualified_name\n=\ncustom_dataset_qualified_name\n,\nconnector_name\n=\nconnector_name\n,",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 27
    }
  },
  {
    "content": ",\ncustom_table_name\n=\ncustom_table_name\n,\ncustom_dataset_name\n=\ncustom_dataset_name\n,\ncustom_dataset_qualified_name\n=\ncustom_dataset_qualified_name\n,\nconnector_name\n=\nconnector_name\n,\nconnection_qualified_name\n=\nconnection_qualified_name\n,\ncustom_table\n=\nCustomTable\n.\nref_by_qualified_name\n(\ncustom_table_qualified_name\n),\n)\nGenerate model code\n¶\nNow that the\ncreator\nmethod has been defined for each new asset type, you can regenerate the SDK's code to include these new asset types:\nJava\nPython\nBefore running any generator scripts, make sure you have\nconfigured your environment variables\n(setting the\nATLAN_BASE_URL\nand\nATLAN_API_KEY\nenvironment variables is sufficient).\nGenerate the asset model, enums, and structs in the SDK based on the typedefs present in your Atlan instance:\n./gradlew\ngenModel\nIf you see failures\nThe generator also generates unit tests for new asset types, which will use Java reflection to investigate objects like enums. If you see an error during the generation that a given type (struct or enum) is unknown, you may need to simply re-run the generator.\nThe generated files will be unformatted, so we recommend running Spotless to format the code nicely:\n./gradlew",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 28
    }
  },
  {
    "content": "The generated files will be unformatted, so we recommend running Spotless to format the code nicely:\n./gradlew\nspotlessApply\nBefore running any generator scripts, make sure you have\nconfigured your environment variables\n(\nATLAN_BASE_URL\nand\nATLAN_API_KEY\n).\nRetrieve the typedefs from an Atlan instance and write them to a JSON file by running the following script:\npython3\npyatlan/generator/create_typedefs_file.py\nFinally, to generate the asset model, enums, and structs modules in the SDK based on the typedefs present in your Atlan instance, run:\npython3\npyatlan/generator/class_generator.py\nThe generated files will be unformatted, so we recommend running\npyatlan_formatter\nto format the code nicely:\n./pyatlan-formatter\nNow, you are ready to import the generated asset models into your test scripts and easily manage their objects!\n2025-03-11\n2025-06-24\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 29
    }
  },
  {
    "content": "to provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
    "metadata": {
      "source_url": "toolkits_typedef_bind-sdks.html",
      "source_type": "sdk",
      "file": "toolkits_typedef_bind-sdks.json",
      "chunk_id": 30
    }
  }
]