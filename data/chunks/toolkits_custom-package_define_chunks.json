[
  {
    "content": "Define package via template - Developer\nSkip to content\nDefine package via template\n¶\nHow to read this guide\nEach section of this guide provides 2 tabs, which are linked throughout (once you swap in one section, all other sections will automatically reflect that same level of detail):\nSimple\n— when you are just starting out, follow these tabs to understand the basic structure of the toolkit and the fundamental elements that you\nmust\nuse.\nDetailed\n— as you start to wonder about additional complexity, consider changing to these tabs, which cover additional (optional) possibilities.\nStart by creating a Pkl file that amends our published package config toolkit model:\nMyCustomPackage.pkl\n1\namends\n\"package://developer.atlan.com/toolkits/custom-package/config@5.0.3#/Framework.pkl\"\nIf this is the first time you're creating a package, hover over that line and download the Pkl package.\nDefine overall metadata\n¶\nThen you can start defining your package. All packages should have at least these main components:\nMyCustomPackage.pkl\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\namends",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 0
    }
  },
  {
    "content": "MyCustomPackage.pkl\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\namends\n\"package://developer.atlan.com/toolkits/custom-package/config@5.0.3#/Framework.pkl\"\nimport\n\"pkl:semver\"\n// (1)\nimport\n\"package://developer.atlan.com/toolkits/custom-package/config@5.0.3#/Connectors.pkl\"\n// (2)\npackageId\n=\n\"@csa/openapi-spec-loader\"\n// (3)\npackageName\n=\n\"OpenAPI Spec Loader\"\n// (4)\nversion\n=\nsemver\n.\nVersion\n(\n\"1.0.0\"\n)\n// (5)\ndescription\n=\n\"Loads API specs and paths from an OpenAPI (v3) definition.\"\n// (6)\niconUrl\n=\n\"http://assets.atlan.com/assets/apispec.png\"\n// (7)\ndocsUrl\n=\n\"https://developer.atlan.com/samples/loaders/openapi/\"\n// (8)\nimplementationLanguage\n=\n\"Kotlin\"\n// (9)\ncontainerImage\n=\n\"ghcr.io/atlanhq/\\(name):\\(version)\"\n// (10)\ncontainerCommand\n{\n// (11)\n\"/dumb-init\"\n\"--\"\n\"java\"\n\"OpenAPISpecLoaderKt\"\n}\noutputs\n{\n// (12)\nfiles\n{\n[\n\"debug-logs\"\n]\n=\n\"/tmp/debug.log\"\n}\n}\nkeywords\n{\n// (13)\n\"kotlin\"\n\"crawler\"\n\"openapi\"\n}\ncategory\n=\n\"custom\"\n// (14)\npreview\n=\ntrue\n// (15)\ncertified\n=\nfalse\n// (16)\nconnectorType\n=\nConnectors\n.\nAPI\n// (17)\nuiConfig\n{\n// (18)\n...\n}\ncredentialConfig\n{\n// (19)\n...\n}",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 1
    }
  },
  {
    "content": "\"crawler\"\n\"openapi\"\n}\ncategory\n=\n\"custom\"\n// (14)\npreview\n=\ntrue\n// (15)\ncertified\n=\nfalse\n// (16)\nconnectorType\n=\nConnectors\n.\nAPI\n// (17)\nuiConfig\n{\n// (18)\n...\n}\ncredentialConfig\n{\n// (19)\n...\n}\nImport the standard Pkl library for semantic versioning, to define your package's version.\n(Optional) If your package could create a connection, import the pre-defined set of connections from the package toolkit.\nA\npackageId\n, which gives a unique namespaced identity for your package. It must be of the form\n@namespace/kebab-case-name\n.\nA\npackageName\n, which gives the human-readable name of your package, as it should show in the UI.\nA\nversion\nfor your package, which must follow semantic versioning.\nA\ndescription\nfor your package, as it should show in the UI.\nAn\niconUrl\ngiving an online location where the icon to use in the UI for this package can be accessed.\nA\ndocsUrl\ngiving an online location where additional documentation about the package can be found. This will be linked in the UI.\nThe\nimplementationLanguage",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 2
    }
  },
  {
    "content": "A\ndocsUrl\ngiving an online location where additional documentation about the package can be found. This will be linked in the UI.\nThe\nimplementationLanguage\ndefining the coding language you will use to implement the logic of your package. This is used by the toolkit to generate a strongly-typed data class that captures the inputs a user provides during setup of the package.\nThe\ncontainerImage\nthat will encapsulate your package's code.\nUse variables where possible\nNote that Pkl is itself a language, so you can use variables here as well (for example, if your container images follow a naming convention that can be generated from the\npackageId\nor to automatically set the version).\nThe full\ncontainerCommand\nused to run your custom logic within the container. This should be specified as a list, rather than a single spaced-out string.\n(Optional) Any\noutputs\nyour package's logic will produce, that you want a user to be able to download. In this example, our package will write debug logs out to\n/tmp/debug.log\nand we will make these available for download.\n(Optional) Any\nkeywords\nyou want your package to have associated with it.\n(Optional) The\ncategory",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 3
    }
  },
  {
    "content": "/tmp/debug.log\nand we will make these available for download.\n(Optional) Any\nkeywords\nyou want your package to have associated with it.\n(Optional) The\ncategory\ncontrols the name of the pill in the marketplace in the UI where the package will be listed. It will default to\ncustom\nif not specified.\n(Optional) Setting\npreview\nto true will show a small orange badge on the package indicating it is experimental (by default it will not be experimental).\n(Optional) Setting\ncertified\nto false will remove the green tick badge from the package indicating it is certified (by default it will be certified).\n(Optional) When your package could create a connection, use the\nconnectorType\nto define what kind of connection it should create.\nA\nuiConfig\nsection where you will define the inputs you want your package to receive from the user during setup.\n(Optional) A\ncredentialConfig\nsection where you can define any sensitive inputs you want the user to provide, typically to connect to an external system. Any details provided by a user within these inputs will be encrypted and stored in a secure vault in Atlan.\nDefine configurable inputs\n¶\nUse the\nuiConfig",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 4
    }
  },
  {
    "content": "Define configurable inputs\n¶\nUse the\nuiConfig\nsection to define the configurable inputs you want the user to provide when setting up your package.\nThese inputs fit into a two-level hierarchy:\nTasks\nare the top-level steps you see along the left side when setting up a new package.\nInputs\nare the individual widgets a user can enter information into, select from, etc within each task (step).\nIn addition to these inputs, you can (optionally) define one or more\nrules\nto control which inputs appear on the screen, based on what a user has selected in some other input.\nSimple\nDetailed\nMyCustomPackage.pkl\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\nuiConfig\n{\ntasks\n{\n// (1)\n[\n\"Configuration\"\n]\n{\n// (2)\ndescription\n=\n\"OpenAPI spec configuration\"\n// (3)\ninputs\n{\n// (4)\n...\n}\n}\n[\n\"Connection\"\n]\n{\n// (5)\ndescription\n=\n\"Connection details\"\ninputs\n{\n...\n}\n}\n}\nrules\n{\n// (6)\n...\n}\n}\nYou must define one (and only one) list of\ntasks\n.\nUse the name as you want it to show in the UI for each top-level step, surrounded in square brackets. You can then enclose the definition of that top-level step in curly braces.\nInclude a\ndescription",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 5
    }
  },
  {
    "content": "Use the name as you want it to show in the UI for each top-level step, surrounded in square brackets. You can then enclose the definition of that top-level step in curly braces.\nInclude a\ndescription\n, which will show in the UI as part of the top-level step (very space-limited).\nAlso include the list of\ninputs\nthat should be configured as part of that top-level step.\nYou can define as many of these top-level steps as you like. They will be displayed in the order (top-down) they are listed here in the model.\n(Optional) You can then specify any rules to control which inputs appear on the screen (or not), based on what a user has selected in some other input.\nMyCustomPackage.pkl\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\nuiConfig\n{\ntasks\n{\n// (1)\n[\n\"Configuration\"\n]\n{\n// (2)\ndescription\n=\n\"OpenAPI spec configuration\"\n// (3)\ninputs\n{\n// (4)\n[\n\"spec_url\"\n]\n=\nnew\nTextInput\n{\n// (5)\ntitle\n=\n\"Specification URL\"\n// (6)\nrequired\n=\ntrue\n// (7)\nhelpText\n=\n\"Full URL to the JSON form of the OpenAPI specification.\"\n// (8)\nplaceholderText\n=",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 6
    }
  },
  {
    "content": "// (4)\n[\n\"spec_url\"\n]\n=\nnew\nTextInput\n{\n// (5)\ntitle\n=\n\"Specification URL\"\n// (6)\nrequired\n=\ntrue\n// (7)\nhelpText\n=\n\"Full URL to the JSON form of the OpenAPI specification.\"\n// (8)\nplaceholderText\n=\n\"https://petstore3.swagger.io/api/v3/openapi.json\"\n// (9)\n}\n}\n}\n[\n\"Connection\"\n]\n{\n// (10)\ndescription\n=\n\"Connection details\"\ninputs\n{\n[\n\"connection_usage\"\n]\n=\nnew\nRadio\n{\ntitle\n=\n\"Connection\"\nrequired\n=\ntrue\npossibleValues\n{\n[\n\"CREATE\"\n]\n=\n\"Create\"\n[\n\"REUSE\"\n]\n=\n\"Reuse\"\n}\ndefault\n=\n\"REUSE\"\nfallback\n=\ndefault\n// (11)\nhelpText\n=\n\"Whether to create a new connection to hold these API assets, or reuse an existing connection.\"\n}\n[\n\"connection\"\n]\n=\nnew\nConnectionCreator\n{\ntitle\n=\n\"Connection\"\nrequired\n=\ntrue\nhelpText\n=\n\"Enter details for a new connection to be created.\"\n}\n[\n\"connection_qualified_name\"\n]\n=\nnew\nConnectionSelector\n{\ntitle\n=\n\"Connection\"\nrequired\n=\ntrue\nhelpText\n=\n\"Select an existing connection to load assets into.\"\n}\n}\n}\n}\nrules\n{\n// (12)\nnew\nUIRule\n{\n// (13)\nwhenInputs\n{\n[\n\"connection_usage\"\n]\n=\n\"REUSE\"\n}\n// (14)\nrequired\n{\n\"connection_qualified_name\"\n}\n// (15)\n}\nnew\nUIRule\n{\n// (16)\nwhenInputs\n{\n[\n\"connection_usage\"\n]\n=\n\"CREATE\"\n}\nrequired\n{\n\"connection\"\n}\n}\n}\n}",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 7
    }
  },
  {
    "content": "{\n[\n\"connection_usage\"\n]\n=\n\"REUSE\"\n}\n// (14)\nrequired\n{\n\"connection_qualified_name\"\n}\n// (15)\n}\nnew\nUIRule\n{\n// (16)\nwhenInputs\n{\n[\n\"connection_usage\"\n]\n=\n\"CREATE\"\n}\nrequired\n{\n\"connection\"\n}\n}\n}\n}\nYou must define one (and only one) list of\ntasks\n.\nUse the name as you want it to show in the UI for each top-level step, surrounded in square brackets. You can then enclose the definition of that top-level step in curly braces.\nInclude a\ndescription\n, which will show in the UI as part of the top-level step (very space-limited).\nAlso include the list of\ninputs\nthat should be configured as part of that top-level step.\nFor each input, specify a unique variable name (in\nlower_snake_case\n) surrounded by square brackets. You can choose from a\nvariety of widgets\nto use for receiving that input from a user.\nAll inputs will at least need a\ntitle\n, which defines the text to show in the UI for that widget.\nAll inputs can also be configured as mandatory using\nrequired = true\n(by default they'll be optional).\nAll inputs can also be given a\nhelpText\n, which when provided shows an information icon next to the\ntitle\nthat can be hovered over for more information on how the input should be used.",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 8
    }
  },
  {
    "content": "All inputs can also be given a\nhelpText\n, which when provided shows an information icon next to the\ntitle\nthat can be hovered over for more information on how the input should be used.\nOther configurable options will vary by the kind of input, but could include for example some light grey text to show in the box by default to give the user some idea of the value you're expecting from them.\nYou can define as many of these top-level steps as you like, and within each as many inputs as you like. They will be displayed in the order (top-down) they are listed here in the model.\n(Optional) You can specify a\nfallback\nvalue to use for any input, in case the user does not make any selection or enter any value in the UI.\n(Optional) You can then specify any rules to control which inputs appear on the screen (or not), based on what a user has selected in some other input.\nEach new rule needs to be defined as\nnew UIRule\n, with its definition enclosed in curly braces.\nYou must specify a\nwhenInputs\nthat defines an input variable name and value.\nWhen the input variable has the value indicated above, all input variables defined in this\nrequired",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 9
    }
  },
  {
    "content": "You must specify a\nwhenInputs\nthat defines an input variable name and value.\nWhen the input variable has the value indicated above, all input variables defined in this\nrequired\nwill be shown in the UI (otherwise they will be hidden).\nWhen you have multiple conditions or inputs to show or hide, you can use this more spaced out form. This example means that when a user has selected\nCREATE\nfor the\nconnection_usage\ninput, the UI will show the\nconnection\ninput.\nDefine sensitive inputs\n¶\nUse the\ncredentialConfig\nsection to define sensitive inputs you want the user to provide when setting up your package.\nEncrypted and secured in a vault\nAny details a user provides within this section will be encrypted and secured in a vault within Atlan, for added protection.\nThese inputs fit into two types:\nCommon inputs\nare inputs that are common irrespective of the type of credential the user is configuring.\nOptions\ndefine the different types of credentials a user can configure (for example, basic username and password vs shared secrets).\nSimple\nDetailed\nMyCustomPackage.pkl\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\ncredentialConfig\n{\nname\n=\n\"csa-connector-custom\"\n// (1)\nsource\n=\nConnectors\n.\nAPI\n// (2)",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 10
    }
  },
  {
    "content": "Simple\nDetailed\nMyCustomPackage.pkl\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\ncredentialConfig\n{\nname\n=\n\"csa-connector-custom\"\n// (1)\nsource\n=\nConnectors\n.\nAPI\n// (2)\nicon\n=\n\"https://assets.atlan.com/assets/apispec.svg\"\n// (3)\nhelpdesk\n=\n\"https://ask.atlan.com/hc/en-us/articles/1234567890\"\n// (4)\nlogo\n=\n\"https://assets.atlan.com/assets/apispec.svg\"\n// (5)\ncommonInputs\n{\n// (6)\n...\n}\noptions\n{\n// (7)\n...\n}\n}\nYou must give the credentials configuration a unique name. (This allows you to reuse credential configurations without needing to redefine them in different packages.)\nSet the\nsource\nto the type of connector through which these credentials can be used.\nDefine the icon to use when representing this particular source and credential in the UI.\nProvide a link to any documentation about how to set up these credentials, for example any pre-requites on the permissions that are required on the external system.\nDefine the logo to use when representing this particular source and credential in the UI.\n(Optional) You can define any common inputs that are shared across different connectivity options.",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 11
    }
  },
  {
    "content": "Define the logo to use when representing this particular source and credential in the UI.\n(Optional) You can define any common inputs that are shared across different connectivity options.\nYou must define at least one option for connecting to the external system, and could define many. For example, you may want to support both a username and password as one option, and another option that uses some shared secrets or API tokens.\nMyCustomPackage.pkl\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\ncredentialConfig\n{\nname\n=\n\"csa-connector-custom\"\n// (1)\nsource\n=\nConnectors\n.\nAPI\n// (2)\nicon\n=\n\"https://assets.atlan.com/assets/apispec.svg\"\n// (3)\nhelpdesk\n=\n\"https://ask.atlan.com/hc/en-us/articles/1234567890\"\n// (4)\nlogo\n=\n\"https://assets.atlan.com/assets/apispec.svg\"\n// (5)\ncommonInputs\n{\n// (6)\n[\n\"host\"\n]\n=\nnew\nTextInput\n{\n// (7)\ntitle\n=\n\"Hostname\"\n// (8)\nplaceholderText\n=\n\"petstore3.swagger.io\"\n// (9)\nprepend\n=\n\"https://\"\nwidth\n=\n6\n}\n[\n\"port\"\n]\n=\nnew\nNumericInput\n{\ntitle\n=\n\"Port\"\ndefault\n=\n443",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 12
    }
  },
  {
    "content": "]\n=\nnew\nTextInput\n{\n// (7)\ntitle\n=\n\"Hostname\"\n// (8)\nplaceholderText\n=\n\"petstore3.swagger.io\"\n// (9)\nprepend\n=\n\"https://\"\nwidth\n=\n6\n}\n[\n\"port\"\n]\n=\nnew\nNumericInput\n{\ntitle\n=\n\"Port\"\ndefault\n=\n443\nwidth\n=\n2\n}\n}\noptions\n{\n// (10)\n[\n\"basic\"\n]\n{\n// (11)\ntitle\n=\n\"Basic\"\n// (12)\ninputs\n{\n// (13)\n[\n\"username\"\n]\n=\nnew\nTextInput\n{\n// (14)\ntitle\n=\n\"Username\"\nrequired\n=\ntrue\ndefaultValue\n=\n\"jane.smith\"\nwidth\n=\n4\n}\n[\n\"password\"\n]\n=\nnew\nPasswordInput\n{\ntitle\n=\n\"Password\"\nrequired\n=\ntrue\nwidth\n=\n4\n}\n[\n\"extra\"\n]\n=\nnew\nNestedInput\n{\n// (15)\ntitle\n=\n\"Role\"\n// (16)\ninputs\n{\n// (17)\n[\n\"role\"\n]\n=\nnew\nDropDown\n{\ntitle\n=\n\"Role\"\npossibleValues\n{\n[\n\"USER\"\n]\n=\n\"user\"\n[\n\"ADMIN\"\n]\n=\n\"admin\"\n}\nwidth\n=\n4\n}\n}\n}\n}\n}\n[\n\"keypair\"\n]\n{\ntitle\n=\n\"Keypair\"\ninputs\n{\n[\n\"username\"\n]\n=\nnew\nTextInput\n{\ntitle\n=\n\"Username\"\nplaceholderText\n=\n\"jsmith\"\nwidth\n=\n4\n}\n[\n\"password\"\n]\n=\nnew\nTextBoxInput\n{\ntitle\n=\n\"Encrypted Private Key\"\nplaceholderText\n=\n\"-----BEGIN ENCRYPTED PRIVATE KEY-----MIIE6TAbBgkqhkiG9w0BBQMwDgQILYPyCppzOwECAggABIIEyLiGSpeeGSe3xHP1wHLjfCYycUPennlX2bd8    yX8xOxGSGfvB+99+PmSlex0FmY9ov1J8H1H9Y3lMWXbL...-----END ENCRYPTED PRIVATE KEY-----\"\nwidth\n=\n4\n}\n[\n\"extra\"\n]\n=\nnew\nNestedInput\n{\ntitle\n=\n\"Private Key Password\"",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 13
    }
  },
  {
    "content": "width\n=\n4\n}\n[\n\"extra\"\n]\n=\nnew\nNestedInput\n{\ntitle\n=\n\"Private Key Password\"\ninputs\n{\n[\n\"private_key_password\"\n]\n=\nnew\nPasswordInput\n{\ntitle\n=\n\"Private Key Password\"\nwidth\n=\n5\n}\n}\n}\n}\n}\n}\n}\nYou must give the credentials configuration a unique name. (This allows you to reuse credential configurations without needing to redefine them in different packages.)\nSet the\nsource\nto the type of connector through which these credentials can be used.\nDefine the icon to use when representing this particular source and credential in the UI.\nProvide a link to any documentation about how to set up these credentials, for example any pre-requites on the permissions that are required on the external system.\nDefine the logo to use when representing this particular source and credential in the UI.\n(Optional) You can define any common inputs that are shared across different connectivity options.\nFor each input, specify a unique variable name (in\nlower_snake_case\n) surrounded by square brackets. You can choose from a\nvariety of widgets\nto use for receiving that input from a user.\nAll inputs will need at least a\ntitle\n, which defines the text to show in the UI for that widget.",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 14
    }
  },
  {
    "content": "variety of widgets\nto use for receiving that input from a user.\nAll inputs will need at least a\ntitle\n, which defines the text to show in the UI for that widget.\nOther configurable options will vary by the kind of input, but could include for example some light grey text to show in the box by default to give the user some idea of the value you're expecting from them.\nYou must define at least one option for connecting to the external system, and could define many. For example, you may want to support both a username and password as one option, and another option that uses some shared secrets or API tokens.\nDelegate publishing\n¶\nYou can now use the toolkit to delegate publishing of assets through packages that use CSV inputs. Your own logic simply needs to produce a CSV output file that matches the required format of one of these publishing package's CSV inputs.\nHandles many common scenarios automatically\nThese publishing packages are designed to handle common scenarios for you directly, such as:\nCalculating differences (deltas) between a previous load and the current load, to automatically:\nIdentify which assets should be deleted (or archived), and do so",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 15
    }
  },
  {
    "content": "Calculating differences (deltas) between a previous load and the current load, to automatically:\nIdentify which assets should be deleted (or archived), and do so\nOptimize the publishing to only save any assets that have changed\nSupport only updating assets (avoiding any accidental asset creation), if desired\nAllow case-insensitive matching of\nqualifiedName\ns of assets\nResolve any ambiguity between tables or views for you, automatically\nTo add a delegated publish step to your package, you need only add a\npublishConfig\nto your template:\nDetailed\nMyCustomPackage.pkl\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\npublishConfig\n=\nnew\nAssetImport\n{\n// (1)\nversionTag\n=\n\"5.0.1\"\n// (2)\nassetsFile\n=\ntransferFile\n(\n// (3)\noutputs\n,\n\"transformed_file\"\n,\n\"current.csv\"\n)\nassetsUpsertSemantic\n=\ntransferConfigInput\n(\n// (4)\nuiConfig\n,\n\"assets_upsert_semantic\"\n)\nassetsPreviousFilePrefix\n=\n\"csa-relational-assets-builder\"\n// (5)\nassetsDeltaSemantic\n=\ntransferConfigInput\n(\nuiConfig\n,\n\"delta_semantic\"\n)\nassetsDeltaRemovalType\n=\ntransferConfigInput\n(\nuiConfig\n,\n\"delta_removal_type\"\n)\nassetsDeltaReloadCalculation\n=\ntransferConfigInput\n(\nuiConfig\n,",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 16
    }
  },
  {
    "content": "=\ntransferConfigInput\n(\nuiConfig\n,\n\"delta_semantic\"\n)\nassetsDeltaRemovalType\n=\ntransferConfigInput\n(\nuiConfig\n,\n\"delta_removal_type\"\n)\nassetsDeltaReloadCalculation\n=\ntransferConfigInput\n(\nuiConfig\n,\n\"delta_reload_calculation\"\n)\nassetsFailOnErrors\n=\ntransferConfigInput\n(\nuiConfig\n,\n\"assets_fail_on_errors\"\n)\nassetsFieldSeparator\n=\ntransferConfigInput\n(\nuiConfig\n,\n\"assets_field_separator\"\n)\nassetsBatchSize\n=\ntransferConfigInput\n(\nuiConfig\n,\n\"assets_batch_size\"\n)\nassetsCmHandling\n=\ntransferConfigInput\n(\nuiConfig\n,\n\"assets_cm_handling\"\n)\nassetsTagHandling\n=\ntransferConfigInput\n(\nuiConfig\n,\n\"assets_tag_handling\"\n)\nassetsLinkIdempotency\n=\ntransferConfigInput\n(\nuiConfig\n,\n\"assets_link_idempotency\"\n)\ntrackBatches\n=\ntransferConfigInput\n(\nuiConfig\n,\n\"track_batches\"\n)\n}\nWhen configuring which publish package to delegate, you can choose from either\nAssetImport\n,\nRelationalAssetsBuilder\nor\nLineageBuilder\n. Each can be configured with different options, which are described further in the sections below.\nYou need to provide the specific version of the package you want to use for publishing. This version will match the version published at\natlanhq/atlan-java\n.",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 17
    }
  },
  {
    "content": "You need to provide the specific version of the package you want to use for publishing. This version will match the version published at\natlanhq/atlan-java\n.\nFor any file-based inputs, use the toolkit's\ntransferFile()\nhelper to indicate how to transfer the file from the outputs your own package produces:\noutputs\nis the name of the variable in your package defining its outputs (will always be this)\n\"transformed_file\"\nis the key of the entry in that\noutputs\nvariable that points to the file your package produces that you want to delegate for publishing\n\"current.csv\"\nis the name of the file you want to use when you pass it along to the publishing package\nFor any configuration-based inputs, use the toolkit's\ntransferConfigInput()\nhelper to indicate which UI-based input variable's value to transfer to the publishing package.\nuiConfig\nis the name of the variable in your package defining its UI-based inputs (will always be this)\n\"assets_upsert_semantic\"\nis the name of the UI input (widget variable) from which to take the value to be transferred",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 18
    }
  },
  {
    "content": "\"assets_upsert_semantic\"\nis the name of the UI input (widget variable) from which to take the value to be transferred\nYou can also use a literal primitive value for any of the options, if you just want to hard-code it rather than transfer anything across from the UI-based configuration or your own package's outputs.\nAssetImport\n¶\nThe\nAssetImport\npublish config accepts the following configurable inputs. You can use any combination of these, and any you leave out will use sensible defaults.\nGlossaries, categories, terms\nVariable Name\nData Type\nDescription\nglossariesFile\nFrameworkRenderer.NamePathPair\nFile containing glossaries, categories and terms to import; typically passed through using\ntransferFile()\n.\nglossariesUpsertSemantic\nImportSemantic\nWhether to allow the creation of new glossaries, categories and terms from the input CSV, or ensure these are only updated if they already exist in Atlan.\nglossariesConfig\nConfigType\nOptions to optimize how glossaries, categories and terms are imported.\nglossariesAttrToOverwrite\nListing<String>\nList of attributes you want to clear (remove) from glossaries, categories and terms if their value is blank in the provided file.",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 19
    }
  },
  {
    "content": "glossariesAttrToOverwrite\nListing<String>\nList of attributes you want to clear (remove) from glossaries, categories and terms if their value is blank in the provided file.\nglossariesFailOnErrors\nBoolean\nWhether an invalid value in a field should cause the import to fail (true) or log a warning, skip that value, and proceed (false).\nglossariesFieldSeparator\nString\nSingle character used to separate fields in the input file (for example,\n,\nor\n;\n).\nglossariesCmHandling\nCustomMetadataSemantic\nHow custom metadata in the input should be handled: ignore it, merge it with any existing asset custom metadata, or overwrite the existing asset custom metadata.\nglossariesTagHandling\nAtlanTagSemantic\nHow Atlan tags on assets in the input should be handled: ignore them, append them to any existing asset tags, replace the existing asset tags, or remove them from the assets.\nglossariesLinkIdempotency\nLinkIdempotencyInvariant\nHow linked resources on glossaries in the input should be updated: based on their unique URL or their unique name.\nglossariesBatchSize\nInt\nMaximum number of rows to process at a time (per API request).\nData domains and products\nVariable Name\nData Type\nDescription",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 20
    }
  },
  {
    "content": "glossariesBatchSize\nInt\nMaximum number of rows to process at a time (per API request).\nData domains and products\nVariable Name\nData Type\nDescription\ndataProductsFile\nFrameworkRenderer.NamePathPair\nFile containing data domains and data products to import; typically passed through using [transferFile()].\ndataProductsUpsertSemantic\nImportSemantic\nWhether to allow the creation of new domains and data products from the input CSV, or ensure these are only updated if they already exist in Atlan.\ndataProductsConfig\nConfigType\nOptions to optimize how domains and data products are imported.\ndataProductsAttrToOverwrite\nListing<String>\nSelect attributes you want to clear (remove) from domains and data products if their value is blank in the provided file.\ndataProductsFailOnErrors\nBoolean\nWhether an invalid value in a field should cause the import to fail (true) or log a warning, skip that value, and proceed (false).\ndataProductsFieldSeparator\nString\nSingle character used to separate fields in the input file (for example,\n,\nor\n;\n).\ndataProductsCmHandling\nCustomMetadataSemantic",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 21
    }
  },
  {
    "content": "dataProductsFieldSeparator\nString\nSingle character used to separate fields in the input file (for example,\n,\nor\n;\n).\ndataProductsCmHandling\nCustomMetadataSemantic\nHow custom metadata in the input should be handled: ignore it, merge it with any existing asset custom metadata, or overwrite the existing asset custom metadata.\ndataProductsTagHandling\nAtlanTagSemantic\nHow Atlan tags on assets in the input should be handled: ignore them, append them to any existing asset tags, replace the existing asset tags, or remove them from the assets.\ndataProductsLinkIdempotency\nLinkIdempotencyInvariant\nHow linked resources on assets in the input should be updated: based on their unique URL or their unique name.\ndataProductsBatchSize\nInt\nMaximum number of rows to process at a time (per API request).\nTag (structural) definitions\nVariable Name\nData Type\nDescription\ntagsFile\nFrameworkRenderer.NamePathPair\nFile containing tag definitions to manage; typically passed through using\ntransferFile()\n.\ntagsConfig\nConfigType\nOptions to optimize how tag definitions are imported.\ntagsFailOnErrors\nBoolean",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 22
    }
  },
  {
    "content": "File containing tag definitions to manage; typically passed through using\ntransferFile()\n.\ntagsConfig\nConfigType\nOptions to optimize how tag definitions are imported.\ntagsFailOnErrors\nBoolean\nWhether an invalid value in a field should cause the import to fail (true) or log a warning, skip that value, and proceed (false).\ntagsFieldSeparator\nString\nSingle character used to separate fields in the input file (for example,\n,\nor\n;\n).\ntagsBatchSize\nInt\nMaximum number of rows to process at a time (per API request).\nAll other assets\nVariable Name\nData Type\nDescription\nassetsFile\nFrameworkRenderer.NamePathPair\nFile containing assets to import, typically passed through using\ntransferFile()\n.\nassetsUpsertSemantic\nImportSemantic\nWhether to allow the creation of new assets from the input CSV (full or partial assets), or ensure assets are only updated if they already exist in Atlan.\nassetsDeltaSemantic\nDeltaSemantic\nWhether to treat the input file as an initial load, full replacement (deleting any existing assets not in the file) or only incremental (no deletion of existing assets).\nassetsDeltaRemovalType\nRemovalType\nHow to delete any assets not found in the latest file.",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 23
    }
  },
  {
    "content": "assetsDeltaRemovalType\nRemovalType\nHow to delete any assets not found in the latest file.\nassetsDeltaReloadCalculation\nReloadCalculation\nWhich assets to reload from the latest input CSV file. Changed assets only will calculate which assets have changed between the files and only attempt to reload those changes.\nassetsPreviousFileDirect\nFrameworkRenderer.NamePathPair\nPath to a direct file (locally) to use for delta processing. Note: providing a value for this will ignore any other previously-processed file in the object store, so please be sure this is the option you want to use (should be rare).\nassetsPreviousFilePrefix\nString\nObject store prefix in which previous files exist for delta processing.\nassetsConfig\nConfigType\nOptions to optimize how assets are imported.\nassetsAttrToOverwrite\nListing<String>\nList of attributes you want to clear (remove) from assets if their value is blank in the provided file.\nassetsFailOnErrors\nBoolean\nWhether an invalid value in a field should cause the import to fail (true) or log a warning, skip that value, and proceed (false).\nassetsCaseSensitive\nBoolean",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 24
    }
  },
  {
    "content": "assetsFailOnErrors\nBoolean\nWhether an invalid value in a field should cause the import to fail (true) or log a warning, skip that value, and proceed (false).\nassetsCaseSensitive\nBoolean\nWhether to use case-sensitive matching when running in update-only mode (true) or try case-insensitive matching (false).\nassetsTableViewAgnostic\nBoolean\nWhether to treat tables, views and materialized views as interchangeable (true) or strictly adhere to specified types in the input (false).\nassetsFieldSeparator\nString\nSingle character used to separate fields in the input file (for example,\n,\nor\n;\n).\nassetsCmHandling\nCustomMetadataSemantic\nHow custom metadata in the input should be handled: ignore it, merge it with any existing asset custom metadata, or overwrite the existing asset custom metadata.\nassetsTagHandling\nAtlanTagSemantic\nHow Atlan tags on assets in the input should be handled: ignore them, append them to any existing asset tags, replace the existing asset tags, or remove them from the assets.\nassetsLinkIdempotency\nLinkIdempotencyInvariant\nHow linked resources on assets in the input should be updated: based on their unique URL or their unique name.\nassetsBatchSize\nInt",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 25
    }
  },
  {
    "content": "assetsLinkIdempotency\nLinkIdempotencyInvariant\nHow linked resources on assets in the input should be updated: based on their unique URL or their unique name.\nassetsBatchSize\nInt\nMaximum number of rows to process at a time (per API request).\ntrackBatches\nBoolean\nWhether to track details about every asset across batches (true) or only counts (false).\nRelationalAssetsBuilder\n¶\nThe\nRelationalAssetsBuilder\npublish config accepts the following configurable inputs. You can use any combination of these, and any you leave out will use sensible defaults.\nRelational assets\nVariable Name\nData Type\nDescription\nassetsFile\nFrameworkRenderer.NamePathPair\nFile containing assets to import, typically passed through using\ntransferFile()\n.\nassetsUpsertSemantic\nImportSemantic\nWhether to allow the creation of new (full or partial) assets from the input CSV, or ensure assets are only updated if they already exist in Atlan.\ndeltaSemantic\nDeltaSemantic\nWhether to treat the input file as an initial load, full replacement (deleting any existing assets not in the file) or only incremental (no deletion of existing assets).\ndeltaRemovalType\nRemovalType\nHow to delete any assets not found in the latest file.",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 26
    }
  },
  {
    "content": "deltaRemovalType\nRemovalType\nHow to delete any assets not found in the latest file.\ndeltaReloadCalculation\nReloadCalculation\nWhich assets to reload from the latest input CSV file. Changed assets only will calculate which assets have changed between the files and only attempt to reload those changes.\npreviousFileDirect\nFrameworkRenderer.NamePathPair\nPath to a direct file (locally) to use for delta processing. Note: providing a value for this will ignore any other previously-processed file in the object store, so please be sure this is the option you want to use (should be rare).\nassetsAttrToOverwrite\nListing<String>\nList of attributes you want to clear (remove) from assets if their value is blank in the provided file.\nassetsFailOnErrors\nBoolean\nWhether an invalid value in a field should cause the import to fail (true) or log a warning, skip that value, and proceed (false).\nassetsFieldSeparator\nString\nSingle character used to separate fields in the input file (for example,\n,\nor\n;\n).\nassetsBatchSize\nInt\nMaximum number of rows to process at a time (per API request).\nassetsCmHandling\nCustomMetadataSemantic",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 27
    }
  },
  {
    "content": ",\nor\n;\n).\nassetsBatchSize\nInt\nMaximum number of rows to process at a time (per API request).\nassetsCmHandling\nCustomMetadataSemantic\nHow custom metadata in the input should be handled: ignore it, merge it with any existing asset custom metadata, or overwrite the existing asset custom metadata.\nassetsTagHandling\nAtlanTagSemantic\nHow Atlan tags on assets in the input should be handled: ignore them, append them to any existing asset tags, replace the existing asset tags, or remove them from the assets.\ntrackBatches\nBoolean\nWhether to track details about every asset across batches (true) or only counts (false).\nLineageBuilder\n¶\nThe\nLineageBuilder\npublish config accepts the following configurable inputs. You can use any combination of these, and any you leave out will use sensible defaults.\nLineage assets\nVariable Name\nData Type\nDescription\nlineageFile\nFrameworkRenderer.NamePathPair\nFile containing lineage to import, typically passed through using\ntransferFile()\n.\nlineageUpsertSemantic\nImportSemantic\nWhether to allow the creation of new (full or partial) assets from the input CSV, or ensure assets are only updated if they already exist in Atlan.\nlineageFailOnErrors\nBoolean",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 28
    }
  },
  {
    "content": "ImportSemantic\nWhether to allow the creation of new (full or partial) assets from the input CSV, or ensure assets are only updated if they already exist in Atlan.\nlineageFailOnErrors\nBoolean\nWhether an invalid value in a field should cause the import to fail (true) or log a warning, skip that value, and proceed (false).\nfieldSeparator\nString\nSingle character used to separate fields in the input file (for example,\n,\nor\n;\n).\nbatchSize\nInt\nMaximum number of rows to process at a time (per API request).\ncmHandling\nCustomMetadataSemantic\nHow custom metadata in the input should be handled: ignore it, merge it with any existing asset custom metadata, or overwrite the existing asset custom metadata.\ntagHandling\nAtlanTagSemantic\nHow Atlan tags on assets in the input should be handled: ignore them, append them to any existing asset tags, replace the existing asset tags, or remove them from the assets.\n2025-03-12\n2025-03-12\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 29
    }
  },
  {
    "content": "Thanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
    "metadata": {
      "source_url": "toolkits_custom-package_define.html",
      "source_type": "sdk",
      "file": "toolkits_custom-package_define.json",
      "chunk_id": 30
    }
  }
]