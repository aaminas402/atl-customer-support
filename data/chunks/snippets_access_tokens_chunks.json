[
  {
    "content": "Managing API tokens - Developer\nSkip to content\nAPI tokens\n¶\nAPI tokens\nare a way to provide programmatic access to Atlan without relying on a user's own credentials or permissions.\nAPI tokens are\nnot\npersonal access tokens\nAPI tokens are commonly thought to be synonymous with personal access tokens (PAT). In other words, many developers assume that an API token will have the same privileges and permissions as the user who created them.\nThis is not the case.\nAPI tokens are their own unique actor and carry entirely their own set of permissions, completely independent from the user who created or otherwise maintains them.\nCreate an API token\n¶\n0.0.14\n1.4.0\n4.0.0\nTo create a new API token:\nJava\nPython\nKotlin\nGo\nRaw REST API\nCreate an API token\n1\n2\nApiToken\ntoken\n=\nApiToken\n.\ncreate\n(\nclient\n,\n\"token-name\"\n);\n// (1)\nString\ntokenValue\n=\ntoken\n.\ngetAttributes\n().\ngetAccessToken\n();\n// (2)\nYou can use the\nApiToken.create()\nmethod to create a new API token. Because this operation will create the token in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe actual value of the API token will\nonly\nbe available in this immediate response of the creation, under",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 0
    }
  },
  {
    "content": "provide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe actual value of the API token will\nonly\nbe available in this immediate response of the creation, under\n.getAttributes().getAccessToken()\n.\nCannot be accessed again later\nYou will not be able to retrieve the actual value of the API token again at a later point, for example when retrieving or updating the API token.\nCreate an API token\n1\n2\n3\n4\n5\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nclient\n=\nAtlanClient\n()\ntoken\n=\nclient\n.\ntoken\n.\ncreate\n(\n\"token-name\"\n)\n# (1)\ntoken_value\n=\ntoken\n.\nattributes\n.\naccess_token\n# (2)\nYou can use the\ntoken.create()\nmethod to create a new API token.\nThe actual value of the API token will\nonly\nbe available in this immediate response of the creation, under\n.attributes.access_token\n.\nCannot be accessed again later\nYou will not be able to retrieve the actual value of the API token again at a later point, for example when retrieving or updating the API token.\nCreate an API token\n1\n2\nval\ntoken\n=\nApiToken\n.\ncreate\n(\nclient\n,\n\"token-name\"\n)\n// (1)\nval\ntokenValue\n=\ntoken\n.\nattributes\n.\naccessToken\n// (2)\nYou can use the\nApiToken.create()",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 1
    }
  },
  {
    "content": "Create an API token\n1\n2\nval\ntoken\n=\nApiToken\n.\ncreate\n(\nclient\n,\n\"token-name\"\n)\n// (1)\nval\ntokenValue\n=\ntoken\n.\nattributes\n.\naccessToken\n// (2)\nYou can use the\nApiToken.create()\nmethod to create a new API token. Because this operation will create the token in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe actual value of the API token will\nonly\nbe available in this immediate response of the creation, under\n.attributes.accessToken\n.\nCannot be accessed again later\nYou will not be able to retrieve the actual value of the API token again at a later point, for example when retrieving or updating the API token.\nCreate an API token\n1\n2\n3\n4\n5\n6\ndisplayName\n:=\n\"token-name\"\ntoken\n,\natlanErr\n:=\nctx\n.\nTokenClient\n.\nCreate\n(\n&\ndisplayName\n,\nnil\n,\nnil\n,\nnil\n)\n// (1)\nif\natlanErr\n!=\nnil\n{\nlogger\n.\nLog\n.\nErrorf\n(\n\"Error : %v\"\n,\natlanErr\n)\n}\ntokenValue\n:=\n*\ntoken\n.\nAttributes\n.\nAccessToken\n// (2)\nYou can use the\nTokenClient.Create()\nmethod to create a new API token.\nThe actual value of the API token will\nonly\nbe available in this immediate response of the creation, under\n.Attributes.AccessToken\n.\nCannot be accessed again later",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 2
    }
  },
  {
    "content": "method to create a new API token.\nThe actual value of the API token will\nonly\nbe available in this immediate response of the creation, under\n.Attributes.AccessToken\n.\nCannot be accessed again later\nYou will not be able to retrieve the actual value of the API token again at a later point, for example when retrieving or updating the API token.\nPOST /api/service/apikeys\n1\n2\n3\n4\n5\n6\n7\n{\n\"displayName\"\n:\n\"token-name\"\n,\n// (1)\n\"description\"\n:\n\"\"\n,\n// (2)\n\"personas\"\n:\n[],\n// (3)\n\"personaQualifiedNames\"\n:\n[],\n// (4)\n\"validitySeconds\"\n:\n409968000\n// (5)\n}\nYou must provide a name for the token when creating it.\nYou can optionally provide a description, but even if you do not want to provide a description must send an empty string for it in the request.\nYou must always send an empty\npersonas\narray (this is now unused, but still required).\nYou can optionally list personas to link the API token with, but even if you do not send any must send an empty list. If you are linking the API token to one or more personas, use their\nqualified_name\nin the list.\nMust be complete set you want linked to the API token\nAny personas you leave out of the set will be\nremoved",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 3
    }
  },
  {
    "content": "qualified_name\nin the list.\nMust be complete set you want linked to the API token\nAny personas you leave out of the set will be\nremoved\nfrom the API token, if they are already associated with it. (Further, if you send an empty set or no value at all for\npersonas\nin the update, then ALL linked personas will be removed from the token.)\nYou also need to specify how long the API token should last before automatically expiring. The value of\n409968000\nwill be interpreted as never expiring.\nRetrieve an API token\n¶\n0.0.14\n1.4.0\n4.0.0\nYou can retrieve an API token either by its name or its client ID (the name used when it is associated with some other object).\nJava\nPython\nKotlin\nGo\nRaw REST API\nRetrieve an API token by name\n1\nApiToken\ntoken\n=\nApiToken\n.\nretrieveByName\n(\nclient\n,\n\"token-name\"\n);\n// (1)\nThe\nretrieveByName()\nmethod handles fetching the API token based on its name. Because this operation will retrieve information from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nRetrieve an API token by ID\n1\nApiToken\ntoken\n=\nclient\n.\napiTokens\n.\ngetById\n(\n\"apikey-ac69de56-6529-4c8f-b53c-791cb5346308\"\n);\n// (1)\nThe\ngetById()\nmethod on the\napiTokens",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 4
    }
  },
  {
    "content": "Retrieve an API token by ID\n1\nApiToken\ntoken\n=\nclient\n.\napiTokens\n.\ngetById\n(\n\"apikey-ac69de56-6529-4c8f-b53c-791cb5346308\"\n);\n// (1)\nThe\ngetById()\nmethod on the\napiTokens\nmember of any client handles fetching the API token based on its client ID. This is the same as the username that will be captured when an API token is assigned to an asset without the\nservice-account-\nprefix.\nRetrieve an API token by name\n1\n2\n3\n4\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nclient\n=\nAtlanClient\n()\ntoken\n=\nclient\n.\ntoken\n.\nget_by_name\n(\n\"token-name\"\n)\n# (1)\nThe\ntoken.get_by_name()\nmethod handles fetching the API token based on its name.\nRetrieve an API token by ID\n1\n2\n3\n4\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nclient\n=\nAtlanClient\n()\ntoken\n=\nclient\n.\ntoken\n.\nget_by_id\n(\n\"apikey-ac69de56-6529-4c8f-b53c-791cb5346308\"\n)\n# (1)\nThe\ntoken.get_by_id()\nmethod handles fetching the API token based on its client ID. This is the same as the username that will be captured when an API token is assigned to an asset without the\nservice-account-\nprefix.\nRetrieve an API token by name\n1\nval\ntoken\n=\nApiToken\n.\nretrieveByName\n(\nclient\n,\n\"token-name\"\n)\n// (1)\nThe\nretrieveByName()",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 5
    }
  },
  {
    "content": "service-account-\nprefix.\nRetrieve an API token by name\n1\nval\ntoken\n=\nApiToken\n.\nretrieveByName\n(\nclient\n,\n\"token-name\"\n)\n// (1)\nThe\nretrieveByName()\nmethod handles fetching the API token based on its name. Because this operation will retrieve information from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nRetrieve an API token by ID\n1\nval\ntoken\n=\nclient\n.\napiTokens\n.\ngetById\n(\n\"apikey-ac69de56-6529-4c8f-b53c-791cb5346308\"\n)\n// (1)\nThe\ngetById()\nmethod on the\napiTokens\nmember of any client handles fetching the API token based on its client ID. This is the same as the username that will be captured when an API token is assigned to an asset without the\nservice-account-\nprefix.\nRetrieve an API token by name\n1\ntoken\n,\natlanErr\n:=\nctx\n.\nTokenClient\n.\nGetByName\n(\n\"token-name\"\n)\n// (1)\nThe\nTokenClient.GetByName()\nmethod handles fetching the API token based on its name.\nRetrieve an API token by ID\n1\ntoken\n,\natlanErr\n:=\nctx\n.\nTokenClient\n.\nGetByID\n(\n\"apikey-ac69de56-6529-4c8f-b53c-791cb5346308\"\n)\n// (1)\nThe\nTokenClient.GetByID()",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 6
    }
  },
  {
    "content": "Retrieve an API token by ID\n1\ntoken\n,\natlanErr\n:=\nctx\n.\nTokenClient\n.\nGetByID\n(\n\"apikey-ac69de56-6529-4c8f-b53c-791cb5346308\"\n)\n// (1)\nThe\nTokenClient.GetByID()\nmethod handles fetching the API token based on its client ID. This is the same as the username that will be captured when an API token is assigned to an asset without the\nservice-account-\nprefix.\nGET /api/service/apikeys?limit=2&offset=0&sort=-createdAt&filter={\"displayName\":\"token-name\"}\n1\n// (1)\nThe search criteria for retrieving an API token by its name is embedded as query parmeters in the request URL.\nGET /api/service/apikeys?limit=2&offset=0&sort=-createdAt&filter={\"clientId\":\"apikey-ac69de56-6529-4c8f-b53c-791cb5346308\"}\n1\n// (1)\nThe search criteria for retrieving an API token by its name is embedded as query parmeters in the request URL.\nUpdate an API token\n¶\n0.0.14\n1.4.0\n4.0.0\nThere is limited information to update on an API token:\nJava\nPython\nKotlin\nGo\nRaw REST API\nUpdate an API token\n1\n2\n3\n4\n5\n6\n7\nApiToken\ntoken\n=\nApiToken\n.\nretrieveByName\n(\nclient\n,\n\"token-name\"\n);\n// (1)\nApiToken\nrevised\n=\ntoken\n.\ntoBuilder\n()\n// (2)\n.\nattributes\n(\ntoken\n.\ngetAttributes\n().\ntoBuilder\n()\n.\ndescription\n(",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 7
    }
  },
  {
    "content": "5\n6\n7\nApiToken\ntoken\n=\nApiToken\n.\nretrieveByName\n(\nclient\n,\n\"token-name\"\n);\n// (1)\nApiToken\nrevised\n=\ntoken\n.\ntoBuilder\n()\n// (2)\n.\nattributes\n(\ntoken\n.\ngetAttributes\n().\ntoBuilder\n()\n.\ndescription\n(\n\"Now with a description.\"\n)\n// (3)\n.\nbuild\n())\n.\nbuild\n();\nApiToken\nupdated\n=\nrevised\n.\nupdate\n(\nclient\n);\n// (4)\nYou are best first retrieving the API token you want to update. Because this operation will retrieve information from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nYou can then use the builder pattern to update information within that token, such as its description.\nNote that some information, like description, is embedded within the attributes of the token.\nYou can then send the revised token information to Atlan to be updated. Because this operation will persist the token in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nDelete an API token\n1\n2\n3\n4\n5\n6\n7\n8\n9\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nclient\n=\nAtlanClient\n()\ntoken\n=\nclient\n.\ntoken\n.\nget_by_name\n(\n\"token-name\"\n)\n# (1)\nclient\n.\ntoken\n.\nupdate\n(\n# (2)\ntoken\n.\nguid\n,\ntoken\n.\ndisplay_name\n,\ndescription\n=\n\"Now with a description.\"\n,\n)",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 8
    }
  },
  {
    "content": "client\n=\nAtlanClient\n()\ntoken\n=\nclient\n.\ntoken\n.\nget_by_name\n(\n\"token-name\"\n)\n# (1)\nclient\n.\ntoken\n.\nupdate\n(\n# (2)\ntoken\n.\nguid\n,\ntoken\n.\ndisplay_name\n,\ndescription\n=\n\"Now with a description.\"\n,\n)\nYou are best first retrieving the API token you want to update.\nYou can then send the revised token information to Atlan to be updated using the\ntoken.update()\nmethod, and passing the updated information (like the new description).\nUpdate an API token\n1\n2\n3\n4\n5\n6\n7\nval\ntoken\n=\nApiToken\n.\nretrieveByName\n(\nclient\n,\n\"token-name\"\n)\n// (1)\nval\nrevised\n=\ntoken\n.\ntoBuilder\n()\n// (2)\n.\nattributes\n(\ntoken\n.\nattributes\n.\ntoBuilder\n()\n.\ndescription\n(\n\"Now with a description.\"\n)\n// (3)\n.\nbuild\n())\n.\nbuild\n()\nval\nupdated\n=\nrevised\n.\nupdate\n(\nclient\n)\n// (4)\nYou are best first retrieving the API token you want to update. Because this operation will retrieve information from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nYou can then use the builder pattern to update information within that token, such as its description.\nNote that some information, like description, is embedded within the attributes of the token.",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 9
    }
  },
  {
    "content": "You can then use the builder pattern to update information within that token, such as its description.\nNote that some information, like description, is embedded within the attributes of the token.\nYou can then send the revised token information to Atlan to be updated. Because this operation will persist the token in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nDelete an API token\n1\n2\n3\n4\ntoken\n,\n_\n:=\nctx\n.\nTokenClient\n.\nGetByName\n(\n\"token-name\"\n)\n// (1)\ndisplayName\n:=\n\"Updated name\"\ndescription\n:=\n\"Now with a description.\"\nctx\n.\nTokenClient\n.\nUpdate\n(\ntoken\n.\nGUID\n,\n&\ndisplayName\n,\n&\ndescription\n,\nnil\n)\n// (2)\nYou are best first retrieving the API token you want to update.\nYou can then send the revised token information to Atlan to be updated using the\nTokenClient.Update\nmethod, and passing the updated information (like the new description and display name).\nPOST /api/service/apikeys/98fb61da-eb8f-455e-b5ea-c022ee390044\n1\n2\n3\n4\n5\n6\n{\n\"displayName\"\n:\n\"token-name\"\n,\n// (1)\n\"description\"\n:\n\"Now with a revised description.\"\n,\n// (2)\n\"personas\"\n:\n[],\n// (3)\n\"personaQualifiedNames\"\n:\n[]\n// (4)\n}",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 10
    }
  },
  {
    "content": "1\n2\n3\n4\n5\n6\n{\n\"displayName\"\n:\n\"token-name\"\n,\n// (1)\n\"description\"\n:\n\"Now with a revised description.\"\n,\n// (2)\n\"personas\"\n:\n[],\n// (3)\n\"personaQualifiedNames\"\n:\n[]\n// (4)\n}\nYou must provide the name for the token when updating it, in addition to its ID (GUID) in the request URL itself.\nYou can provide updates to its description, for example.\nYou must always send an empty\npersonas\narray (this is now unused, but still required).\nYou must also list personas to link the API token with, even if you do not send any you must send an empty list. If you do specify personas to link to the API token, use the\nqualified_name\nof the persona(s).\nMust be complete set you want linked to the API token\nAny personas you leave out of the set will be\nremoved\nfrom the API token, if they are already associated with it. (Further, if you send an empty set or no value at all for\npersonas\nin the update, then ALL linked personas will be removed from the token.)\nDelete an API token\n¶\n0.0.14\n1.4.0\n4.0.0\nYou can delete an API token by its GUID:\nJava\nPython\nKotlin\nGo\nRaw REST API\nDelete an API token\n1\nApiToken\n.\ndelete\n(\nclient\n,\n\"98fb61da-eb8f-455e-b5ea-c022ee390044\"\n);\n// (1)",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 11
    }
  },
  {
    "content": "¶\n0.0.14\n1.4.0\n4.0.0\nYou can delete an API token by its GUID:\nJava\nPython\nKotlin\nGo\nRaw REST API\nDelete an API token\n1\nApiToken\n.\ndelete\n(\nclient\n,\n\"98fb61da-eb8f-455e-b5ea-c022ee390044\"\n);\n// (1)\nNote that the GUID of an API token is not the same as its client ID. From an API token object, the\ngetId()\nmethod will give you its GUID. Because this operation will remove the token from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nIrreversible\nOnce deleted, the API token will be permanently removed and no longer usable.\nDelete an API token\n1\n2\n3\n4\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nclient\n=\nAtlanClient\n()\ntoken\n=\nclient\n.\ntoken\n.\npurge\n(\n\"98fb61da-eb8f-455e-b5ea-c022ee390044\"\n)\n# (1)\nNote that the GUID of an API token is not the same as its client ID. From an API token object, the\nguid\nproperty will give you its GUID.\nIrreversible\nOnce deleted, the API token will be permanently removed and no longer usable.\nDelete an API token\n1\nApiToken\n.\ndelete\n(\nclient\n,\n\"98fb61da-eb8f-455e-b5ea-c022ee390044\"\n)\n// (1)\nNote that the GUID of an API token is not the same as its client ID. From an API token object, the\ngetId()",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 12
    }
  },
  {
    "content": "1\nApiToken\n.\ndelete\n(\nclient\n,\n\"98fb61da-eb8f-455e-b5ea-c022ee390044\"\n)\n// (1)\nNote that the GUID of an API token is not the same as its client ID. From an API token object, the\ngetId()\nmethod will give you its GUID. Because this operation will remove the token from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nIrreversible\nOnce deleted, the API token will be permanently removed and no longer usable.\nDelete an API token\n1\nctx\n.\nTokenClient\n.\nPurge\n(\n\"a853f1d5-f1f4-4cdb-b86d-c61df3ecade6\"\n)\n// (1)\nNote that the GUID of an API token is not the same as its client ID. From an API token object, the\nguid\nproperty will give you its GUID.\nIrreversible\nOnce deleted, the API token will be permanently removed and no longer usable.\nDELETE /api/service/apikeys/98fb61da-eb8f-455e-b5ea-c022ee390044\n1\n// (1)\nThe criteria for deleting an API token is entirely contained in the request URL. Note that the GUID of an API token is not the same as its client ID. From an API token response, the\nid\nproperty will give you its GUID.\nIrreversible\nOnce deleted, the API token will be permanently removed and no longer usable.\nGive permissions to API token\n¶",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 13
    }
  },
  {
    "content": "id\nproperty will give you its GUID.\nIrreversible\nOnce deleted, the API token will be permanently removed and no longer usable.\nGive permissions to API token\n¶\nAs called out at the top of this page, API tokens are unique actors with their own privileges and permissions. For an API token to be able to interact with certain objects, they must be granted such permissions directly.\nLink an API token to a persona\n¶\n0.0.14\n1.4.0\n4.0.0\nYou can link an API token to a persona to give the API token all of the permissions granted by the policies within that persona.\nJava\nPython\nKotlin\nGo\nRaw REST API\nLink an API token to persona(s)\n1\n2\n3\n4\n5\nclient\n.\napiTokens\n.\nupdate\n(\n// (1)\n\"98fb61da-eb8f-455e-b5ea-c022ee390044\"\n,\n// (2)\n\"token-name\"\n,\nnull\n,\nSet\n.\nof\n(\n\"default/aQi5KHtGwZYvxGnTSAYO8J\"\n));\n// (3)\nUse the\nupdate()\nmethod on the\napiTokens\nmember of any client to link an API token with personas.\nYou will need to provide both the GUID and the display name for the API token.\nYou must also provide the complete set of personas that should be linked to the API token, using their\nqualifiedName\ns.\nMust be complete set you want linked to the API token\nAny personas you leave out of the set will be",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 14
    }
  },
  {
    "content": "qualifiedName\ns.\nMust be complete set you want linked to the API token\nAny personas you leave out of the set will be\nremoved\nfrom the API token, if they are already associated with it. (Further, if you send an empty set or no value at all for\npersonas\nin the update, then ALL linked personas will be removed from the token.)\nLink an API token to persona(s)\n1\n2\n3\n4\n5\n6\n7\n8\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nclient\n=\nAtlanClient\n()\nclient\n.\ntoken\n.\nupdate\n(\n# (1)\nguid\n=\n\"98fb61da-eb8f-455e-b5ea-c022ee390044\"\n,\n# (2)\ndisplay_name\n=\n\"token-name\"\n,\npersonas\n=\n{\n\"default/aQi5KHtGwZYvxGnTSAYO8J\"\n},\n# (3)\n)\nUse\ntoken.update()\nto link an API token with personas.\nYou will need to provide both the GUID and the display name for the API token.\nYou must also provide the complete set of personas that should be linked to the API token, using their\nqualified_name\ns.\nMust be complete set you want linked to the API token\nAny personas you leave out of the set will be\nremoved\nfrom the API token, if they are already associated with it. (Further, if you send an empty set or no value at all for\npersonas\nin the update, then ALL linked personas will be removed from the token.)",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 15
    }
  },
  {
    "content": "from the API token, if they are already associated with it. (Further, if you send an empty set or no value at all for\npersonas\nin the update, then ALL linked personas will be removed from the token.)\nLink an API token to persona(s)\n1\n2\n3\n4\n5\nclient\n.\napiTokens\n.\nupdate\n(\n// (1)\n\"98fb61da-eb8f-455e-b5ea-c022ee390044\"\n,\n// (2)\n\"token-name\"\n,\nnull\n,\nsetOf\n(\n\"default/aQi5KHtGwZYvxGnTSAYO8J\"\n))\n// (3)\nUse the\nupdate()\nmethod on the\napiTokens\nmember of any client to link an API token with personas.\nYou will need to provide both the GUID and the display name for the API token.\nYou must also provide the complete set of personas that should be linked to the API token, using their\nqualifiedName\ns.\nMust be complete set you want linked to the API token\nAny personas you leave out of the set will be\nremoved\nfrom the API token, if they are already associated with it. (Further, if you send an empty set or no value at all for\npersonas\nin the update, then ALL linked personas will be removed from the token.)\nLink an API token to persona(s)\n1\n2\n3\n4\n5\n6\n7\n8\ndisplayName\n:=\n\"token-name\"\ntokenGUID\n:=\n\"98fb61da-eb8f-455e-b5ea-c022ee390044\"\nctx\n.\nTokenClient\n.\nUpdate\n(\n// (1)\n&\ntokenGUID\n,\n// (2)\n&",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 16
    }
  },
  {
    "content": "Link an API token to persona(s)\n1\n2\n3\n4\n5\n6\n7\n8\ndisplayName\n:=\n\"token-name\"\ntokenGUID\n:=\n\"98fb61da-eb8f-455e-b5ea-c022ee390044\"\nctx\n.\nTokenClient\n.\nUpdate\n(\n// (1)\n&\ntokenGUID\n,\n// (2)\n&\ndisplayName\n,\nnil\n,\n[]\nstring\n{\n\"default/aQi5KHtGwZYvxGnTSAYO8J\"\n},\n// (3)\n)\nUse\nTokenClient.Update\nto link an API token with personas.\nYou will need to provide both the GUID and the display name for the API token.\nYou must also provide the complete set of personas that should be linked to the API token, using their\nqualifiedName\ns.\nMust be complete set you want linked to the API token\nAny personas you leave out of the set will be\nremoved\nfrom the API token, if they are already associated with it. (Further, if you send an empty set or no value at all for\npersonas\nin the update, then ALL linked personas will be removed from the token.)\nPOST /api/service/apikeys/98fb61da-eb8f-455e-b5ea-c022ee390044\n1\n2\n3\n4\n5\n6\n{\n\"displayName\"\n:\n\"token-name\"\n,\n// (1)\n\"description\"\n:\n\"\"\n,\n// (2)\n\"personas\"\n:\n[],\n// (3)\n\"personaQualifiedNames\"\n:\n[\n\"default/aQi5KHtGwZYvxGnTSAYO8J\"\n]\n// (4)\n}\nYou must provide the name for the token when updating it, in addition to its ID (GUID) in the request URL itself.",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 17
    }
  },
  {
    "content": ":\n[],\n// (3)\n\"personaQualifiedNames\"\n:\n[\n\"default/aQi5KHtGwZYvxGnTSAYO8J\"\n]\n// (4)\n}\nYou must provide the name for the token when updating it, in addition to its ID (GUID) in the request URL itself.\nYou must provide the description for the token. Even if you do not want it to have any description, you need to send an empty string.\nYou must always send an empty\npersonas\narray (this is now unused, but still required).\nYou must also provide the complete set of personas that should be linked to the API token, using their\nqualified_name\ns.\nMust be complete set you want linked to the API token\nAny personas you leave out of the set will be\nremoved\nfrom the API token, if they are already associated with it. (Further, if you send an empty set or no value at all for\npersonas\nin the update, then ALL linked personas will be removed from the token.)\nAdd an API token as a connection admin\n¶\n1.4.0\n4.0.0\nFor any actor to manage policies for a connection, that actor must be a connection admin on the connection. You must therefore add the API token as a connection admin to any connection you want it to be able to manage policies for.\n1\nMust first obtain a user's bearer token",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 18
    }
  },
  {
    "content": "1\nMust first obtain a user's bearer token\nTo carry out this operation, you must first\nobtain a user's bearer token\n. Specifically, you must obtain the bearer token for a user who is\nalready\na connection admin on the connection.\nJava\nPython\nKotlin\nRaw REST API\nAdd an API token as connection admin\n1\n2\n3\n4\n5\n6\n7\nList\n<\nConnection\n>\nconnections\n=\nConnection\n.\nfindByName\n(\nclient\n,\n\"development\"\n,\nAtlanConnectorType\n.\nBIGQUERY\n);\nConnection\nconnection\n=\nconnections\n.\nget\n(\n0\n);\n// (1)\nString\nimpersonationToken\n=\n\"eyNnCJd2T9Y8fEsbdx...\"\n;\n// (2)\nAssetMutationResponse\nresponse\n=\nconnection\n.\naddApiTokenAsAdmin\n(\nclient\n,\nimpersonationToken\n);\n// (3)\nYou will need to start by retrieving the connection you want to add the API token to as a connection admin. In this example, we use a search to retrieve the connection.\nYou must\nuse a user's bearer token\nas an impersonation token. (We would recommend capturing this in something like an environment variable rather than embedding directly in the code.)\nYou can use the\n.addApiTokenAsAdmin()\nmethod to add the API token as a connection admin. Because this operation will update the connection in Atlan, you must\nprovide it an\nAtlanClient",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 19
    }
  },
  {
    "content": "You can use the\n.addApiTokenAsAdmin()\nmethod to add the API token as a connection admin. Because this operation will update the connection in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nWill add the API token, not impersonation token, as connection admin\nNote that you are providing a user's bearer token as the\nimpersonationToken\nonly\nto give sufficient privileges to add the API token configured for the SDK as a connection admin. It is the API token configured for the SDK that you're adding as connection admin, not the user's bearer token. (The user's bearer token must\nalready\nhave connection admin permissions on this connection for the operation to succeed.)\nAdd an API token as connection admin\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nconnections\n=\nclient\n.\nasset\n.\nfind_connections_by_name\n(\n\"development\"\n,\nAtlanConnectorType\n.\nBIGQUERY\n)\nconnection\n=\nconnections\n[\n0\n]\n# (1)\nimpersonation_token\n=\n\"eyNnCJd2T9Y8fEsbdx...\"\n# (2)\nresponse\n=\nclient\n.\nuser\n.\nadd_as_admin\n(\n# (3)\nasset_guid\n=\nconnection\n.\nguid\n,\nimpersonation_token\n=\nimpersonation_token\n,\n)",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 20
    }
  },
  {
    "content": "[\n0\n]\n# (1)\nimpersonation_token\n=\n\"eyNnCJd2T9Y8fEsbdx...\"\n# (2)\nresponse\n=\nclient\n.\nuser\n.\nadd_as_admin\n(\n# (3)\nasset_guid\n=\nconnection\n.\nguid\n,\nimpersonation_token\n=\nimpersonation_token\n,\n)\nYou will need to start by retrieving the connection you want to add the API token to as a connection admin. In this example, we use a search to retrieve the connection.\nYou must\nuse a user's bearer token\nas an impersonation token. (We would recommend capturing this in something like an environment variable rather than embedding directly in the code.)\nYou can use the\nuser.add_as_admin()\nmethod to add the API token as a connection admin, providing the GUID of the connection and the impersonation token.\nWill add the API token, not impersonation token, as connection admin\nNote that you are providing a user's bearer token as the\nimpersonation_token\nonly\nto give sufficient privileges to add the API token configured for the SDK as a connection admin. It is the API token configured for the SDK that you're adding as connection admin, not the user's bearer token. (The user's bearer token must\nalready\nhave connection admin permissions on this connection for the operation to succeed.)",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 21
    }
  },
  {
    "content": "already\nhave connection admin permissions on this connection for the operation to succeed.)\nAdd an API token as connection admin\n1\n2\n3\n4\n5\n6\n7\nval\nconnections\n=\nConnection\n.\nfindByName\n(\nclient\n,\n\"development\"\n,\nAtlanConnectorType\n.\nBIGQUERY\n)\nval\nconnection\n=\nconnections\n[\n0\n]\n// (1)\nval\nimpersonationToken\n=\n\"eyNnCJd2T9Y8fEsbdx...\"\n// (2)\nval\nresponse\n=\nconnection\n.\naddApiTokenAsAdmin\n(\nclient\n,\nimpersonationToken\n)\n// (3)\nYou will need to start by retrieving the connection you want to add the API token to as a connection admin. In this example, we use a search to retrieve the connection.\nYou must\nuse a user's bearer token\nas an impersonation token. (We would recommend capturing this in something like an environment variable rather than embedding directly in the code.)\nYou can use the\n.addApiTokenAsAdmin()\nmethod to add the API token as a connection admin. Because this operation will update the connection in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nWill add the API token, not impersonation token, as connection admin\nNote that you are providing a user's bearer token as the\nimpersonationToken\nonly",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 22
    }
  },
  {
    "content": "through which to connect to the tenant.\nWill add the API token, not impersonation token, as connection admin\nNote that you are providing a user's bearer token as the\nimpersonationToken\nonly\nto give sufficient privileges to add the API token configured for the SDK as a connection admin. It is the API token configured for the SDK that you're adding as connection admin, not the user's bearer token. (The user's bearer token must\nalready\nhave connection admin permissions on this connection for the operation to succeed.)\nNot recommended\nWe do not recommend attempting this change through the Raw REST APIs as it requires a number of different API calls, carefully parsing the responses and combining elements, and has high potential for minor typos or copy/paste errors to cause mistakes.\nAdd an API token as a collection editor\n¶\n1.4.0\n4.0.0\nAs with connections, if you want an API token to be able to manage a query collection or the queries within it, you must add the API token as an editor on the collection.\nMust first obtain a user's bearer token\nTo carry out this operation, you must first\nobtain a user's bearer token\n. Specifically, you must obtain the bearer token for a user who is",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 23
    }
  },
  {
    "content": "Must first obtain a user's bearer token\nTo carry out this operation, you must first\nobtain a user's bearer token\n. Specifically, you must obtain the bearer token for a user who is\nalready\nan editor on (or owner of) the query collection.\nJava\nPython\nKotlin\nRaw REST API\nAdd an API token as collection editor\n1\n2\n3\n4\n5\n6\nList\n<\nAtlanCollection\n>\ncollections\n=\nAtlanCollection\n.\nfindByName\n(\nclient\n,\n\"My query collection\"\n);\nAtlanCollection\ncollection\n=\ncollections\n.\nget\n(\n0\n);\n// (1)\nString\nimpersonationToken\n=\n\"eyNnCJd2T9Y8fEsbdx...\"\n;\n// (2)\nAssetMutationResponse\nresponse\n=\ncollection\n.\naddApiTokenAsAdmin\n(\nclient\n,\nimpersonationToken\n);\n// (3)\nYou will need to start by retrieving the query collection you want to add the API token to as an editor. In this example, we use a search to retrieve the collection.\nYou must\nuse a user's bearer token\nas an impersonation token. (We would recommend capturing this in something like an environment variable rather than embedding directly in the code.)\nYou can use the\n.addApiTokenAsAdmin()\nmethod to add the API token as a collection editor. Because this operation will update the collection in Atlan, you must\nprovide it an\nAtlanClient",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 24
    }
  },
  {
    "content": "You can use the\n.addApiTokenAsAdmin()\nmethod to add the API token as a collection editor. Because this operation will update the collection in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nWill add the API token, not impersonation token, as collection editor\nNote that you are providing a user's bearer token as the\nimpersonationToken\nonly\nto give sufficient privileges to add the API token configured for the SDK as a collection editor. It is the API token configured for the SDK that you're adding as collection editor, not the user's bearer token. (The user's bearer token must\nalready\nhave collection editor permissions on this collection for the operation to succeed.)\nAdd an API token as collection editor\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nCollection\nfrom\npyatlan.model.fluent_search\nimport\nFluentSearch\nrequest\n=\n(\nFluentSearch\n()\n.\nwhere\n(\nFluentSearch\n.\nasset_type\n(\nCollection\n))\n.\nwhere\n(\nCollection\n.\nNAME\n.\neq\n(\n\"My query collection\"\n))\n)\n.\nto_request\n()\nresponse\n=\nclient\n.\nasset\n.\nsearch\n(\nrequest\n)\ncollection\n=\nresponse\n.\ncurrent_page\n()[\n0\n]\n# (1)",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 25
    }
  },
  {
    "content": "(\nCollection\n))\n.\nwhere\n(\nCollection\n.\nNAME\n.\neq\n(\n\"My query collection\"\n))\n)\n.\nto_request\n()\nresponse\n=\nclient\n.\nasset\n.\nsearch\n(\nrequest\n)\ncollection\n=\nresponse\n.\ncurrent_page\n()[\n0\n]\n# (1)\nimpersonation_token\n=\n\"eyNnCJd2T9Y8fEsbdx...\"\n# (2)\nresponse\n=\nclient\n.\nuser\n.\nadd_as_admin\n(\n# (3)\nasset_guid\n=\ncollection\n.\nguid\n,\nimpersonation_token\n=\nimpersonation_token\n,\n)\nYou will need to start by retrieving the query collection you want to add the API token to as a collection editor. In this example, we use a search to retrieve the collection.\nYou must\nuse a user's bearer token\nas an impersonation token. (We would recommend capturing this in something like an environment variable rather than embedding directly in the code.)\nYou can use the\nuser.add_as_admin()\nmethod to add the API token as a collection editor, providing the GUID of the collection and the impersonation token.\nWill add the API token, not impersonation token, as collection editor\nNote that you are providing a user's bearer token as the\nimpersonation_token\nonly",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 26
    }
  },
  {
    "content": "Will add the API token, not impersonation token, as collection editor\nNote that you are providing a user's bearer token as the\nimpersonation_token\nonly\nto give sufficient privileges to add the API token configured for the SDK as a collection editor. It is the API token configured for the SDK that you're adding as collection editor, not the user's bearer token. (The user's bearer token must\nalready\nhave collection editor permissions on this collection for the operation to succeed.)\nAdd an API token as collection editor\n1\n2\n3\n4\n5\n6\nval\ncollections\n=\nAtlanCollection\n.\nfindByName\n(\nclient\n,\n\"My query collection\"\n)\nval\ncollection\n=\ncollections\n[\n0\n]\n// (1)\nval\nimpersonationToken\n=\n\"eyNnCJd2T9Y8fEsbdx...\"\n// (2)\nval\nresponse\n=\ncollection\n.\naddApiTokenAsAdmin\n(\nclient\n,\nimpersonationToken\n)\n// (3)\nYou will need to start by retrieving the query collection you want to add the API token to as an editor. In this example, we use a search to retrieve the collection.\nYou must\nuse a user's bearer token\nas an impersonation token. (We would recommend capturing this in something like an environment variable rather than embedding directly in the code.)\nYou can use the\n.addApiTokenAsAdmin()",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 27
    }
  },
  {
    "content": "as an impersonation token. (We would recommend capturing this in something like an environment variable rather than embedding directly in the code.)\nYou can use the\n.addApiTokenAsAdmin()\nmethod to add the API token as a collection editor. Because this operation will update the collection in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nWill add the API token, not impersonation token, as collection editor\nNote that you are providing a user's bearer token as the\nimpersonationToken\nonly\nto give sufficient privileges to add the API token configured for the SDK as a collection editor. It is the API token configured for the SDK that you're adding as collection editor, not the user's bearer token. (The user's bearer token must\nalready\nhave collection editor permissions on this collection for the operation to succeed.)\nNot recommended\nWe do not recommend attempting this change through the Raw REST APIs as it requires a number of different API calls, carefully parsing the responses and combining elements, and has high potential for minor typos or copy/paste errors to cause mistakes.\nAdd an API token as a collection viewer\n¶\n1.4.0\n4.0.0",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 28
    }
  },
  {
    "content": "Add an API token as a collection viewer\n¶\n1.4.0\n4.0.0\nAlternatively, if you only want the API token to be able to view and run queries within a collection (but not change them), you can add the API token as a viewer on the collection.\nMust first obtain a user's bearer token\nTo carry out this operation, you must first\nobtain a user's bearer token\n. Specifically, you must obtain the bearer token for a user who is\nalready\nan editor on (or owner of) the query collection.\nJava\nPython\nKotlin\nRaw REST API\nAdd an API token as collection viewer\n1\n2\n3\n4\n5\n6\nList\n<\nAtlanCollection\n>\ncollections\n=\nAtlanCollection\n.\nfindByName\n(\nclient\n,\n\"My query collection\"\n);\nAtlanCollection\ncollection\n=\ncollections\n.\nget\n(\n0\n);\n// (1)\nString\nimpersonationToken\n=\n\"eyNnCJd2T9Y8fEsbdx...\"\n;\n// (2)\nAssetMutationResponse\nresponse\n=\ncollection\n.\naddApiTokenAsViewer\n(\nclient\n,\nimpersonationToken\n);\n// (3)\nYou will need to start by retrieving the query collection you want to add the API token to as an viewer. In this example, we use a search to retrieve the collection.\nYou must\nuse a user's bearer token",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 29
    }
  },
  {
    "content": "You must\nuse a user's bearer token\nas an impersonation token. (We would recommend capturing this in something like an environment variable rather than embedding directly in the code.)\nYou can use the\n.addApiTokenAsViewer()\nmethod to add the API token as a collection viewer. Because this operation will update the collection in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nWill add the API token, not impersonation token, as collection viewer\nNote that you are providing a user's bearer token as the\nimpersonationToken\nonly\nto give sufficient privileges to add the API token configured for the SDK as a collection viewer. It is the API token configured for the SDK that you're adding as collection viewer, not the user's bearer token. (The user's bearer token must\nalready\nhave collection editor permissions on this collection for the operation to succeed.)\nAdd an API token as collection viewer\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nCollection\nfrom\npyatlan.model.fluent_search\nimport\nFluentSearch\nrequest\n=\n(\nFluentSearch\n()\n.\nwhere\n(\nFluentSearch\n.\nasset_type\n(\nCollection\n))\n.",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 30
    }
  },
  {
    "content": "import\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nCollection\nfrom\npyatlan.model.fluent_search\nimport\nFluentSearch\nrequest\n=\n(\nFluentSearch\n()\n.\nwhere\n(\nFluentSearch\n.\nasset_type\n(\nCollection\n))\n.\nwhere\n(\nCollection\n.\nNAME\n.\neq\n(\n\"My query collection\"\n))\n)\n.\nto_request\n()\nresponse\n=\nclient\n.\nasset\n.\nsearch\n(\nrequest\n)\ncollection\n=\nresponse\n.\ncurrent_page\n()[\n0\n]\n# (1)\nimpersonation_token\n=\n\"eyNnCJd2T9Y8fEsbdx...\"\n# (2)\nresponse\n=\nclient\n.\nuser\n.\nadd_as_viewer\n(\n# (3)\nasset_guid\n=\ncollection\n.\nguid\n,\nimpersonation_token\n=\nimpersonation_token\n,\n)\nYou will need to start by retrieving the query collection you want to add the API token to as a collection viewer. In this example, we use a search to retrieve the collection.\nYou must\nuse a user's bearer token\nas an impersonation token. (We would recommend capturing this in something like an environment variable rather than embedding directly in the code.)\nYou can use the\nuser.add_as_admin()\nmethod to add the API token as a collection viewer, providing the GUID of the collection and the impersonation token.\nWill add the API token, not impersonation token, as collection viewer\nNote that you are providing a user's bearer token as the",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 31
    }
  },
  {
    "content": "Will add the API token, not impersonation token, as collection viewer\nNote that you are providing a user's bearer token as the\nimpersonation_token\nonly\nto give sufficient privileges to add the API token configured for the SDK as a collection viewer. It is the API token configured for the SDK that you're adding as collection viewer, not the user's bearer token. (The user's bearer token must\nalready\nhave collection editor permissions on this collection for the operation to succeed.)\nAdd an API token as collection viewer\n1\n2\n3\n4\n5\n6\nval\ncollections\n=\nAtlanCollection\n.\nfindByName\n(\nclient\n,\n\"My query collection\"\n)\nval\ncollection\n=\ncollections\n[\n0\n]\n// (1)\nval\nimpersonationToken\n=\n\"eyNnCJd2T9Y8fEsbdx...\"\n// (2)\nval\nresponse\n=\ncollection\n.\naddApiTokenAsViewer\n(\nclient\n,\nimpersonationToken\n)\n// (3)\nYou will need to start by retrieving the query collection you want to add the API token to as an viewer. In this example, we use a search to retrieve the collection.\nYou must\nuse a user's bearer token\nas an impersonation token. (We would recommend capturing this in something like an environment variable rather than embedding directly in the code.)\nYou can use the\n.addApiTokenAsViewer()",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 32
    }
  },
  {
    "content": "as an impersonation token. (We would recommend capturing this in something like an environment variable rather than embedding directly in the code.)\nYou can use the\n.addApiTokenAsViewer()\nmethod to add the API token as a collection viewer. Because this operation will update the collection in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nWill add the API token, not impersonation token, as collection viewer\nNote that you are providing a user's bearer token as the\nimpersonationToken\nonly\nto give sufficient privileges to add the API token configured for the SDK as a collection viewer. It is the API token configured for the SDK that you're adding as collection viewer, not the user's bearer token. (The user's bearer token must\nalready\nhave collection editor permissions on this collection for the operation to succeed.)\nNot recommended\nWe do not recommend attempting this change through the Raw REST APIs as it requires a number of different API calls, carefully parsing the responses and combining elements, and has high potential for minor typos or copy/paste errors to cause mistakes.\nObtain a user's bearer token\n¶",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 33
    }
  },
  {
    "content": "Obtain a user's bearer token\n¶\nFor a few of the operations above, there is a bit of a \"catch-22\". For example:\nAn API token cannot manage policies for a connection if it is not the connection admin.\nAn API token cannot be used to add itself as a connection admin.\n2\nSo how do you get an API token set up as a connection admin, without using an API token?\nThe answer is that you must use a user's own bearer token (temporarily) — specifically a user who already has the appropriate authority on the object. (In this example, a user who is already a connection admin on that connection.)\nTo do this, you'll need to\n3\n:\nLog in to Atlan as the user with the level of access required (e.g. the user who is a connection admin).\nOpen the\nDeveloper Tools\nview of Chrome:\nOpen the\nView\nmenu,\nthen\nDeveloper\n,\nthen\nDeveloper Tools\n.\nLeave the Developer Tools window open, but change back to your original Atlan window.\nNavigate to the\nAssets\npage where you can discover assets.\nReturn to the Developer Tools window and find any\nindexsearch\nitem along the left:\nRight-click the\nindexsearch\nitem,\nthen\nCopy\n,\nthen\nCopy as cURL\n.\nPaste what this has copied into a text editor:\n4\nCopied cURL\n1\n2\n3\n4\n5\n6\n7",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 34
    }
  },
  {
    "content": "indexsearch\nitem along the left:\nRight-click the\nindexsearch\nitem,\nthen\nCopy\n,\nthen\nCopy as cURL\n.\nPaste what this has copied into a text editor:\n4\nCopied cURL\n1\n2\n3\n4\n5\n6\n7\ncurl 'https://tenant.atlan.com/api/meta/search/indexsearch' \\\n-H 'authority: tenant.atlan.com' \\\n-H 'accept: application/json, text/plain, */*' \\\n-H 'accept-language: en-GB,en-US;q=0.9,en;q=0.8' \\\n-H 'authorization: Bearer eyNnCJd2T9Y8fEsbdxTgKQqyWFm7uNBvw55EjAIakh9Yrg3cdd1YoNMXr1LtFmreHfVrYrSRxCzUYcoJKASXovfBO5PnGZOWe8hAdxb7WqesNZS.TPFcWzwRLA2Aeb38iWBIAG3rrsTz7iyufecbPeLBLTZ2RjaweLji7PGIVz5Mj8G2bAIPM7tguCGbz...' \\\n-H 'content-type: application/json' \\\n...\nThe details you need are on the highligted line 5, that begins with\n-H 'authorization: Bearer\n. You specifically want everything\nafter\nthe word\nBearer\n, up to the final single quote (\n'\n) at the end of the line. So in this example you would copy:\neyNnCJd2T9Y8fEsbdxTgKQqyWFm7uNBvw55EjAIakh9Yrg3cdd1YoNMXr1LtFmreHfVrYrSRxCzUYcoJKASXovfBO5PnGZOWe8hAdxb7WqesNZS.TPFcWzwRLA2Aeb38iWBIAG3rrsTz7iyufecbPeLBLTZ2RjaweLji7PGIVz5Mj8G2bAIPM7tguCGbz...\nThis is the user's own bearer token.\nHas a limited lifespan",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 35
    }
  },
  {
    "content": "This is the user's own bearer token.\nHas a limited lifespan\nBe aware that the user's own bearer token will have a limited lifespan. At some point the user will be automatically logged out and will be asked to log in again, at which point this bearer token will have expired and need to be re-retrieved.\nThe non-obvious exception to this rule is where the API token was used to create a connection in the first place. If you use an API token to create a connection, the API token is\nautomatically\nset up as a connection admin for that connection as part of its creation.\n↩\nHopefully the reason is self-apparent, but for clarity, if this\nwere\npossible then API tokens could be used to bypass the security inherent in connection administration (policy management for the connection and its assets).\n↩\nThe steps shown assume you are doing this via the Chrome browser. Similar methods should exist in other browsers; if you are facing difficulty, please reach out with which browser you are using and we can help you through.\n↩",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 36
    }
  },
  {
    "content": "↩\nWhile this example bearer token may \"look\" real, it is entirely made up of random numbers and letters. Do not try to use this example bearer token, as it is guaranteed not to work.\n↩\n2023-08-31\n2025-01-31\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
    "metadata": {
      "source_url": "snippets_access_tokens.html",
      "source_type": "sdk",
      "file": "snippets_access_tokens.json",
      "chunk_id": 37
    }
  }
]