[
  {
    "content": "Restoring assets - Developer\nSkip to content\nRestoring assets\n¶\nRestoring an\nasset\nfrom an archived (soft-deleted) state back to active uses a similar pattern to the deletion operations.\nBy\nqualifiedName\n¶\n1.4.0\n4.0.0\nTo restore an asset by its\nqualifiedName\n:\nJava\nPython\nKotlin\nRaw REST API\nRestore an asset by its qualifiedName\n1\n2\nboolean\nrestored\n=\nGlossaryTerm\n.\nrestore\n(\nclient\n,\n\"gsNccqJraDZqM6WyGP3ea@FzCMyPR2LxkPFgr8eNGrq\"\n);\n// (1)\nIf an asset with the provided qualifiedName exists and is now active, the operation will return true. If no archived (soft-deleted) version of the asset could be found the operation will return false. Because this operation will restore the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nRestore an asset by its qualifiedName\n1\n2\n3\n4\n5\n6\n7\n8\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nAtlasGlossaryTerm\nclient\n=\nAtlanClient\n()\nrestored\n=\nclient\n.\nasset\n.\nrestore\n(\nasset_type\n=\nAtlasGlossaryTerm\n,\nqualified_name\n=\n\"gsNccqJraDZqM6WyGP3ea@FzCMyPR2LxkPFgr8eNGrq\"\n# (1)\n)",
    "metadata": {
      "source_url": "snippets_advanced-examples_restore.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_restore.json",
      "chunk_id": 0
    }
  },
  {
    "content": "import\nAtlasGlossaryTerm\nclient\n=\nAtlanClient\n()\nrestored\n=\nclient\n.\nasset\n.\nrestore\n(\nasset_type\n=\nAtlasGlossaryTerm\n,\nqualified_name\n=\n\"gsNccqJraDZqM6WyGP3ea@FzCMyPR2LxkPFgr8eNGrq\"\n# (1)\n)\nIf an asset with the provided qualified_name exists and is now active, the operation will return true. If no archived (soft-deleted) version of the asset could be found the operation will return false.\nRestore an asset by its qualifiedName\n1\n2\nval\nrestored\n=\nGlossaryTerm\n.\nrestore\n(\n\"gsNccqJraDZqM6WyGP3ea@FzCMyPR2LxkPFgr8eNGrq\"\n)\n// (1)\nIf an asset with the provided qualifiedName exists and is now active, the operation will return true. If no archived (soft-deleted) version of the asset could be found the operation will return false. Because this operation will restore the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk?replaceClassifications=false&replaceBusinessAttributes=false&overwriteBusinessAttributes=false\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n{\n\"entities\"\n:\n[\n// (1)\n{\n\"typeName\"\n:\n\"AtlasGlossaryTerm\"\n,\n// (2)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"Example\"\n,\n// (3)\n\"qualifiedName\"\n:\n\"gsNccqJraDZqM6WyGP3ea@FzCMyPR2LxkPFgr8eNGrq\"",
    "metadata": {
      "source_url": "snippets_advanced-examples_restore.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_restore.json",
      "chunk_id": 1
    }
  },
  {
    "content": "9\n10\n11\n12\n13\n14\n15\n16\n{\n\"entities\"\n:\n[\n// (1)\n{\n\"typeName\"\n:\n\"AtlasGlossaryTerm\"\n,\n// (2)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"Example\"\n,\n// (3)\n\"qualifiedName\"\n:\n\"gsNccqJraDZqM6WyGP3ea@FzCMyPR2LxkPFgr8eNGrq\"\n,\n// (4)\n\"anchor\"\n:\n{\n// (5)\n\"typeName\"\n:\n\"AtlasGlossary\"\n,\n// (6)\n\"guid\"\n:\n\"51a28d46-b700-4c9d-807d-397f25f2b6d6\"\n// (7)\n}\n},\n\"status\"\n:\n\"ACTIVE\"\n// (8)\n}\n]\n}\nAll assets must be wrapped in an\nentities\narray.\nYou must provide the exact type name for the asset (case-sensitive). For a glossary, this is\nAtlasGlossary\n.\nYou must provide the exact name of the existing asset (case-sensitive).\nYou must provide the exact\nqualifiedName\nof the existing asset (case-sensitive).\nMust exactly match the\nqualifiedName\nof an existing asset\nIf this does not exactly match the\nqualifiedName\nof an existing asset, the API call will instead\ncreate a new asset\nrather than restoring an existing one.\nFor glossary-contained objects (terms and categories), you must also specify the glossary in which they are contained. You do this using the\nanchor\nattribute.\nNested within the\nanchor\nattribute you must give the\ntypeName\nas exactly\nAtlasGlossary\n.\nNested within the\nanchor",
    "metadata": {
      "source_url": "snippets_advanced-examples_restore.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_restore.json",
      "chunk_id": 2
    }
  },
  {
    "content": "anchor\nattribute.\nNested within the\nanchor\nattribute you must give the\ntypeName\nas exactly\nAtlasGlossary\n.\nNested within the\nanchor\nattribute you must also give the GUID of the glossary the archived object is contained within.\nThe piece that actually triggers the restore is to change the\nstatus\nof the asset. When soft-deleted (archived) the status will be\nDELETED\n. Therefore, changing this to\nACTIVE\nwill restore the asset.\nIn bulk\n¶\n2.0.0\nTo restore a number of assets at the same time, for example after retrieving them via a search:\nJava\nPython\nKotlin\nRaw REST API\nRestore assets in bulk\n1\n2\n3\n4\n5\n6\n7\nList\n<\nAsset\n>\ntoRestore\n=\nclient\n.\nassets\n.\nselect\n(\ntrue\n)\n// (1)\n.\narchived\n()\n.\nstream\n()\n// (2)\n.\nlimit\n(\n50\n)\n// (3)\n.\ncollect\n(\nCollectors\n.\ntoList\n());\n// (4)\nAssetMutationResponse\nresponse\n=\nclient\n.\nassets\n.\nrestore\n(\ntoRestore\n);\n// (4)\nresponse\n.\ngetUpdatedAssets\n();\n// (5)\nYou would want more to your search criteria than this, but the\ntrue\nsent to the\nselect(true)\nwill ensure archived (soft-deleted) assets are returned, while the\n.archived()\nwill ensure\nonly\narchived assets are returned.\nRun the search to retrieve such results, and page through them automatically.",
    "metadata": {
      "source_url": "snippets_advanced-examples_restore.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_restore.json",
      "chunk_id": 3
    }
  },
  {
    "content": ".archived()\nwill ensure\nonly\narchived assets are returned.\nRun the search to retrieve such results, and page through them automatically.\nLimit the results to some maximum number, as you will need to limit how many you try to restore at the same time to avoid timeouts or other issues.\nYou can collect up the assets to be restored into a list from the stream.\nYou can then simply pass the results of the search across to the restore operation to re-activate all of them en masse.\nThe restore will only be run on that\nlimited\nset of results\nIn this example, the restore is only running on the first set of 50 results. To restore\nall\nassets that match the search criteria, don't forget to loop over this logic or create your own batching mechanism to process all pages!\nYou can retrieve the details of the specific assets that were restored from the bulk restore response.\nRestoring assets in bulk is not currently available in the Python SDK, but will be coming soon.\nRestore assets in bulk\n1\n2\n3\n4\n5\n6\n7\nval\ntoRestore\n=\nclient\n.\nassets\n.\nselect\n(\ntrue\n)\n// (1)\n.\narchived\n()\n.\nstream\n()\n// (2)\n.\nlimit\n(\n50\n)\n// (3)\n.\ncollect\n(\nCollectors\n.\ntoList\n())\n// (4)\nval\nresponse\n=\nclient\n.\nassets\n.\nrestore",
    "metadata": {
      "source_url": "snippets_advanced-examples_restore.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_restore.json",
      "chunk_id": 4
    }
  },
  {
    "content": "6\n7\nval\ntoRestore\n=\nclient\n.\nassets\n.\nselect\n(\ntrue\n)\n// (1)\n.\narchived\n()\n.\nstream\n()\n// (2)\n.\nlimit\n(\n50\n)\n// (3)\n.\ncollect\n(\nCollectors\n.\ntoList\n())\n// (4)\nval\nresponse\n=\nclient\n.\nassets\n.\nrestore\n(\ntoRestore\n)\n// (4)\nresponse\n.\nupdatedAssets\n// (5)\nYou would want more to your search criteria than this, but the\ntrue\nsent to the\nselect(true)\nwill ensure archived (soft-deleted) assets are returned, while the\n.archived()\nwill ensure\nonly\narchived assets are returned.\nRun the search to retrieve such results, and page through them automatically.\nLimit the results to some maximum number, as you will need to limit how many you try to restore at the same time to avoid timeouts or other issues.\nYou can collect up the assets to be restored into a list from the stream.\nYou can then simply pass the results of the search across to the restore operation to re-activate all of them en masse.\nThe restore will only be run on that\nlimited\nset of results\nIn this example, the restore is only running on the first set of 50 results. To restore\nall\nassets that match the search criteria, don't forget to loop over this logic or create your own batching mechanism to process all pages!",
    "metadata": {
      "source_url": "snippets_advanced-examples_restore.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_restore.json",
      "chunk_id": 5
    }
  },
  {
    "content": "all\nassets that match the search criteria, don't forget to loop over this logic or create your own batching mechanism to process all pages!\nYou can retrieve the details of the specific assets that were restored from the bulk restore response.\nMultiple API calls required\nYou will need to first run a search for all assets with a status of\nDELETED\n. You can then bulk-restore them by placing all of the returned assets into a single API call.\nPOST /api/meta/entity/bulk?replaceClassifications=false&replaceBusinessAttributes=false&overwriteBusinessAttributes=false\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n{\n\"entities\"\n:\n[\n// (1)\n{\n\"typeName\"\n:\n\"AtlasGlossaryTerm\"\n,\n// (2)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"Example\"\n,\n// (3)\n\"qualifiedName\"\n:\n\"gsNccqJraDZqM6WyGP3ea@FzCMyPR2LxkPFgr8eNGrq\"\n,\n// (4)\n\"anchor\"\n:\n{\n// (5)\n\"typeName\"\n:\n\"AtlasGlossary\"\n,\n// (6)\n\"guid\"\n:\n\"51a28d46-b700-4c9d-807d-397f25f2b6d6\"\n// (7)\n}\n},\n\"status\"\n:\n\"ACTIVE\"\n// (8)\n},\n{\n\"typeName\"\n:\n\"AtlasGlossaryTerm\"\n,\n\"attributes\"\n:\n{\n\"name\"\n:\n\"Another Example\"\n,\n\"qualifiedName\"\n:\n\"...\"\n,\n\"anchor\"\n:\n{\n\"typeName\"\n:\n\"AtlasGlossary\"\n,\n\"guid\"\n:\n\"51a28d46-b700-4c9d-807d-397f25f2b6d6\"\n}\n},\n\"status\"\n:",
    "metadata": {
      "source_url": "snippets_advanced-examples_restore.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_restore.json",
      "chunk_id": 6
    }
  },
  {
    "content": ",\n\"attributes\"\n:\n{\n\"name\"\n:\n\"Another Example\"\n,\n\"qualifiedName\"\n:\n\"...\"\n,\n\"anchor\"\n:\n{\n\"typeName\"\n:\n\"AtlasGlossary\"\n,\n\"guid\"\n:\n\"51a28d46-b700-4c9d-807d-397f25f2b6d6\"\n}\n},\n\"status\"\n:\n\"ACTIVE\"\n}\n{\n...\n},\n{\n...\n},\n{\n...\n}\n]\n}\nAll assets must be wrapped in an\nentities\narray.\nYou must provide the exact type name for each asset (case-sensitive).\nYou must provide the exact name of each existing asset (case-sensitive).\nYou must provide the exact\nqualifiedName\nof each existing asset (case-sensitive).\nMust exactly match the\nqualifiedName\nof an existing asset\nIf this does not exactly match the\nqualifiedName\nof an existing asset, the API call will instead\ncreate a new asset\nrather than restoring an existing one.\nFor glossary-contained objects (terms and categories), you must also specify the glossary in which they are contained. You do this using the\nanchor\nattribute.\nNested within the\nanchor\nattribute you must give the\ntypeName\nas exactly\nAtlasGlossary\n.\nNested within the\nanchor\nattribute you must also give the GUID of the glossary the archived object is contained within.\nThe piece that actually triggers the restore is to change the\nstatus",
    "metadata": {
      "source_url": "snippets_advanced-examples_restore.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_restore.json",
      "chunk_id": 7
    }
  },
  {
    "content": ".\nNested within the\nanchor\nattribute you must also give the GUID of the glossary the archived object is contained within.\nThe piece that actually triggers the restore is to change the\nstatus\nof each asset. When soft-deleted (archived) the status will be\nDELETED\n. Therefore, changing this to\nACTIVE\nwill restore each asset.\n2022-11-30\n2024-12-11\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
    "metadata": {
      "source_url": "snippets_advanced-examples_restore.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_restore.json",
      "chunk_id": 8
    }
  }
]