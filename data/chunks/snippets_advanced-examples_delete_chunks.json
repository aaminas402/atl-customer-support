[
  {
    "content": "Deleting assets - Developer\nSkip to content\nDeleting assets\n¶\nDeleting an\nasset\nuses a similar pattern to the retrieval operations. For this you can use static methods provided by the\nAsset\nclass.\nAvoid deleting connections\nIf you want to delete a connection and all of its assets, consider using the\nconnection delete package\ninstead. In particular, avoid deleting a connection directly (using the methods below) without first deleting the assets contained within it. Once you delete a connection, you will be unable to delete any assets that were within it.\nSoft-delete an asset\n¶\nSoft-deletes (also called an\narchive\n) are a reversible operation. The status of the asset is changed to\nDELETED\nand it no longer appears in the UI, but the asset is still present in Atlan's back-end.\n1.4.0\n4.0.0\nTo soft-delete (archive) an asset, you only need to provide the GUID:\nJava\nPython\nKotlin\nRaw REST API\nSoft-delete an asset\n1\n2\n3\n4\n5\n6\n7\nAssetMutationResponse\nresponse\n=\nAsset\n.\ndelete\n(\nclient\n,\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n);\n// (1)\nAsset\ndeleted\n=\nresponse\n.\ngetDeletedAssets\n().\nget\n(\n0\n);\n// (2)\nGlossary\nglossary\n;\nif\n(\ndeleted\ninstanceof\nGlossary\n)\n{\nglossary\n=\n(\nGlossary\n)\ndeleted\n;",
    "metadata": {
      "source_url": "snippets_advanced-examples_delete.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_delete.json",
      "chunk_id": 0
    }
  },
  {
    "content": ");\n// (1)\nAsset\ndeleted\n=\nresponse\n.\ngetDeletedAssets\n().\nget\n(\n0\n);\n// (2)\nGlossary\nglossary\n;\nif\n(\ndeleted\ninstanceof\nGlossary\n)\n{\nglossary\n=\n(\nGlossary\n)\ndeleted\n;\n// (3)\n}\nThe\ndelete()\nmethod returns the deleted form of the asset. Because this operation will archive the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nYou can distinguish what was deleted through the\ngetDeletedAssets()\nmethod. This lists only the assets deleted by the operation.\nThe\nAsset\nclass is a superclass of all assets. So you need to cast to more specific types (like\nGlossary\n) after verifying the object that was actually returned.\nSoft-delete an asset\n1\n2\n3\n4\n5\n6\n7\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nAtlasGlossary\nclient\n=\nAtlanClient\n()\nresponse\n=\nclient\n.\nasset\n.\ndelete_by_guid\n(\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n)\n# (1)\nif\ndeleted\n:=\nresponse\n.\nassets_deleted\n(\nasset_type\n=\nAtlasGlossary\n):\n# (2)\nterm\n=\ndeleted\n[\n0\n]\n# (3)\nThe\nasset.delete_by_guid()\nmethod returns the deleted form of the asset.\nThe\nassets_deleted(asset_type=AtlasGlossary)\nmethod returns a list of the assets of the given type that were deleted.",
    "metadata": {
      "source_url": "snippets_advanced-examples_delete.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_delete.json",
      "chunk_id": 1
    }
  },
  {
    "content": "]\n# (3)\nThe\nasset.delete_by_guid()\nmethod returns the deleted form of the asset.\nThe\nassets_deleted(asset_type=AtlasGlossary)\nmethod returns a list of the assets of the given type that were deleted.\nIf an asset of the given type was deleted, then the deleted form of the asset is available.\nSoft-delete an asset\n1\n2\n3\n4\nval\nresponse\n=\nAsset\n.\ndelete\n(\nclient\n,\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n)\n// (1)\nval\ndeleted\n=\nresponse\n.\ndeletedAssets\n[\n0\n]\n// (2)\nval\nglossary\n=\nif\n(\ndeleted\nis\nGlossary\n)\ndeleted\nelse\nnull\n// (3)\nThe\ndelete()\nmethod returns the deleted form of the asset. Because this operation will archive the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nYou can distinguish what was deleted through the\ndeletedAssets\nmethod. This lists only the assets deleted by the operation.\nThe\nAsset\nclass is a superclass of all assets. So you need to cast to more specific types (like\nGlossary\n) after verifying the object that was actually returned.\nDELETE /api/meta/entity/bulk?guid=b4113341-251b-4adc-81fb-2420501c30e6&deleteType=SOFT\n1\n// (1)",
    "metadata": {
      "source_url": "snippets_advanced-examples_delete.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_delete.json",
      "chunk_id": 2
    }
  },
  {
    "content": "Glossary\n) after verifying the object that was actually returned.\nDELETE /api/meta/entity/bulk?guid=b4113341-251b-4adc-81fb-2420501c30e6&deleteType=SOFT\n1\n// (1)\nIn the case of deleting an asset, all necessary information is included in the URL of the request. There is no payload for the body of the request. To archive an asset, use\ndeleteType\nof\nSOFT\n.\nHard-delete an asset\n¶\nHard-deletes (also called a\npurge\n) are irreversible operations. The asset is removed from Atlan entirely, so no longer appears in the UI and also no longer exists in Atlan's back-end.\n1.4.0\n4.0.0\nTo hard-delete (purge) an asset, you only need to provide the GUID:\nJava\nPython\nKotlin\nRaw REST API\nHard-delete (purge) an asset\n1\n2\n3\n4\n5\n6\n7\nAssetMutationResponse\nresponse\n=\nAsset\n.\npurge\n(\nclient\n,\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n);\n// (1)\nAsset\ndeleted\n=\nresponse\n.\ngetDeletedAssets\n().\nget\n(\n0\n);\n// (2)\nGlossary\nglossary\n;\nif\n(\ndeleted\ninstanceof\nGlossary\n)\n{\nglossary\n=\n(\nGlossary\n)\ndeleted\n;\n// (3)\n}\nThe\npurge()\nmethod returns the purged form of the asset. Because this operation will remove the asset from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.",
    "metadata": {
      "source_url": "snippets_advanced-examples_delete.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_delete.json",
      "chunk_id": 3
    }
  },
  {
    "content": ";\n// (3)\n}\nThe\npurge()\nmethod returns the purged form of the asset. Because this operation will remove the asset from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nYou can distinguish what was purged through the\ngetDeletedAssets()\nmethod. This lists only the assets deleted by the operation.\nThe\nAsset\nclass is a superclass of all assets. So you need to cast to more specific types (like\nGlossary\n) after verifying the object that was actually returned.\nHard-delete (purge) an asset\n1\n2\n3\n4\n5\n6\n7\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nAtlasGlossary\nclient\n=\nAtlanClient\n()\nresponse\n=\nclient\n.\nasset\n.\npurge_by_guid\n(\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n)\n# (1)\nif\ndeleted\n:=\nresponse\n.\nassets_deleted\n(\nasset_type\n=\nAtlasGlossary\n):\n# (2)\nterm\n=\ndeleted\n[\n0\n]\n# (3)\nThe\nasset.purge_by_guid()\nmethod returns the deleted form of the asset.\nThe\nassets_deleted(asset_type=AtlasGlossary)\nmethod returns a list of the assets of the given type that were deleted.\nIf an asset of the given type was deleted, then the deleted form of the asset is available.\nHard-delete (purge) an asset\n1\n2\n3\n4\nval\nresponse\n=\nAsset\n.\npurge\n(",
    "metadata": {
      "source_url": "snippets_advanced-examples_delete.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_delete.json",
      "chunk_id": 4
    }
  },
  {
    "content": "If an asset of the given type was deleted, then the deleted form of the asset is available.\nHard-delete (purge) an asset\n1\n2\n3\n4\nval\nresponse\n=\nAsset\n.\npurge\n(\nclient\n,\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n)\n// (1)\nval\ndeleted\n=\nresponse\n.\ndeletedAssets\n[\n0\n]\n// (2)\nval\nglossary\n=\nif\n(\ndeleted\nis\nGlossary\n)\ndeleted\nelse\nnull\n// (3)\nThe\npurge()\nmethod returns the purged form of the asset. Because this operation will remove the asset from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nYou can distinguish what was purged through the\ndeletedAssets\nmethod. This lists only the assets deleted by the operation.\nThe\nAsset\nclass is a superclass of all assets. So you need to cast to more specific types (like\nGlossary\n) after verifying the object that was actually returned.\nDELETE /api/meta/entity/bulk?guid=b4113341-251b-4adc-81fb-2420501c30e6&deleteType=PURGE\n1\n// (1)\nIn the case of deleting an asset, all necessary information is included in the URL of the request. There is no payload for the body of the request. To permanently and irreversibly remove an asset, use\ndeleteType\nof\nPURGE\n.\nBulk-delete assets\n¶\n1.4.0\n1.0.0\nYou can also delete a number of",
    "metadata": {
      "source_url": "snippets_advanced-examples_delete.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_delete.json",
      "chunk_id": 5
    }
  },
  {
    "content": "deleteType\nof\nPURGE\n.\nBulk-delete assets\n¶\n1.4.0\n1.0.0\nYou can also delete a number of\nassets\nat the same time:\nUp to a limit\nYou cannot send an unlimited number of assets to be deleted in a single request. As you can see from the\nRaw REST API tab, each GUID will be sent as a query parameter in the URI — so there is a maximum beyond which the URI is too long.\nWe generally recommend sending no more than 20-50 GUIDs at a time using this approach.\nJava\nPython\nKotlin\nRaw REST API\nHard-delete (purge) multiple assets\n1\n2\n3\n4\n5\n6\n7\nAssetMutationResponse\nresponse\n=\nclient\n.\nassets\n.\ndelete\n(\n// (1)\nList\n.\nof\n(\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n,\n// (2)\n\"21e5be62-7a0b-4547-ab7a-6ddf273d0640\"\n,\n\"a0fb35e5-690d-4a5b-8918-9ee267c8fa55\"\n),\nAtlanDeleteType\n.\nPURGE\n);\n// (3)\nList\n<\nAsset\n>\ndeleted\n=\nresponse\n.\ngetDeletedAssets\n();\n// (4)\nThe\ndelete()\nmethod on the endpoint itself can be used to either archive (soft-delete) or purge (hard-delete).\nYou can provide a list of any number of assets to delete (their GUIDs).\nYou need to also specify whether you want to soft-delete (archive) using\nAtlanDeleteType.SOFT\nor hard-delete (purge) the assets using\nAtlanDeleteType.PURGE\n.",
    "metadata": {
      "source_url": "snippets_advanced-examples_delete.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_delete.json",
      "chunk_id": 6
    }
  },
  {
    "content": "You need to also specify whether you want to soft-delete (archive) using\nAtlanDeleteType.SOFT\nor hard-delete (purge) the assets using\nAtlanDeleteType.PURGE\n.\nThe response will contain details of all of the assets that were deleted.\nHard-delete (purge) multiple assets\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nAtlasGlossary\nclient\n=\nAtlanClient\n()\nresponse\n=\nclient\n.\nasset\n.\npurge_by_guid\n([\n# (1)\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n,\n\"21e5be62-7a0b-4547-ab7a-6ddf273d0640\"\n,\n\"a0fb35e5-690d-4a5b-8918-9ee267c8fa55\"\n])\nif\ndeleted\n:=\nresponse\n.\nassets_deleted\n(\nasset_type\n=\nAtlasGlossary\n):\n# (2)\nterm\n=\ndeleted\n[\n0\n]\n# (3)\nYou can alternatively provide either the\nasset.purge_by_guid()\nor\nasset.delete_by_guid()\nmethods with a list of any number of assets to delete (their GUIDs).\nThe\nassets_deleted(asset_type=AtlasGlossary)\nmethod returns a list of the assets of the given type that were deleted.\nIf an asset of the given type was deleted, then the deleted form of the asset is available.\nHard-delete (purge) multiple assets\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nval\nresponse\n=\nclient\n.\nassets\n.\ndelete\n(\n// (1)\nlistOf\n(",
    "metadata": {
      "source_url": "snippets_advanced-examples_delete.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_delete.json",
      "chunk_id": 7
    }
  },
  {
    "content": "Hard-delete (purge) multiple assets\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nval\nresponse\n=\nclient\n.\nassets\n.\ndelete\n(\n// (1)\nlistOf\n(\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n,\n// (2)\n\"21e5be62-7a0b-4547-ab7a-6ddf273d0640\"\n,\n\"a0fb35e5-690d-4a5b-8918-9ee267c8fa55\"\n),\nAtlanDeleteType\n.\nPURGE\n// (3)\n)\nval\ndeleted\n=\nresponse\n.\ndeletedAssets\n// (4)\nThe\ndelete()\nmethod on the endpoint itself can be used to either archive (soft-delete) or purge (hard-delete).\nYou can provide a list of any number of assets to delete (their GUIDs).\nYou need to also specify whether you want to soft-delete (archive) using\nAtlanDeleteType.SOFT\nor hard-delete (purge) the assets using\nAtlanDeleteType.PURGE\n.\nThe response will contain details of all of the assets that were deleted.\nDELETE /api/meta/entity/bulk?guid=b4113341-251b-4adc-81fb-2420501c30e6&guid=21e5be62-7a0b-4547-ab7a-6ddf273d0640&guid=a0fb35e5-690d-4a5b-8918-9ee267c8fa55&deleteType=SOFT\n1\n// (1)\nIn the case of deleting multiple assets, all necessary information is included in the URL of the request. Each separate asset's GUID should be given after a\nguid=\nquery parameter. There is no payload for the body of the request.\nBulk deletion occurs asynchronously",
    "metadata": {
      "source_url": "snippets_advanced-examples_delete.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_delete.json",
      "chunk_id": 8
    }
  },
  {
    "content": "guid=\nquery parameter. There is no payload for the body of the request.\nBulk deletion occurs asynchronously\nBe aware that bulk deleting assets occurs asynchronously. The response above will come back indicating the deleted assets; however, there can still be a delay before those assets are fully deleted in Atlan.\n2022-09-14\n2024-12-11\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
    "metadata": {
      "source_url": "snippets_advanced-examples_delete.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_delete.json",
      "chunk_id": 9
    }
  }
]