[
  {
    "content": "Combining multiple operations - Developer\nSkip to content\nCombining multiple operations\nÂ¶\nFor most of the write operations covered in the sections above, there is also an approach you can use to combine multiple operations together.\nOptimizes changes to a single asset\nThis is useful when you have many changes to make to an asset. Rather than making a separate API call for each change, with this approach you can make a single API call and include all the information within it.\n2.0.0\n4.0.0\nFor example, to create a term complete with a description, parent category, announcement, certificate, several owners, and several linked assets:\nJava\nPython\nKotlin\nRaw REST API\nCombine multiple operations\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\nGlossaryTerm\nterm\n=\nGlossaryTerm\n.\ncreator\n(\n\"Example Term\"\n,\n// (1)\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n)\n.\ndescription\n(\n\"This is only an example.\"\n)\n// (2)\n.\ncategory\n(\nGlossaryCategory\n.\nrefByGuid\n(\n// (3)\n\"1b736a83-207b-4269-ab92-44d77e1aca28\"\n,\nReference\n.\nSaveSemantic\n.\nAPPEND\n// (4)\n))\n.\nannouncementType\n(\nAtlanAnnouncementType\n.\nINFORMATION\n)\n// (5)\n.\nannouncementTitle\n(\n\"New!\"\n)\n// (6)\n.\nannouncementMessage\n(",
    "metadata": {
      "source_url": "snippets_advanced-examples_combine.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_combine.json",
      "chunk_id": 0
    }
  },
  {
    "content": ",\nReference\n.\nSaveSemantic\n.\nAPPEND\n// (4)\n))\n.\nannouncementType\n(\nAtlanAnnouncementType\n.\nINFORMATION\n)\n// (5)\n.\nannouncementTitle\n(\n\"New!\"\n)\n// (6)\n.\nannouncementMessage\n(\n\"This term is newly created.\"\n)\n// (7)\n.\ncertificateStatus\n(\nCertificateStatus\n.\nVERIFIED\n)\n// (8)\n.\ncertificateStatusMessage\n(\n\"For good measure!\"\n)\n// (9)\n.\nownerUser\n(\n\"jdoe\"\n)\n// (10)\n.\nownerUser\n(\n\"jsmith\"\n)\n// (11)\n.\nbuild\n();\n// (12)\nAssetMutationResponse\nresponse\n=\nterm\n.\nsave\n(\nclient\n);\n// (13)\nassert\nresponse\n.\ngetCreatedAssets\n().\nsize\n()\n==\n1\n// (14)\nassert\nresponse\n.\ngetUpdatedAssets\n().\nsize\n()\n==\n1\n// (15)\nUse the\ncreator()\nmethod to initialize the object with all\nnecessary attributes for creating it\n. For a term, this is a name and the GUID of the glossary in which to create the term. (The final\nnull\nis for a\nqualifiedName\nof the glossary, which could be used instead of the GUID.)\nSet a description for the term.\nAdd a category for the term. (This category must already exist, or be created before this operation.)\n(Optional) You can specify whether this category should be\nAPPEND\ned to any categories the term is already organized within, or\nREMOVE",
    "metadata": {
      "source_url": "snippets_advanced-examples_combine.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_combine.json",
      "chunk_id": 1
    }
  },
  {
    "content": "(Optional) You can specify whether this category should be\nAPPEND\ned to any categories the term is already organized within, or\nREMOVE\nd from the existing set of categories. If this argument is left out, the entire set of categories the term is linked to will be\nREPLACE\nd.\nSet the announcement that should be added (in this example, we're using\nINFORMATION\n).\nAdd a title for the announcement.\nAdd a message for the announcement.\nSet the certificate for the term (in this example, we're using\nVERIFIED\n).\nAdd a message for the certificate.\nAdd an owner.\nAdd another owner. Note that we can just continue chaining single owners, we do not need to create our own list first.\nCall the\nbuild()\nmethod to build the enriched object.\nCall the\nsave()\nmethod to actually create the term with all of these initial details. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe response will include that single term that was created.\nThe response will also include any related objects (the category) that were updated by this term being related to them.\nCombine multiple operations\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18",
    "metadata": {
      "source_url": "snippets_advanced-examples_combine.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_combine.json",
      "chunk_id": 2
    }
  },
  {
    "content": "The response will also include any related objects (the category) that were updated by this term being related to them.\nCombine multiple operations\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\n(\nAnnouncement\n,\nAtlasGlossaryTerm\n,\nAtlasGlossaryCategory\n,\nAtlasGlossary\n,\n)\nfrom\npyatlan.model.enums\nimport\nAnnouncementType\n,\nCertificateStatus\nclient\n=\nAtlanClient\n()\nterm\n=\nAtlasGlossaryTerm\n.\ncreator\n(\n# (1)\nname\n=\n\"Example Term\"\n,\nglossary_guid\n=\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n)\nterm\n.\ndescription\n=\n\"This is only an example.\"\n# (2)\nterm\n.\nattributes\n.\ncategories\n=\n[\n# (3)\nAtlasGlossaryCategory\n.\nref_by_guid\n(\n\"1b736a83-207b-4269-ab92-44d77e1aca28\"\n,\nSaveSemantic\n.\nAPPEND\n# (4)\n)\n]\nannouncement\n=\nAnnouncement\n(\n# (5)\nannouncement_type\n=\nAnnouncementType\n.\nINFORMATION\n,\n# (6)\nannouncement_title\n=\n\"New!\"\n,\n# (7)\nannouncement_message\n=\n\"This term is newly created.\"\n,\n# (8)\n)\nterm\n.\nset_announcement\n(\nannouncement\n)\n# (9)\nterm\n.\ncertificate_status\n=\nCertificateStatus\n.\nVERIFIED\n# (10)\nterm\n.\ncertificate_status_message\n=\n\"For good measure!\"\n# (11)\nterm\n.",
    "metadata": {
      "source_url": "snippets_advanced-examples_combine.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_combine.json",
      "chunk_id": 3
    }
  },
  {
    "content": ",\n# (8)\n)\nterm\n.\nset_announcement\n(\nannouncement\n)\n# (9)\nterm\n.\ncertificate_status\n=\nCertificateStatus\n.\nVERIFIED\n# (10)\nterm\n.\ncertificate_status_message\n=\n\"For good measure!\"\n# (11)\nterm\n.\nowner_users\n=\n{\n\"jdoe\"\n,\n\"jsmith\"\n}\n# (12)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\nterm\n)\n# (13)\nassert\nlen\n(\nresponse\n.\nassets_created\n(\nasset_type\n=\nAtlasGlossaryTerm\n))\n==\n1\n# (14)\nassert\nlen\n(\nresponse\n.\nassets_updated\n(\nasset_type\n=\nAtlasGlossary\n))\n==\n1\n# (15)\nassert\nlen\n(\nresponse\n.\nassets_updated\n(\nasset_type\n=\nAtlasGlossaryCategory\n))\n==\n1\n# (16)\nUse the\ncreator()\nmethod to initialize the object with all\nnecessary attributes for creating it\n. For a term, this is a name and the GUID of the glossary in which to create the term.\nSet a description for the term.\nAdd the categories for the term. (This parameter is a list and the categories must already exist, or be created before this operation.).\n(Optional) You can specify whether this category should be\nAPPEND\ned to any categories the term is already organized within, or\nREMOVE\nd from the existing set of categories. If this argument is left out, the entire set of categories the term is linked to will be\nREPLACE\nd.\nCreate the announcement.",
    "metadata": {
      "source_url": "snippets_advanced-examples_combine.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_combine.json",
      "chunk_id": 4
    }
  },
  {
    "content": "REMOVE\nd from the existing set of categories. If this argument is left out, the entire set of categories the term is linked to will be\nREPLACE\nd.\nCreate the announcement.\nSet the announcement that should be added (in this example, we're using\nINFORMATION\n).\nAdd a title for the announcement.\nAdd a message for the announcement.\nSet the announcement for the term.\nSet the certificate for the term (in this example, we're using\nVERIFIED\n).\nAdd a message for the certificate.\nAdd the owners. This parameter is a set of strings.\nCall the\nsave()\nmethod to actually create the term with all of these initial details.\nThe response will include that single term that was created.\nThe response will include that single glossary that was updated.\nThe response will include that single category that was updated.\nCombine multiple operations\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\nval\nterm\n=\nGlossaryTerm\n.\ncreator\n(\n\"Example Term\"\n,\n// (1)\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n)\n.\ndescription\n(\n\"This is only an example.\"\n)\n// (2)\n.\ncategory\n(\nGlossaryCategory\n.\nrefByGuid\n(\n// (3)\n\"1b736a83-207b-4269-ab92-44d77e1aca28\"\n,\nReference\n.\nSaveSemantic\n.\nAPPEND\n// (4)\n))\n.\nannouncementType\n(",
    "metadata": {
      "source_url": "snippets_advanced-examples_combine.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_combine.json",
      "chunk_id": 5
    }
  },
  {
    "content": "(\n\"This is only an example.\"\n)\n// (2)\n.\ncategory\n(\nGlossaryCategory\n.\nrefByGuid\n(\n// (3)\n\"1b736a83-207b-4269-ab92-44d77e1aca28\"\n,\nReference\n.\nSaveSemantic\n.\nAPPEND\n// (4)\n))\n.\nannouncementType\n(\nAtlanAnnouncementType\n.\nINFORMATION\n)\n// (5)\n.\nannouncementTitle\n(\n\"New!\"\n)\n// (6)\n.\nannouncementMessage\n(\n\"This term is newly created.\"\n)\n// (7)\n.\ncertificateStatus\n(\nCertificateStatus\n.\nVERIFIED\n)\n// (8)\n.\ncertificateStatusMessage\n(\n\"For good measure!\"\n)\n// (9)\n.\nownerUser\n(\n\"jdoe\"\n)\n// (10)\n.\nownerUser\n(\n\"jsmith\"\n)\n// (11)\n.\nbuild\n()\n// (12)\nval\nresponse\n=\nterm\n.\nsave\n(\nclient\n)\n// (13)\nassert\n(\nresponse\n.\ncreatedAssets\n.\nsize\n==\n1\n)\n// (14)\nassert\n(\nresponse\n.\nupdatedAssets\n.\nsize\n==\n1\n)\n// (15)\nUse the\ncreator()\nmethod to initialize the object with all\nnecessary attributes for creating it\n. For a term, this is a name and the GUID of the glossary in which to create the term. (The final\nnull\nis for a\nqualifiedName\nof the glossary, which could be used instead of the GUID.)\nSet a description for the term.\nAdd a category for the term. (This category must already exist, or be created before this operation.)\n(Optional) You can specify whether this category should be\nAPPEND",
    "metadata": {
      "source_url": "snippets_advanced-examples_combine.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_combine.json",
      "chunk_id": 6
    }
  },
  {
    "content": "Set a description for the term.\nAdd a category for the term. (This category must already exist, or be created before this operation.)\n(Optional) You can specify whether this category should be\nAPPEND\ned to any categories the term is already organized within, or\nREMOVE\nd from the existing set of categories. If this argument is left out, the entire set of categories the term is linked to will be\nREPLACE\nd.\nSet the announcement that should be added (in this example, we're using\nINFORMATION\n).\nAdd a title for the announcement.\nAdd a message for the announcement.\nSet the certificate for the term (in this example, we're using\nVERIFIED\n).\nAdd a message for the certificate.\nAdd an owner.\nAdd another owner. Note that we can just continue chaining single owners, we do not need to create our own list first.\nCall the\nbuild()\nmethod to build the enriched object.\nCall the\nsave()\nmethod to actually create the term with all of these initial details. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe response will include that single term that was created.",
    "metadata": {
      "source_url": "snippets_advanced-examples_combine.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_combine.json",
      "chunk_id": 7
    }
  },
  {
    "content": "provide it an\nAtlanClient\nthrough which to connect to the tenant.\nThe response will include that single term that was created.\nThe response will also include any related objects (the category) that were updated by this term being related to them.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n{\n\"entities\"\n:\n[\n// (1)\n{\n\"typeName\"\n:\n\"AtlasGlossaryTerm\"\n,\n// (2)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"Example Term\"\n,\n// (3)\n\"qualifiedName\"\n:\n\"gsNccqJraDZqM6WyGP3ea@FzCMyPR2LxkPFgr8eNGrq\"\n,\n\"anchor\"\n:\n{\n\"typeName\"\n:\n\"AtlasGlossary\"\n,\n\"guid\"\n:\n\"b4113341-251b-4adc-81fb-2420501c30e6\"\n},\n\"description\"\n:\n\"This is only an example.\"\n,\n// (4)\n\"announcementType\"\n:\n\"information\"\n,\n// (5)\n\"announcementTitle\"\n:\n\"New!\"\n,\n// (6)\n\"announcementMessage\"\n:\n\"This term is newly created.\"\n,\n// (7)\n\"certificateStatus\"\n:\n\"VERIFIED\"\n,\n// (8)\n\"certificateStatusMessage\"\n:\n\"For good measure!\"\n,\n// (9)\n\"ownerUsers\"\n:\n[\n// (10)\n\"jdoe\"\n,\n\"jsmith\"\n]\n},\n\"appendRelationshipAttributes\"\n:\n{\n\"categories\"\n:\n[\n// (11)\n{\n\"typeName\"\n:\n\"AtlasGlossaryCategory\"\n,\n\"guid\"\n:\n\"1b736a83-207b-4269-ab92-44d77e1aca28\"\n}\n]\n}\n}\n]\n}\nAll details must still be included in an outer",
    "metadata": {
      "source_url": "snippets_advanced-examples_combine.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_combine.json",
      "chunk_id": 8
    }
  },
  {
    "content": ":\n{\n\"categories\"\n:\n[\n// (11)\n{\n\"typeName\"\n:\n\"AtlasGlossaryCategory\"\n,\n\"guid\"\n:\n\"1b736a83-207b-4269-ab92-44d77e1aca28\"\n}\n]\n}\n}\n]\n}\nAll details must still be included in an outer\nentities\narray.\nYou need to specify the type for each asset you are updating.\nYou need to specify other required attributes for each asset, such as its name and qualifiedName. (And in the case of terms and categories, also the parent glossary they exist within.)\nSet a description for the term.\nSet the announcement that should be added.\nAdd a title for the announcement.\nAdd a message for the announcement.\nSet the certificate for the term (in this example, we're using\nVERIFIED\n).\nAdd a message for the certificate.\nAdd multiple owners.\nAdd one or more categories for the term. (Each category must already exist, or be created before this operation.) When you want the relationship to be appended, you must specify it within the\nappendRelationshipAttributes\nportion of the payload. If it is within the\nattributes\nportion of the payload, it will replace all such relationships on the asset.\nWhat are the available enrichments?",
    "metadata": {
      "source_url": "snippets_advanced-examples_combine.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_combine.json",
      "chunk_id": 9
    }
  },
  {
    "content": "appendRelationshipAttributes\nportion of the payload. If it is within the\nattributes\nportion of the payload, it will replace all such relationships on the asset.\nWhat are the available enrichments?\nThe list of methods that are available to enrich each type of asset in Atlan should be directly visible to you within your favorite IDE (when using one of the SDKs).\n2022-08-22\n2024-12-11\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better ð\nGoogle Analytics\nAccept\nReject\nManage settings",
    "metadata": {
      "source_url": "snippets_advanced-examples_combine.html",
      "source_type": "sdk",
      "file": "snippets_advanced-examples_combine.json",
      "chunk_id": 10
    }
  }
]