[
  {
    "content": "Manage App assets - Developer\nSkip to content\nManage App assets\n¶\nOperations on App assets.\nIn general, these should be:\nCreated in top-down order\n(Connection, then Application, then ApplicationField)\nDeleted in bottom-up order (ApplicationField, Application, then Connections)\n1\nerDiagram\nConnection ||--o{ Application : contains\nApplication ||--o{ ApplicationField : contains\nAsset structure\n¶\nConnection\n¶\n7.0.0\n4.0.0\nAn App\nconnection\nrequires a\nname\nand\nqualifiedName\n. For creation, specific settings are also required to distinguish it as an App connection rather than another type of connection. In addition,\nat least one\nof\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nJava\nPython\nKotlin\nRaw REST API\nCreate an App connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nString\nadminRoleGuid\n=\nclient\n.\ngetRoleCache\n().\ngetIdForName\n(\n\"$admin\"\n);\n// (1)\nConnection\nconnection\n=\nConnection\n.\ncreator\n(\n// (2)\n\"app-connection\"\n,\n// (3)\nAtlanConnectorType\n.\nAPP\n,\n// (4)\nList\n.\nof\n(\nadminRoleGuid\n),\n// (5)\nList\n.\nof\n(\n\"group2\"\n),\n// (6)\nList\n.\nof\n(\n\"jsmith\"\n))\n// (7)\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\nconnection\n.\nsave\n(\nclient\n);\n// (8)\nString\nconnectionQualifiedName\n=\nresponse\n.",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 0
    }
  },
  {
    "content": "),\n// (5)\nList\n.\nof\n(\n\"group2\"\n),\n// (6)\nList\n.\nof\n(\n\"jsmith\"\n))\n// (7)\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\nconnection\n.\nsave\n(\nclient\n);\n// (8)\nString\nconnectionQualifiedName\n=\nresponse\n.\ngetCreatedAssets\n().\nget\n(\n0\n).\ngetQualifiedName\n();\n// (9)\nRetrieve the GUID for the admin role, to use later for defining the roles that can administer the connection.\nBuild up the minimum request to create a connection.\nProvide a human-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nSet the type of connection to APP.\nList the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 1
    }
  },
  {
    "content": "At least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nActually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nRetrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.)\nCreate an App connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nConnection\n,\nApplication\n,\nTable\n,\nSchema\nfrom\npyatlan.model.enums\nimport\nAtlanConnectorType\nclient\n=\nAtlanClient\n()\nadmin_role_guid\n=\nclient\n.\nrole_cache\n.\nget_id_for_name\n(\n\"$admin\"\n)\n# (1)\nconnection\n=\nConnection\n.\ncreator\n(\n# (2)\nclient\n=\nclient\n,\n# (3)\nname\n=\n\"app-connection\"\n,\n# (4)\nconnector_type\n=\nAtlanConnectorType\n.\nAPP\n,\n# (5)\nadmin_roles\n=\n[\nadmin_role_guid\n],\n# (6)\nadmin_groups\n=\n[\n\"group2\"\n],\n# (7)\nadmin_users\n=\n[\n\"jsmith\"\n]\n# (8)\n)\nresponse\n=\nclient\n.",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 2
    }
  },
  {
    "content": ",\n# (4)\nconnector_type\n=\nAtlanConnectorType\n.\nAPP\n,\n# (5)\nadmin_roles\n=\n[\nadmin_role_guid\n],\n# (6)\nadmin_groups\n=\n[\n\"group2\"\n],\n# (7)\nadmin_users\n=\n[\n\"jsmith\"\n]\n# (8)\n)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\nconnection\n)\n# (9)\nconnection_qualified_name\n=\nresponse\n.\nassets_created\n(\nasset_type\n=\nConnection\n)[\n0\n]\n.\nqualified_name\n# (10)\nRetrieve the GUID for the admin role, to use later for defining the roles that can administer the connection.\nBuild up the minimum request to create a connection.\nYou must provide a client instance.\nProvide a human-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nSet the type of connection to APP.\nList the workspace roles that should be able to administer the connection (or\nNone\nif none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadmin_roles\n,\nadmin_groups\n, or\nadmin_users\nmust be provided.\nList the group names that can administer this connection (or\nNone",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 3
    }
  },
  {
    "content": "At least one of\nadmin_roles\n,\nadmin_groups\n, or\nadmin_users\nmust be provided.\nList the group names that can administer this connection (or\nNone\nif none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadmin_roles\n,\nadmin_groups\n, or\nadmin_users\nmust be provided.\nList the user names that can administer this connection (or\nNone\nif none). Note that the values here are the username(s) of the user(s).\nAt least one of\nadmin_roles\n,\nadmin_groups\n, or\nadmin_users\nmust be provided.\nActually call Atlan to create the connection.\nRetrieve the\nqualified_name\nfor use in subsequent creation calls. (You'd probably want to do some null checking first.)\nCreate an App connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nval\nadminRoleGuid\n=\nclient\n.\nroleCache\n.\ngetIdForName\n(\n\"\\\n$\nadmin\n\"\n)\n// (1)\nval\nconnection\n=\nConnection\n.\ncreator\n(\n// (2)\n\"app-connection\"\n,\n// (3)\nAtlanConnectorType\n.\nAPP\n,\n// (4)\nlistOf\n(\nadminRoleGuid\n),\n// (5)\nlistOf\n(\n\"group2\"\n),\n// (6)\nlistOf\n(\n\"jsmith\"\n))\n// (7)\n.\nbuild\n()\nval\nresponse\n=\nconnection\n.\nsave\n(\nclient\n)\n// (8)\nval\nconnectionQualifiedName\n=\nresponse\n.\ncreatedAssets",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 4
    }
  },
  {
    "content": "(\nadminRoleGuid\n),\n// (5)\nlistOf\n(\n\"group2\"\n),\n// (6)\nlistOf\n(\n\"jsmith\"\n))\n// (7)\n.\nbuild\n()\nval\nresponse\n=\nconnection\n.\nsave\n(\nclient\n)\n// (8)\nval\nconnectionQualifiedName\n=\nresponse\n.\ncreatedAssets\n[\n0\n]\n.\nqualifiedName\n// (9)\nRetrieve the GUID for the admin role, to use later for defining the roles that can administer the connection.\nBuild up the minimum request to create a connection.\nProvide a human-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nSet the type of connection to APP.\nList the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 5
    }
  },
  {
    "content": "At least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nActually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nRetrieve the qualifiedName for use in subsequent creation calls. (You'd probably want to do some null checking first.)\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"Connection\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"app-connection\"\n,\n// (2)\n\"connectorName\"\n:\n\"app\"\n,\n// (3)\n\"qualifiedName\"\n:\n\"default/app/123456789\"\n,\n// (4)\n\"category\"\n:\n\"APP\"\n,\n// (5)\n\"adminRoles\"\n:\n[\n// (6)\n\"e7ae0295-c60a-469a-bd2c-fb903943aa02\"\n],\n\"adminGroups\"\n:\n[\n// (7)\n\"group2\"\n],\n\"adminUsers\"\n:\n[\n// (8)\n\"jsmith\"\n]\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nConnection\n.\nHuman-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nThe\nconnectorName\nmust be exactly\napp\n.\nThe",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 6
    }
  },
  {
    "content": ":\n[\n// (8)\n\"jsmith\"\n]\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nConnection\n.\nHuman-readable name for your connection, such as\nproduction\nor\ndevelopment\n.\nThe\nconnectorName\nmust be exactly\napp\n.\nThe\nqualifiedName\nshould follow the pattern:\ndefault/app/<epoch>\n, where\n<epoch>\nis the time in milliseconds at which the connection is being created.\nThe\ncategory\nmust be\nAPP\n.\nList any workspace roles that can administer this connection. All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList any groups that can administer this connection. All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList any users that can administer this connection. Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nAccess policies",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 7
    }
  },
  {
    "content": "At least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nAccess policies\nAtlan creates the policies that grant access to a connection, including the ability to retrieve the connection and to create assets within it, asynchronously. It can take several seconds (even up to approximately 30 seconds) before these are in place after creating the connection.\nYou may therefore need to wait before you'll be able to create the assets below within the connection.\nTo confirm access,\nretrieve the connection\nafter it has been created. The SDKs' retry loops will automatically retry until the connection can be successfully retrieved. At that point, your API token has permission to create the other assets.\nNote: if you are\nreusing\nan existing connection rather than creating one via your API token, you must give your API token a persona that has access to that connection. Otherwise all attempts to create, read, update, or delete assets within that connection will fail due to a lack of permissions.\nApplication\n¶\n2.6.1\n4.0.0\nAn\nApplication\nrequires a\nname\nand a\nqualifiedName\n. For creation, you also need to specify the\nconnectionQualifiedName",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 8
    }
  },
  {
    "content": "Application\n¶\n2.6.1\n4.0.0\nAn\nApplication\nrequires a\nname\nand a\nqualifiedName\n. For creation, you also need to specify the\nconnectionQualifiedName\nof the connection for the Application. You can also provide the\nappId\nand\napplicationOwnedAssets\nfor the asset.\nJava\nPython\nKotlin\nRaw REST API\nCreate an Application\n11\n12\n13\n14\n15\n16\n17\n18\n19\nApplication\napplication\n=\nApplication\n.\ncreator\n(\n// (1)\n\"application\"\n,\n// (2)\nconnectionQualifiedName\n,)\n// (3)\n.\nappId\n(\n\"1234\"\n)\n// (4)\n.\napplicationOwnedAssets\n(\nList\n.\nof\n(\nTable\n.\nrefByQualifiedName\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA/TABLE\"\n),\nSchema\n.\nrefByQualifiedName\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA\"\n)))\n// (5)\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\napplication\n.\nsave\n(\nclient\n);\n// (6)\nBuild up the minimum request to create an Application.\nProvide a human-readable name for your Application.\nProvide the qualifiedName of the connection for this asset.\n(Optional) Provide the\nappId\nof this application in the source system.\n(Optional) Provide the list of assets that exist in this application. Also update the individual assets to hold the qualifiedName of this application in the attribute",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 9
    }
  },
  {
    "content": "(Optional) Provide the list of assets that exist in this application. Also update the individual assets to hold the qualifiedName of this application in the attribute\napplicationQualifiedName\n.\nActually call Atlan to create the application. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nCreate an Application\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\napplication\n=\nApplication\n.\ncreator\n(\n# (1)\nname\n=\n\"application\"\n,\n# (2)\nconnection_qualified_name\n=\nconnection_qualified_name\n,\n# (3)\n)\napplication\n.\napp_id\n=\n\"1234\"\n,\n# (4)\napplication\n.\napplication_owned_assets\n=\n[\nTable\n.\nref_by_qualified_name\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA/TABLE\"\n),\nSchema\n.\nref_by_qualified_name\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA\"\n)\n]\n# (5)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\napplication\n)\n# (6)\napplication_qualified_name\n=\nresponse\n.\nassets_created\n(\nasset_type\n=\nApplication\n)[\n0\n]\n.\nqualified_name\n# (7)\nBuild up the minimum request to create an Application.\nProvide a human-readable name for your Application.\nProvide the\nqualified_name\nof the connection for this Application.\n(Optional) Provide the\nappId",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 10
    }
  },
  {
    "content": "Provide a human-readable name for your Application.\nProvide the\nqualified_name\nof the connection for this Application.\n(Optional) Provide the\nappId\nof this application in the source system.\n(Optional) Provide the list of assets that exist in this application. Also update the individual assets to hold the qualifiedName of this application in the attribute\napplicationQualifiedName\n.\nActually call Atlan to create the Application.\nRetrieve the\nqualified_name\nfor use in subsequent creation calls. (You'd probably want to do some null checking first.)\nCreate an Application\n11\n12\n13\n14\n15\n16\n17\n18\n19\nval\napplication\n=\nApplication\n.\ncreator\n(\n// (1)\n\"application\"\n,\n// (2)\nconnectionQualifiedName\n,)\n// (3)\n.\nappId\n(\n\"1234\"\n)\n// (4)\n.\napplicationOwnedAssets\n(\nList\n.\nof\n(\nTable\n.\nrefByQualifiedName\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA/TABLE\"\n),\nSchema\n.\nrefByQualifiedName\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA\"\n)))\n// (5)\n.\nbuild\n()\nval\nresponse\n=\napplication\n.\nsave\n(\nclient\n)\n// (6)\nBuild up the minimum request to create an Application.\nProvide a human-readable name for your Application.\nProvide the qualifiedName of the connection for this asset.\n(Optional) Provide the",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 11
    }
  },
  {
    "content": ")\n// (6)\nBuild up the minimum request to create an Application.\nProvide a human-readable name for your Application.\nProvide the qualifiedName of the connection for this asset.\n(Optional) Provide the\nappId\nof this application in the source system.\n(Optional) Provide the list of assets that exist in this application. Also update the individual assets to hold the qualifiedName of this application in the attribute\napplicationQualifiedName\n.\nActually call Atlan to create the application. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"Application\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"application\"\n,\n// (2)\n\"qualifiedName\"\n:\n\"default/app/123456789/application\"\n,\n// (3)\n\"connectionQualifiedName\"\n:\n\"default/app/123456789\"\n,\n// (4)\n\"connectorName\"\n:\n\"app\"\n,\n// (5)\n\"appId\"\n:\n\"1234\"\n,\n// (6)\n\"applicationOwnedAssets\"\n:\n[\n// (7)\n{\n\"typeName\"\n:\n\"Table\"\n,\n// (8)\n\"uniqueAttributes\"\n:\n{\n// (9)\n\"qualifiedName\"\n:\n\"default/snowflake/123456789/DATABASE/SCHEMA/TABLE\"\n}\n},\n{\n\"typeName\"\n:",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 12
    }
  },
  {
    "content": ",\n// (6)\n\"applicationOwnedAssets\"\n:\n[\n// (7)\n{\n\"typeName\"\n:\n\"Table\"\n,\n// (8)\n\"uniqueAttributes\"\n:\n{\n// (9)\n\"qualifiedName\"\n:\n\"default/snowflake/123456789/DATABASE/SCHEMA/TABLE\"\n}\n},\n{\n\"typeName\"\n:\n\"Schema\"\n,\n\"uniqueAttributes\"\n:\n{\n\"qualifiedName\"\n:\n\"default/snowflake/123456789/DATABASE/SCHEMA\"\n}\n}\n]\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nApplication\n.\nHuman-readable name for your asset.\nThe\nqualifiedName\nshould follow the pattern:\ndefault/app/<epoch>/<assetName>\n, where\ndefault/app/<epoch>\nis the qualifiedName of the connection for this asset and\n<assetName>\nis the name of this asset.\nThe\nconnectionQualifiedName\nmust be the exact qualifiedName of the connection for this asset.\nThe\nconnectorName\nmust be exactly\napp\n.\n(Optional) The\nappId\nshould be id of the application in the source system.\n(Optional) The Catalog assets which are present inside this application are added in\napplicationOwnedAssets\nattribute.\nThe\ntypeName\nfor this embedded reference must be the type of asset being embeded.\nTo complete the reference, you must include a\nuniqueAttributes\nobject with the qualifiedName of the asset. Note: the asset must already exist in Atlan before creating the path.\nApplicationField\n¶",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 13
    }
  },
  {
    "content": "To complete the reference, you must include a\nuniqueAttributes\nobject with the qualifiedName of the asset. Note: the asset must already exist in Atlan before creating the path.\nApplicationField\n¶\n4.2.0\n4.2.4\nAn\nApplicationField\nrequires a\nname\nand a\nqualifiedName\n. For creation, you also need to specify the\nconnectionQualifiedName\nof the connection for the ApplicationField, and the\napplicationQualifiedName\nof the field's ancestor. You can also provide the\napplicationFieldOwnedAssets\nfor the asset.\nJava\nPython\nKotlin\nRaw REST API\nCreate an ApplicationField\n11\n12\n13\n14\n15\n16\n17\n18\nApplicationField\napplicationField\n=\nApplicationField\n.\ncreator\n(\n// (1)\n\"application-field\"\n,\n// (2)\napplication\n)\n// (3)\n.\napplicationFieldOwnedAssets\n(\nList\n.\nof\n(\nTable\n.\nrefByQualifiedName\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA/TABLE\"\n),\nSchema\n.\nrefByQualifiedName\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA\"\n)))\n// (4)\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\napplicationField\n.\nsave\n(\nclient\n);\n// (5)\nBuild up the minimum request to create an ApplicationField.\nProvide a human-readable name for your ApplicationField.\nProvide the application for this field.",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 14
    }
  },
  {
    "content": "applicationField\n.\nsave\n(\nclient\n);\n// (5)\nBuild up the minimum request to create an ApplicationField.\nProvide a human-readable name for your ApplicationField.\nProvide the application for this field.\n(Optional) Provide the list of assets that exist in this ApplicationField. Also update the individual assets to hold the qualifiedName of this ApplicationField in the attribute\napplicationFieldQualifiedName\n.\nActually call Atlan to create the ApplicationField. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nCreate an ApplicationField\n17\n18\n19\n20\n21\n22\n23\n24\n25\napplicationField\n=\nApplicationField\n.\ncreator\n(\n# (1)\nname\n=\n\"application-field\"\n,\n# (2)\napplication_qualified_name\n=\napplication_qualified_name\n,\n# (3)\n)\napplicationField\n.\napplication_field_owned_assets\n=\n[\nTable\n.\nref_by_qualified_name\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA/TABLE\"\n),\nSchema\n.\nref_by_qualified_name\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA\"\n)\n]\n# (4)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\napplicationField\n)\n# (5)\nBuild up the minimum request to create an ApplicationField.",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 15
    }
  },
  {
    "content": "ref_by_qualified_name\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA\"\n)\n]\n# (4)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\napplicationField\n)\n# (5)\nBuild up the minimum request to create an ApplicationField.\nProvide a human-readable name for your ApplicationField.\nProvide the\nqualified_name\nof the application for this ApplicationField.\n(Optional) Provide the list of assets that exist in this ApplicationField. Also update the individual assets to hold the\nqualifiedName\nof this ApplicationField in the attribute\napplicationFieldQualifiedName\n.\nActually call Atlan to create the ApplicationField.\nCreate an ApplicationField\n11\n12\n13\n14\n15\n16\n17\n18\nval\napplicationField\n=\nApplicationField\n.\ncreator\n(\n// (1)\n\"application-field\"\n,\n// (2)\napplication\n)\n// (3)\n.\napplicationFieldOwnedAssets\n(\nList\n.\nof\n(\nTable\n.\nrefByQualifiedName\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA/TABLE\"\n),\nSchema\n.\nrefByQualifiedName\n(\n\"default/snowflake/123456789/DATABASE/SCHEMA\"\n)))\n// (4)\n.\nbuild\n()\nval\nresponse\n=\napplicationField\n.\nsave\n(\nclient\n)\n// (5)\nBuild up the minimum request to create an ApplicationField.\nProvide a human-readable name for your ApplicationField.\nProvide the application for this field.",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 16
    }
  },
  {
    "content": "applicationField\n.\nsave\n(\nclient\n)\n// (5)\nBuild up the minimum request to create an ApplicationField.\nProvide a human-readable name for your ApplicationField.\nProvide the application for this field.\n(Optional) Provide the list of assets that exist in this ApplicationField. Also update the individual assets to hold the\nqualifiedName\nof this ApplicationField in the attribute\napplicationFieldQualifiedName\n.\nActually call Atlan to create the ApplicationField. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"ApplicationField\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"application-field\"\n,\n// (2)\n\"qualifiedName\"\n:\n\"default/app/123456789/application/field\"\n,\n// (3)\n\"connectionQualifiedName\"\n:\n\"default/app/123456789\"\n,\n// (4)\n\"connectorName\"\n:\n\"app\"\n,\n// (5)\n\"parentApplication\"\n:\n{\n// (6)\n\"typeName\"\n:\n\"Application\"\n,\n// (7)\n\"uniqueAttributes\"\n:\n{\n// (8)\n\"qualifiedName\"\n:\n\"default/app/123456789/application\"\n}\n},\n\"applicationParentQualifiedName\"\n:",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 17
    }
  },
  {
    "content": ",\n// (5)\n\"parentApplication\"\n:\n{\n// (6)\n\"typeName\"\n:\n\"Application\"\n,\n// (7)\n\"uniqueAttributes\"\n:\n{\n// (8)\n\"qualifiedName\"\n:\n\"default/app/123456789/application\"\n}\n},\n\"applicationParentQualifiedName\"\n:\n\"default/app/123456789/application\"\n,\n// (9)\n\"applicationFieldOwnedAssets\"\n:\n[\n// (10)\n{\n\"typeName\"\n:\n\"Table\"\n,\n// (11)\n\"uniqueAttributes\"\n:\n{\n// (12)\n\"qualifiedName\"\n:\n\"default/snowflake/123456789/DATABASE/SCHEMA/TABLE\"\n}\n},\n{\n\"typeName\"\n:\n\"Schema\"\n,\n\"uniqueAttributes\"\n:\n{\n\"qualifiedName\"\n:\n\"default/snowflake/123456789/DATABASE/SCHEMA\"\n}\n}\n]\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nApplicationField\n.\nHuman-readable name for your asset.\nThe\nqualifiedName\nshould follow the pattern:\ndefault/app/<epoch>/<applicationName>/<fieldName>\n, where\ndefault/app/<epoch>/<applicationName>\nis the qualifiedName of the application for this field and\n<fieldName>\nis the name of this asset.\nThe\nconnectionQualifiedName\nmust be the exact qualifiedName of the connection for this asset.\nThe\nconnectorName\nmust be exactly\napp\n.\nThe application in which this field exists is embedded in the\nparentApplication\nattribute.\nThe\ntypeName\nfor this embedded reference must be\nApplication\n.",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 18
    }
  },
  {
    "content": "The\nconnectorName\nmust be exactly\napp\n.\nThe application in which this field exists is embedded in the\nparentApplication\nattribute.\nThe\ntypeName\nfor this embedded reference must be\nApplication\n.\nTo complete the reference, you must include a\nuniqueAttributes\nobject with the qualifiedName of the application. Note: the application must already exist in Atlan before creating the path.\nThe\napplicationParentQualifiedName\nmust be the qualifiedName of the application which contains this field.\n(Optional) The Catalog assets which are present inside this ApplicationField are added in\napplicationFieldOwnedAssets\nattribute.\nThe\ntypeName\nfor this embedded reference must be the type of asset being embeded.\nTo complete the reference, you must include a\nuniqueAttributes\nobject with the qualifiedName of the asset. Note: the asset must already exist in Atlan before creating the path.\nAvailable relationships\n¶\nEvery level of the App structure is an\nAsset\n, and can therefore be related to the following other assets.\nerDiagram\nAsset }o--o{ AtlasGlossaryTerm : meanings\nAsset ||--o{ Link : links\nAsset ||--o| Readme : readme\nAsset }o--o{ Process : inputToProcesses",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 19
    }
  },
  {
    "content": "erDiagram\nAsset }o--o{ AtlasGlossaryTerm : meanings\nAsset ||--o{ Link : links\nAsset ||--o| Readme : readme\nAsset }o--o{ Process : inputToProcesses\nAsset }o--o{ Process : outputFromProcesses\nAtlasGlossaryTerm\n¶\nA\nglossary term\nprovides meaning to an asset. The\nlink terms to assets snippet\nprovides more detail on setting this relationship.\nLink\n¶\nA\nlink\nprovides additional context to an asset, by providing a URL to additional information.\nReadme\n¶\nA\nREADME\nprovides rich documentation for an asset. The\nadd asset READMEs snippet\nprovides more detail on setting this relationship.\nProcess\n¶\nA\nprocess\nprovides lineage information for an asset. An asset can be both an input and an output for one or more processes. The\nlineage snippets\nprovide more detail on creating and working with lineage.\nAlthough if you want to delete everything in a connection, your better avenue is the packaged\nconnection delete utility\nin the UI.\n↩\n2024-11-14\n2025-06-11\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 20
    }
  },
  {
    "content": "Thanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
    "metadata": {
      "source_url": "patterns_create_app.html",
      "source_type": "sdk",
      "file": "patterns_create_app.json",
      "chunk_id": 21
    }
  }
]