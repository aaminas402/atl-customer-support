[
  {
    "content": "Relational assets builder package - Developer\nSkip to content\nRelational assets builder package\n¶\nThe\nrelational assets builder package\nallows you to create (and update) net-new relational assets: connections, databases, schemas, tables, views, materialized views and columns.\nImport relational assets from object store\n¶\n2.6.0\nTo import relational assets directly from the object store:\nJava\nPython\nKotlin\nRaw REST API\nComing soon\nImport relational assets from the object store\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.packages\nimport\nRelationalAssetsBuilder\nfrom\npyatlan.model.assets\nimport\nAsset\nfrom\npyatlan.model.enums\nimport\nAssetInputHandling\n,\nAssetDeltaHandling\n,\nAssetRemovalType\nclient\n=\nAtlanClient\n()\nworkflow\n=\n(\nRelationalAssetsBuilder\n()\n# (1)\n.\nobject_store\n(\n# (2)\nprefix\n=\n\"/test/prefix\"\n,\nobject_key\n=\n\"assets-test.csv\"\n,\n)\n.\ns3\n(\n# (3)\naccess_key\n=\n\"test-access-key\"\n,\nsecret_key\n=\n\"test-secret-key\"\n,\nbucket\n=\n\"my-bucket\"\n,\nregion\n=\n\"us-west-1\"\n,\n)\n.\nassets_semantics\n(\n# (4)\ninput_handling\n=\nAssetInputHandling\n.\nUPSERT\n,\ndelta_handling\n=\nAssetDeltaHandling\n.",
    "metadata": {
      "source_url": "snippets_workflows_packages_relational-assets-builder.html",
      "source_type": "sdk",
      "file": "snippets_workflows_packages_relational-assets-builder.json",
      "chunk_id": 0
    }
  },
  {
    "content": ",\nsecret_key\n=\n\"test-secret-key\"\n,\nbucket\n=\n\"my-bucket\"\n,\nregion\n=\n\"us-west-1\"\n,\n)\n.\nassets_semantics\n(\n# (4)\ninput_handling\n=\nAssetInputHandling\n.\nUPSERT\n,\ndelta_handling\n=\nAssetDeltaHandling\n.\nINCREMENTAL\n,\nremoval_type\n=\nAssetRemovalType\n.\nARCHIVE\n,\n)\n.\noptions\n(\n# (5)\nremove_attributes\n=\n[\nAsset\n.\nCERTIFICATE_STATUS\n,\nAsset\n.\nANNOUNCEMENT_TYPE\n],\nfail_on_errors\n=\nTrue\n,\nfield_separator\n=\n\",\"\n,\nbatch_size\n=\n20\n,\n)\n)\n.\nto_workflow\n()\n# (6)\nresponse\n=\nclient\n.\nworkflow\n.\nrun\n(\nworkflow\n)\n# (7)\nThe\nRelationalAssetsBuilder\nallows you to create (and update) net-new relational assets.\nTo set up the package for importing metadata directly from the object store, provide the following information:\nprefix\n: directory (path) within the bucket/container\nfrom which to retrieve the object(s).\nobject_key\n: object key (filename), including its extension,\nwithin the bucket/container and prefix.\nYou can use different object store methods (e.g:\ns3()\n,\ngcs()\n,\nadls()\n). In this example,\nwe're building a workflow using\ns3()\nand for that, you’ll need to provide the following information:\nAWS access key.\nAWS secret key.\nname of the bucket/storage that contains the metadata CSV files.",
    "metadata": {
      "source_url": "snippets_workflows_packages_relational-assets-builder.html",
      "source_type": "sdk",
      "file": "snippets_workflows_packages_relational-assets-builder.json",
      "chunk_id": 1
    }
  },
  {
    "content": "we're building a workflow using\ns3()\nand for that, you’ll need to provide the following information:\nAWS access key.\nAWS secret key.\nname of the bucket/storage that contains the metadata CSV files.\nname of the AWS region.\nTo set up the package to import metadata with semantics, you need to provide:\ninput_handling\n: whether to allow the creation of new full (\nAssetInputHandling.UPSERT\n)\nor partial (\nAssetInputHandling.PARTIAL\n) assets from the input CSV, or ensure assets\nare only updated (\nAssetInputHandling.UPDATED\n) if they already exist in Atlan.\ndelta_handling\n: whether to treat the input file as an initial load, full replacement\n[\nAssetDeltaHandling.FULL_REPLACEMENT\n] (deleting any existing assets not in the file) or only incremental [\nAssetDeltaHandling.INCREMENTAL\n] (no deletion of existing assets).\nremoval_type\n: if\ndelta_handling\nis set to\nFULL_REPLACEMENT\n, this parameter specifies whether to\ndelete any assets not found in the latest file by archive (recoverable) [\nAssetRemovalType.ARCHIVE\n] or purge (non-recoverable) [\nAssetRemovalType.PURGE\n].\nIf\ndelta_handling\nis set to\nINCREMENTAL\n, this parameter is ignored and assets are archived.",
    "metadata": {
      "source_url": "snippets_workflows_packages_relational-assets-builder.html",
      "source_type": "sdk",
      "file": "snippets_workflows_packages_relational-assets-builder.json",
      "chunk_id": 2
    }
  },
  {
    "content": "AssetRemovalType.ARCHIVE\n] or purge (non-recoverable) [\nAssetRemovalType.PURGE\n].\nIf\ndelta_handling\nis set to\nINCREMENTAL\n, this parameter is ignored and assets are archived.\n(Optional) To set up the package for importing relational assets with\nadvanced configuration, provide the following information:\nremove_attributes\n: list of attributes to clear (remove)\nfrom assets if their value is blank in the provided file.\nfail_on_errors\n: specifies whether an invalid value\nin a field should cause the import to fail (\nTrue\n) or\nlog a warning, skip that value, and proceed (\nFalse\n).\nfield_separator\n: character used to separate\nfields in the input file (e.g:\n','\nor\n';'\n).\nbatch_size\n: maximum number of rows\nto process at a time (per API request).\nConvert the package into a\nWorkflow\nobject.\nRun the workflow by invoking the\nrun()\nmethod\non the workflow client, passing the created object.\nWorkflows run asynchronously\nRemember that workflows run asynchronously.\nSee the\npackages and workflows introduction\nfor details on how to check the status and wait\nuntil the workflow has been completed.\nComing soon\nCreate the workflow via UI only\nWe recommend creating the workflow only via the UI.",
    "metadata": {
      "source_url": "snippets_workflows_packages_relational-assets-builder.html",
      "source_type": "sdk",
      "file": "snippets_workflows_packages_relational-assets-builder.json",
      "chunk_id": 3
    }
  },
  {
    "content": "for details on how to check the status and wait\nuntil the workflow has been completed.\nComing soon\nCreate the workflow via UI only\nWe recommend creating the workflow only via the UI.\nTo rerun an existing workflow, see the steps below.\nRe-run existing workflow\n¶\n2.6.0\nTo re-run an existing relational assets builder workflow:\nJava\nPython\nKotlin\nRaw REST API\nComing soon\nRe-run existing relational assets builder workflow\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.enums\nimport\nWorkflowPackage\nclient\n=\nAtlanClient\n()\nexisting\n=\nclient\n.\nworkflow\n.\nfind_by_type\n(\n# (1)\nprefix\n=\nWorkflowPackage\n.\nRELATIONAL_ASSETS_BUILDER\n,\nmax_results\n=\n5\n)\n# Determine which relational assets builder workflow (n)\n# from the list of results you want to re-run.\nresponse\n=\nclient\n.\nworkflow\n.\nrerun\n(\nexisting\n[\nn\n])\n# (2)\nYou can find workflows by their type using the workflow client\nfind_by_type()\nmethod and providing the\nprefix\nfor one of the packages.\nIn this example, we do so for the\nRelationalAssetsBuilder\n. (You can also specify\nthe\nmaximum number of resulting workflows\nyou want to retrieve as results.)\nOnce you've found the workflow you want to re-run,",
    "metadata": {
      "source_url": "snippets_workflows_packages_relational-assets-builder.html",
      "source_type": "sdk",
      "file": "snippets_workflows_packages_relational-assets-builder.json",
      "chunk_id": 4
    }
  },
  {
    "content": "RelationalAssetsBuilder\n. (You can also specify\nthe\nmaximum number of resulting workflows\nyou want to retrieve as results.)\nOnce you've found the workflow you want to re-run,\nyou can simply call the workflow client\nrerun()\nmethod.\nOptionally, you can use\nrerun(idempotent=True)\nto avoid re-running a workflow that is already in running or in a pending state.\nThis will return details of the already running workflow if found, and by default, it is set to\nFalse\n.\nWorkflows run asynchronously\nRemember that workflows run asynchronously. See the\npackages and workflows introduction\nfor details on how you can check the status and wait until the workflow has been completed.\nComing soon\nRequires multiple steps through the raw REST API\nFind the existing workflow.\nSend through the resulting re-run request.\nPOST /api/service/workflows/indexsearch\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n{\n\"from\"\n:\n0\n,\n\"size\"\n:\n5\n,\n\"query\"\n:\n{\n\"bool\"\n:\n{\n\"filter\"\n:\n[\n{\n\"nested\"\n:\n{\n\"path\"\n:\n\"metadata\"\n,\n\"query\"\n:\n{\n\"prefix\"\n:\n{\n\"metadata.name.keyword\"\n:\n{\n\"value\"\n:\n\"csa-relational-assets-builder\"\n// (1)\n}\n}\n}\n}\n}\n]\n}\n},\n\"sort\"\n:\n[\n{\n\"metadata.creationTimestamp\"\n:\n{",
    "metadata": {
      "source_url": "snippets_workflows_packages_relational-assets-builder.html",
      "source_type": "sdk",
      "file": "snippets_workflows_packages_relational-assets-builder.json",
      "chunk_id": 5
    }
  },
  {
    "content": "\"nested\"\n:\n{\n\"path\"\n:\n\"metadata\"\n,\n\"query\"\n:\n{\n\"prefix\"\n:\n{\n\"metadata.name.keyword\"\n:\n{\n\"value\"\n:\n\"csa-relational-assets-builder\"\n// (1)\n}\n}\n}\n}\n}\n]\n}\n},\n\"sort\"\n:\n[\n{\n\"metadata.creationTimestamp\"\n:\n{\n\"nested\"\n:\n{\n\"path\"\n:\n\"metadata\"\n},\n\"order\"\n:\n\"desc\"\n}\n}\n],\n\"track_total_hits\"\n:\ntrue\n}\nSearching by the\ncsa-relational-assets-builder\nprefix will ensure you only find existing relational assets builder workflows.\nName of the workflow\nThe name of the workflow will be nested within the\n_source.metadata.name\nproperty of the response object.\n(Remember since this is a search, there could be multiple results, so you may want to use the other\ndetails in each result to determine which workflow you really want.)\nPOST /api/service/workflows/submit\n100\n101\n102\n103\n104\n{\n\"namespace\"\n:\n\"default\"\n,\n\"resourceKind\"\n:\n\"WorkflowTemplate\"\n,\n\"resourceName\"\n:\n\"csa-relational-assets-builder-1684500411\"\n// (1)\n}\nSend the name of the workflow as the\nresourceName\nto rerun it.\n2024-11-20\n2024-11-20\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:",
    "metadata": {
      "source_url": "snippets_workflows_packages_relational-assets-builder.html",
      "source_type": "sdk",
      "file": "snippets_workflows_packages_relational-assets-builder.json",
      "chunk_id": 6
    }
  },
  {
    "content": "Thanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
    "metadata": {
      "source_url": "snippets_workflows_packages_relational-assets-builder.html",
      "source_type": "sdk",
      "file": "snippets_workflows_packages_relational-assets-builder.json",
      "chunk_id": 7
    }
  }
]