[
  {
    "content": "Manage popularity insights - Developer\nSkip to content\nManage popularity\n¶\nPopularity gives additional context to the usage of assets. From popularity, you can see various information such as:\nusers who have queried an asset, including:\nthose who have most recently queried the asset\nthose who have most frequently queried the asset\ndetails about queries against the asset, including:\nthe most frequently run queries\nthe slowest-running queries\nthe most expensive queries\nPopularity is only populated on certain assets by Atlan\nOut-of-the-box, only specific crawlers currently populate popularity information on assets. However, the attributes involved are actually available behind-the-scenes on all assets.\nMake details visible in the UI\n¶\nUsage details not visible by default\nBy default, only the crawlers that support usage details out-of-the-box will show the usage details in the Atlan UI. To make usage details visible for other assets you\nmust\nenable this at a connection level.\nDuring connection creation\n¶\n7.0.0\n4.0.0\nTo create a popularity-enabled connection:\nJava\nPython\nKotlin\nRaw REST API\nCreate a popularity-enabled connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nString\nadminRoleGuid\n=\nclient\n.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 0
    }
  },
  {
    "content": "¶\n7.0.0\n4.0.0\nTo create a popularity-enabled connection:\nJava\nPython\nKotlin\nRaw REST API\nCreate a popularity-enabled connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nString\nadminRoleGuid\n=\nclient\n.\ngetRoleCache\n().\ngetIdForName\n(\n\"$admin\"\n);\n// (1)\nConnection\nconnection\n=\nConnection\n.\ncreator\n(\n// (2)\n\"development\"\n,\n// (3)\nAtlanConnectorType\n.\nHIVE\n,\n// (4)\nList\n.\nof\n(\nadminRoleGuid\n),\n// (5)\nList\n.\nof\n(\n\"group2\"\n),\n// (6)\nList\n.\nof\n(\n\"jsmith\"\n))\n// (7)\n.\nhasPopularityInsights\n(\ntrue\n)\n// (8)\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\nconnection\n.\nsave\n(\nclient\n);\n// (9)\nRetrieve the GUID for the admin role, to use later for defining the roles that can administer the connection.\nBuild up the minimum request to create a connection.\nProvide a human-readable name for your connection.\nSet the type of connection.\nDetermines the icon\nThis determines the icon that Atlan will use for all the assets in the connection.\nList the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 1
    }
  },
  {
    "content": "At least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nSet the\nhasPopularityInsights\nproperty to\ntrue\n— this is the key piece to ensuring usage details will be visible in the UI for assets in this connection.\nActually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nCreate a relational connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nConnection\nfrom\npyatlan.model.enums\nimport\nAtlanConnectorType\nclient\n=\nAtlanClient\n()\nadmin_role_guid\n=\nclient\n.\nrole_cache\n.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 2
    }
  },
  {
    "content": "pyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nConnection\nfrom\npyatlan.model.enums\nimport\nAtlanConnectorType\nclient\n=\nAtlanClient\n()\nadmin_role_guid\n=\nclient\n.\nrole_cache\n.\nget_id_for_name\n(\n\"$admin\"\n)\n# (1)\nconnection\n=\nConnection\n.\ncreator\n(\n# (2)\nclient\n=\nclient\n,\n# (3)\nname\n=\n\"development\"\n,\n# (4)\nconnector_type\n=\nAtlanConnectorType\n.\nHIVE\n,\n# (5)\nadmin_roles\n=\n[\nadmin_role_guid\n],\n# (6)\nadmin_groups\n=\n[\n\"group2\"\n],\n# (7)\nadmin_users\n=\n[\n\"jsmith\"\n],\n# (8)\n)\nconnection\n.\nhas_popularity_insights\n=\nTrue\n# (9)\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\nconnection\n)\n# (10)\nRetrieve the GUID for the admin role, to use later for defining the roles that can administer the connection.\nBuild up the minimum request to create a connection.\nYou must provide a client instance.\nProvide a human-readable name for your connection.\nSet the type of connection.\nDetermines the icon\nThis determines the icon that Atlan will use for all the assets in the connection.\nList the workspace roles that should be able to administer the connection (if any, defaults to\nNone",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 3
    }
  },
  {
    "content": "This determines the icon that Atlan will use for all the assets in the connection.\nList the workspace roles that should be able to administer the connection (if any, defaults to\nNone\n). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadmin_roles\n,\nadmin_groups\n, or\nadmin_users\nmust be provided.\nList the group names that can administer this connection (if any, defaults to\nNone\n). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadmin_roles\n,\nadmin_groups\n, or\nadmin_users\nmust be provided.\nList the user names that can administer this connection (if any, defaults to\nNone\n). Note that the values here are the username(s) of the user(s).\nAt least one of\nadmin_roles\n,\nadmin_groups\n, or\nadmin_users\nmust be provided.\nSet the\nhas_popularity_insights\nproperty to\nTrue\n— this is the key piece to ensuring usage details will be visible in the UI for assets in this connection.\nActually call Atlan to create the connection.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 4
    }
  },
  {
    "content": "has_popularity_insights\nproperty to\nTrue\n— this is the key piece to ensuring usage details will be visible in the UI for assets in this connection.\nActually call Atlan to create the connection.\nCreate a popularity-enabled connection\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\nval\nadminRoleGuid\n=\nclient\n.\nroleCache\n.\ngetIdForName\n(\n\"\\\n$\nadmin\n\"\n)\n// (1)\nval\nconnection\n=\nConnection\n.\ncreator\n(\n// (2)\n\"development\"\n,\n// (3)\nAtlanConnectorType\n.\nHIVE\n,\n// (4)\njava\n.\nutil\n.\nList\n.\nof\n(\nadminRoleGuid\n),\n// (5)\nlistOf\n(\n\"group2\"\n),\n// (6)\nlistOf\n(\n\"jsmith\"\n))\n// (7)\n.\nhasPopularityInsights\n(\ntrue\n)\n// (8)\n.\nbuild\n()\nval\nresponse\n=\nconnection\n.\nsave\n(\nclient\n)\n// (9)\nRetrieve the GUID for the admin role, to use later for defining the roles that can administer the connection.\nBuild up the minimum request to create a connection.\nProvide a human-readable name for your connection.\nSet the type of connection.\nDetermines the icon\nThis determines the icon that Atlan will use for all the assets in the connection.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 5
    }
  },
  {
    "content": "Provide a human-readable name for your connection.\nSet the type of connection.\nDetermines the icon\nThis determines the icon that Atlan will use for all the assets in the connection.\nList the workspace roles that should be able to administer the connection (or null if none). All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the group names that can administer this connection (or null if none). All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList the user names that can administer this connection (or null if none). Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nSet the\nhasPopularityInsights\nproperty to\ntrue\n— this is the key piece to ensuring usage details will be visible in the UI for assets in this connection.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 6
    }
  },
  {
    "content": "adminGroups\n, or\nadminUsers\nmust be provided.\nSet the\nhasPopularityInsights\nproperty to\ntrue\n— this is the key piece to ensuring usage details will be visible in the UI for assets in this connection.\nActually call Atlan to create the connection. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n{\n\"entities\"\n:\n[\n{\n\"typeName\"\n:\n\"Connection\"\n,\n// (1)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"development\"\n,\n// (2)\n\"connectorName\"\n:\n\"hive\"\n,\n// (3)\n\"qualifiedName\"\n:\n\"default/hive/123456789\"\n,\n// (4)\n\"category\"\n:\n\"warehouse\"\n,\n// (5)\n\"adminRoles\"\n:\n[\n// (6)\n\"e7ae0295-c60a-469a-bd2c-fb903943aa02\"\n],\n\"adminGroups\"\n:\n[\n// (7)\n\"group2\"\n],\n\"adminUsers\"\n:\n[\n// (8)\n\"jsmith\"\n],\n\"hasPopularityInsights\"\n:\ntrue\n// (9)\n}\n}\n]\n}\nThe\ntypeName\nmust be exactly\nConnection\n.\nHuman-readable name for your connection.\nThe\nconnectorName\nshould be a known value, such as\nhive\n.\nDetermines the icon\nThis determines the icon that Atlan will use for all the assets in the connection. If you use a value that is\nnot",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 7
    }
  },
  {
    "content": "The\nconnectorName\nshould be a known value, such as\nhive\n.\nDetermines the icon\nThis determines the icon that Atlan will use for all the assets in the connection. If you use a value that is\nnot\na known value, you will have a default gear icon instead.\nThe\nqualifiedName\nshould follow the pattern:\ndefault/<connectorName>/<epoch>\n, where\n<epoch>\nis the time in milliseconds at which the connection is being created, and\n<connectorName>\nexactly matches the value used for\nconnectorName\n(above).\nThe\ncategory\nshould also be a known value, that defines the kind of relational store. This could for example be\nwarehouse\nor\nrdbms\n.\nList any workspace roles that can administer this connection. All users with that workspace role (current and future) will be administrators of the connection. Note that the values here need to be the GUID(s) of the workspace role(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList any groups that can administer this connection. All users within that group (current and future) will be administrators of the connection. Note that the values here are the name(s) of the group(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 8
    }
  },
  {
    "content": "At least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nList any users that can administer this connection. Note that the values here are the username(s) of the user(s).\nAt least one of\nadminRoles\n,\nadminGroups\n, or\nadminUsers\nmust be provided.\nSet the\nhasPopularityInsights\nproperty to\ntrue\n— this is the key piece to ensuring usage details will be visible in the UI for assets in this connection.\nUpdate an existing connection\n¶\n2.0.0\n4.0.0\nTo update an existing connection:\nJava\nPython\nKotlin\nRaw REST API\nUpdate connection to make popularity visible\n1\n2\n3\n4\n5\nConnection\nconnection\n=\nConnection\n.\nget\n(\n\"default/hive/1657025257\"\n);\n// (1)\nAssetMutationResponse\nupdated\n=\nconnection\n.\ntrimToRequired\n()\n// (2)\n.\nhasPopularityInsights\n(\ntrue\n)\n// (3)\n.\nbuild\n()\n// (4)\n.\nsave\n(\nclient\n);\n// (5)\nBuild an object referencing the existing connection. In this example we will retrieve it first, but you could also search for it or use the\nupdater()\nmethod to construct an update.\nIf starting from an existing object, remember to\ntrimToRequired()\nto get a builder with the minimal required information for an update.\nSet the\nhasPopularityInsights\nproperty to\ntrue\n.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 9
    }
  },
  {
    "content": "If starting from an existing object, remember to\ntrimToRequired()\nto get a builder with the minimal required information for an update.\nSet the\nhasPopularityInsights\nproperty to\ntrue\n.\nBuild the object, so it is ready to be persisted.\nPersist the object by saving it. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nUpdate connection to make popularity visible\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nConnection\nclient\n=\nAtlanClient\n()\nconnection\n=\nclient\n.\nasset\n.\nget_by_qualified_name\n(\n# (1)\nqualified_name\n=\n\"default/hive/1657025257\"\n,\nasset_type\n=\nConnection\n)\n.\ntrim_to_required\n()\n# (2)\nconnection\n.\nhas_popularity_insights\n=\nTrue\n# (3)\nupdated\n=\nclient\n.\nasset\n.\nsave\n(\nconnection\n)\n# (4)\nBuild an object referencing the existing connection. In this example we will retrieve it first, but you could also search for it or use the\nupdater()\nmethod to construct an update.\nIf starting from an existing object, remember to\ntrim_to_required()\nto get an asset with the minimal required information for an update.\nSet the\nhas_popularity_insights",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 10
    }
  },
  {
    "content": "method to construct an update.\nIf starting from an existing object, remember to\ntrim_to_required()\nto get an asset with the minimal required information for an update.\nSet the\nhas_popularity_insights\nproperty to\nTrue\n.\nPersist the object by saving it.\nUpdate connection to make popularity visible\n1\n2\n3\n4\n5\nval\nconnection\n=\nConnection\n.\nget\n(\n\"default/hive/1657025257\"\n)\n// (1)\nval\nupdated\n=\nconnection\n.\ntrimToRequired\n()\n// (2)\n.\nhasPopularityInsights\n(\ntrue\n)\n// (3)\n.\nbuild\n()\n// (4)\n.\nsave\n(\nclient\n)\n// (5)\nBuild an object referencing the existing connection. In this example we will retrieve it first, but you could also search for it or use the\nupdater()\nmethod to construct an update.\nIf starting from an existing object, remember to\ntrimToRequired()\nto get a builder with the minimal required information for an update.\nSet the\nhasPopularityInsights\nproperty to\ntrue\n.\nBuild the object, so it is ready to be persisted.\nPersist the object by saving it. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n{\n\"entities\"\n:\n[\n// (1)\n{\n\"typeName\"\n:\n\"Connection\"",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 11
    }
  },
  {
    "content": "provide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n{\n\"entities\"\n:\n[\n// (1)\n{\n\"typeName\"\n:\n\"Connection\"\n,\n// (2)\n\"attributes\"\n:\n{\n// (3)\n\"qualifiedName\"\n:\n\"default/hive/1657025257\"\n,\n// (4)\n\"name\"\n:\n\"development\"\n,\n// (5)\n\"hasPopularityInsights\"\n:\ntrue\n// (6)\n}\n}\n]\n}\nThe connection must be wrapped in an\nentities\narray.\nYou must use a\ntypeName\nof\nConnection\nto update the connection.\nYou must then wrap additional details in an\nattributes\nobject.\nYou must provide the exact\nqualifiedName\nof the connection (case-sensitive).\nYou must provide the exact name of the connection (case-sensitive).\nSet the\nhasPopularityInsights\nproperty to\ntrue\n.\nRetrieve usage details\n¶\n1.4.0\n4.0.0\nSince popularity details are only available on certain assets, you will need to retrieve one of those assets to see the usage details:\nJava\nPython\nKotlin\nRaw REST API\nRetrieve popularity\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\nTable\ntable\n=\nTable\n.\nget\n(\nclient\n,\n// (1)\n\"default/hive/1657025257/OPS/DEFAULT/RUN_STATS\"\n);\n// (2)\ntable\n.\ngetPopularityScore\n();\n// (3)\ntable\n.\ngetSourceReadCount\n();\ntable\n.\ngetSourceReadQueryCost\n();\ntable\n.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 12
    }
  },
  {
    "content": "Table\n.\nget\n(\nclient\n,\n// (1)\n\"default/hive/1657025257/OPS/DEFAULT/RUN_STATS\"\n);\n// (2)\ntable\n.\ngetPopularityScore\n();\n// (3)\ntable\n.\ngetSourceReadCount\n();\ntable\n.\ngetSourceReadQueryCost\n();\ntable\n.\ngetSourceReadUserCount\n();\ntable\n.\ngetSourceTotalCost\n();\ntable\n.\ngetSourceQueryComputeCosts\n();\n// (4)\ntable\n.\ngetSourceReadRecentUsers\n();\ntable\n.\ngetSourceReadTopUsers\n();\ntable\n.\ngetSourceQueryComputeCostRecords\n();\n// (5)\ntable\n.\ngetSourceReadRecentUserRecords\n();\ntable\n.\ngetSourceReadTopUserRecords\n();\ntable\n.\ngetSourceReadExpensiveQueryRecords\n();\n// (6)\ntable\n.\ngetSourceReadPopularQueryRecords\n();\ntable\n.\ngetSourceReadSlowQueryRecords\n();\nUse the\nget()\nmethod to retrieve all details about a specific asset. Because this operation will retrieve the asset from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nProvide the full, case-sensitive qualifiedName of the asset.\nYou can retrieve single quantified metrics for various aspects, such as:\nAn overall popularity score for the asset (higher is better), using\ngetPopularityScore()\n.\nThe total number of all read operations on the asset, using\ngetSourceReadCount()\n.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 13
    }
  },
  {
    "content": "An overall popularity score for the asset (higher is better), using\ngetPopularityScore()\n.\nThe total number of all read operations on the asset, using\ngetSourceReadCount()\n.\nThe total cost of all read operations on the asset, using\ngetSourceReadQueryCost()\n.\nThe total number of unique users that read data from the asset, using\ngetSourceReadUserCount()\n.\nThe total cost of all operations on the asset, using\ngetSourceTotalCost()\n.\nYou can retrieve lists of various aspects, such as:\nThe top query running engines (warehouses), using\ngetSourceQueryComputeCosts()\n.\nThe users who most recently queried the asset, using\ngetSourceReadRecentUsers()\n.\nThe users who most frequently query the asset, using\ngetSourceReadTopUsers()\n.\nYou can also list more detailed information about individual metrics, such as:\nThe top query running engines (warehouses) and their related cost, using\ngetSourceQueryComputeCostRecords()\n.\nThe users who most recently queried the asset, the number of times they've queried it and when they last queried it, using\ngetSourceReadRecentUserRecords()\n.\nThe users who most frequently query the asset, the number of times they've queried it and when they last queried it, using",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 14
    }
  },
  {
    "content": "getSourceReadRecentUserRecords()\n.\nThe users who most frequently query the asset, the number of times they've queried it and when they last queried it, using\ngetSourceReadTopUserRecords()\n.\nYou can also list details about specific queries, such as:\nThe list of most expensive queries against this asset, using\ngetSourceReadExpensiveQueryRecords()\n.\nThe list of the most frequently run queries against this asset, using\ngetSourceReadPopularQueryRecords()\n.\nThe list of the slowest-running queries against this asset, using\ngetSourceReadSlowQueryRecords()\n.\nRetrieve popularity\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nTable\nclient\n=\nAtlanClient\n()\ntable\n=\nclient\n.\nasset\n.\nget_by_qualified_name\n(\n# (1)\nqualified_name\n=\n\"default/hive/1657025257/OPS/DEFAULT/RUN_STATS\"\n,\n# (2)\nasset_type\n=\nTable\n)\ntable\n.\npopularity_score\n# (3)\ntable\n.\nsource_read_count\ntable\n.\nsource_read_query_cost\ntable\n.\nsource_read_user_count\ntable\n.\nsource_total_cost\ntable\n.\nsource_query_compute_cost_list\n# (4)\ntable\n.\nsource_read_recent_user_list\ntable\n.\nsource_read_top_user_list\ntable\n.\nsource_query_compute_cost_record_list",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 15
    }
  },
  {
    "content": "table\n.\nsource_total_cost\ntable\n.\nsource_query_compute_cost_list\n# (4)\ntable\n.\nsource_read_recent_user_list\ntable\n.\nsource_read_top_user_list\ntable\n.\nsource_query_compute_cost_record_list\n# (5)\ntable\n.\nsource_read_recent_user_record_list\ntable\n.\nsource_read_top_user_record_list\ntable\n.\nsource_read_expensive_query_record_list\n# (6)\ntable\n.\nsource_read_popular_query_record_list\ntable\n.\nsource_read_slow_query_record_list\nUse the\nasset.get_by_qualified_name()\nmethod to retrieve all details about a specific asset.\nProvide the full, case-sensitive qualified_name of the asset, and the type of the asset.\nYou can retrieve single quantified metrics for various aspects, such as:\nAn overall popularity score for the asset (higher is better), using\npopularity_score\n.\nThe total number of all read operations on the asset, using\nsource_read_count\n.\nThe total cost of all read operations on the asset, using\nsource_read_query_cost\n.\nThe total number of unique users that read data from the asset, using\nsource_read_user_count\n.\nThe total cost of all operations on the asset, using\nsource_total_cost\n.\nYou can retrieve lists of various aspects, such as:\nThe top query running engines (warehouses), using",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 16
    }
  },
  {
    "content": "source_read_user_count\n.\nThe total cost of all operations on the asset, using\nsource_total_cost\n.\nYou can retrieve lists of various aspects, such as:\nThe top query running engines (warehouses), using\nsource_query_compute_cost_list\n.\nThe users who most recently queried the asset, using\nsource_read_recent_user_list\n.\nThe users who most frequently query the asset, using\nsource_read_top_user_list\n.\nYou can also list more detailed information about individual metrics, such as:\nThe top query running engines (warehouses) and their related cost, using\nsource_query_compute_cost_record_list\n.\nThe users who most recently queried the asset, the number of times they've queried it and when they last queried it, using\nsource_read_recent_user_record_list\n.\nThe users who most frequently query the asset, the number of times they've queried it and when they last queried it, using\nsource_read_top_user_record_list\n.\nYou can also list details about specific queries, such as:\nThe list of most expensive queries against this asset, using\nsource_read_expensive_query_record_list\n.\nThe list of the most frequently run queries against this asset, using\nsource_read_popular_query_record_list\n.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 17
    }
  },
  {
    "content": "source_read_expensive_query_record_list\n.\nThe list of the most frequently run queries against this asset, using\nsource_read_popular_query_record_list\n.\nThe list of the slowest-running queries against this asset, using\nsource_read_slow_query_record_list\n.\nRetrieve popularity\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\nval\ntable\n=\nTable\n.\nget\n(\nclient\n,\n// (1)\n\"default/hive/1657025257/OPS/DEFAULT/RUN_STATS\"\n)\n// (2)\ntable\n.\npopularityScore\n// (3)\ntable\n.\nsourceReadCount\ntable\n.\nsourceReadQueryCost\ntable\n.\nsourceReadUserCount\ntable\n.\nsourceTotalCost\ntable\n.\nsourceQueryComputeCosts\n// (4)\ntable\n.\nsourceReadRecentUsers\ntable\n.\nsourceReadTopUsers\ntable\n.\nsourceQueryComputeCostRecords\n// (5)\ntable\n.\nsourceReadRecentUserRecords\ntable\n.\nsourceReadTopUserRecords\ntable\n.\nsourceReadExpensiveQueryRecords\n// (6)\ntable\n.\nsourceReadPopularQueryRecords\ntable\n.\nsourceReadSlowQueryRecords\nUse the\nget()\nmethod to retrieve all details about a specific asset. Because this operation will retrieve the asset from Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nProvide the full, case-sensitive qualifiedName of the asset.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 18
    }
  },
  {
    "content": "provide it an\nAtlanClient\nthrough which to connect to the tenant.\nProvide the full, case-sensitive qualifiedName of the asset.\nYou can retrieve single quantified metrics for various aspects, such as:\nAn overall popularity score for the asset (higher is better), using\n.popularityScore\n.\nThe total number of all read operations on the asset, using\n.sourceReadCount\n.\nThe total cost of all read operations on the asset, using\n.sourceReadQueryCost\n.\nThe total number of unique users that read data from the asset, using\n.sourceReadUserCount\n.\nThe total cost of all operations on the asset, using\n.sourceTotalCost\n.\nYou can retrieve lists of various aspects, such as:\nThe top query running engines (warehouses), using\n.sourceQueryComputeCosts\n.\nThe users who most recently queried the asset, using\n.sourceReadRecentUsers\n.\nThe users who most frequently query the asset, using\n.sourceReadTopUsers\n.\nYou can also list more detailed information about individual metrics, such as:\nThe top query running engines (warehouses) and their related cost, using\n.sourceQueryComputeCostRecords\n.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 19
    }
  },
  {
    "content": ".\nYou can also list more detailed information about individual metrics, such as:\nThe top query running engines (warehouses) and their related cost, using\n.sourceQueryComputeCostRecords\n.\nThe users who most recently queried the asset, the number of times they've queried it and when they last queried it, using\n.sourceReadRecentUserRecords\n.\nThe users who most frequently query the asset, the number of times they've queried it and when they last queried it, using\n.sourceReadTopUserRecords\n.\nYou can also list details about specific queries, such as:\nThe list of most expensive queries against this asset, using\n.sourceReadExpensiveQueryRecords\n.\nThe list of the most frequently run queries against this asset, using\n.sourceReadPopularQueryRecords\n.\nThe list of the slowest-running queries against this asset, using\n.sourceReadSlowQueryRecords\n.\nGET /api/meta/entity/uniqueAttribute/type/Table?attr:qualifiedName=default%2Fhive%2F1657025257%2FOPS%2FDEFAULT%2FRUN_STATS\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 20
    }
  },
  {
    "content": "15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n{\n\"entity\"\n:\n{\n// (1)\n\"typeName\"\n:\n\"Table\"\n,\n// (2)\n\"attributes\"\n:\n{\n// (3)\n\"name\"\n:\n\"RUN_STATS\"\n,\n\"qualifiedName\"\n:\n\"default/hive/1657025257/OPS/DEFAULT/RUN_STATS\"\n,\n\"popularityScore\"\n:\n4.8121843\n,\n// (4)\n\"sourceReadCount\"\n:\n122\n,\n\"sourceReadQueryCost\"\n:\n0.001278\n,\n\"sourceReadUserCount\"\n:\n1\n,\n\"sourceTotalCost\"\n:\n0.001278\n,\n\"sourceLastReadAt\"\n:\n1689508975245\n,\n\"sourceCostUnit\"\n:\n\"Credits\"\n,\n\"sourceQueryComputeCostList\"\n:\n[\n\"TRANSFORMING\"\n],\n\"sourceReadTopUserList\"\n:\n[\n\"ATLANADMIN\"\n],\n\"sourceQueryComputeCostRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordTotalUserCount\"\n:\n0\n,\n\"recordUser\"\n:\nnull\n,\n\"recordQueryCount\"\n:\n0\n,\n\"recordWarehouse\"\n:\n\"TRANSFORMING\"\n,\n\"recordComputeCost\"\n:\n0.001278\n,\n\"recordLastTimestamp\"\n:\n0\n,\n\"recordQuery\"\n:\nnull\n,\n\"recordQueryDuration\"\n:\n0\n,\n\"recordMaxComputeCost\"\n:\n0\n,",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 21
    }
  },
  {
    "content": ":\n0\n,\n\"recordWarehouse\"\n:\n\"TRANSFORMING\"\n,\n\"recordComputeCost\"\n:\n0.001278\n,\n\"recordLastTimestamp\"\n:\n0\n,\n\"recordQuery\"\n:\nnull\n,\n\"recordQueryDuration\"\n:\n0\n,\n\"recordMaxComputeCost\"\n:\n0\n,\n\"recordComputeCostUnit\"\n:\n\"Credits\"\n}\n}\n],\n\"sourceReadRecentUserRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordTotalUserCount\"\n:\n0\n,\n\"recordUser\"\n:\n\"ATLANADMIN\"\n,\n\"recordQueryCount\"\n:\n122\n,\n\"recordWarehouse\"\n:\nnull\n,\n\"recordComputeCost\"\n:\n0\n,\n\"recordLastTimestamp\"\n:\n1689508975245\n,\n\"recordQuery\"\n:\nnull\n,\n\"recordQueryDuration\"\n:\n0\n,\n\"recordMaxComputeCost\"\n:\n0\n,\n\"recordComputeCostUnit\"\n:\nnull\n}\n}\n],\n\"sourceReadTopUserRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordTotalUserCount\"\n:\n0\n,\n\"recordUser\"\n:\n\"ATLANADMIN\"\n,\n\"recordQueryCount\"\n:\n122\n,\n\"recordWarehouse\"\n:\nnull\n,\n\"recordComputeCost\"\n:\n0\n,\n\"recordLastTimestamp\"\n:\n1689508975245\n,\n\"recordQuery\"\n:\nnull\n,\n\"recordQueryDuration\"\n:\n0\n,\n\"recordMaxComputeCost\"\n:\n0\n,\n\"recordComputeCostUnit\"\n:\nnull\n}\n}\n],\n\"sourceReadExpensiveQueryRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordTotalUserCount\"\n:\n1\n,\n\"recordUser\"\n:\nnull\n,\n\"recordQueryCount\"\n:\n36\n,\n\"recordWarehouse\"\n:\nnull",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 22
    }
  },
  {
    "content": "\"sourceReadExpensiveQueryRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordTotalUserCount\"\n:\n1\n,\n\"recordUser\"\n:\nnull\n,\n\"recordQueryCount\"\n:\n36\n,\n\"recordWarehouse\"\n:\nnull\n,\n\"recordComputeCost\"\n:\n0.000407\n,\n\"recordLastTimestamp\"\n:\n0\n,\n\"recordQuery\"\n:\n\"SELECT * from RUN_STATS\"\n,\n\"recordQueryDuration\"\n:\n0\n,\n\"recordMaxComputeCost\"\n:\n4.8e-05\n,\n\"recordComputeCostUnit\"\n:\n\"Credits\"\n}\n}\n],\n\"sourceReadPopularQueryRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordTotalUserCount\"\n:\n1\n,\n\"recordUser\"\n:\nnull\n,\n\"recordQueryCount\"\n:\n36\n,\n\"recordWarehouse\"\n:\nnull\n,\n\"recordComputeCost\"\n:\n0.000309\n,\n\"recordLastTimestamp\"\n:\n0\n,\n\"recordQuery\"\n:\n\"SELECT * from RUN_STATS\"\n,\n\"recordQueryDuration\"\n:\n0\n,\n\"recordMaxComputeCost\"\n:\n0\n,\n\"recordComputeCostUnit\"\n:\n\"Credits\"\n}\n}\n],\n\"sourceReadSlowQueryRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordTotalUserCount\"\n:\n0\n,\n\"recordUser\"\n:\n\"ATLANADMIN\"\n,\n\"recordQueryCount\"\n:\n0\n,\n\"recordWarehouse\"\n:\nnull\n,\n\"recordComputeCost\"\n:\n0\n,\n\"recordLastTimestamp\"\n:\n1688584846605\n,\n\"recordQuery\"\n:\n\"SELECT * from RUN_STATS\"\n,\n\"recordQueryDuration\"\n:\n336\n,\n\"recordMaxComputeCost\"\n:\n0\n,",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 23
    }
  },
  {
    "content": "0\n,\n\"recordWarehouse\"\n:\nnull\n,\n\"recordComputeCost\"\n:\n0\n,\n\"recordLastTimestamp\"\n:\n1688584846605\n,\n\"recordQuery\"\n:\n\"SELECT * from RUN_STATS\"\n,\n\"recordQueryDuration\"\n:\n336\n,\n\"recordMaxComputeCost\"\n:\n0\n,\n\"recordComputeCostUnit\"\n:\nnull\n}\n}\n]\n}\n}\n}\nAll asset details will come back wrapped in a top-level\nentity\nobject in the payload.\nThe\ntypeName\nwill indicate what kind of asset is returned.\nThe detailed usage information will be embedded in the\nattributes\nobject within the outer\nentity\nobject.\nWith the exception of the\npopularityScore\n, all other usage details have names that all start with\nsource...\nAdd your own usage details\n¶\n2.0.0\n4.0.0\nIn cases where Atlan does not popularity details from the source, you may want to add your own. You can do this by either adding the usage details when\ncreating the asset\n(programmatically) or by updating the attributes on an existing asset:\nJava\nPython\nKotlin\nRaw REST API\nAdd or update usage details\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 24
    }
  },
  {
    "content": "22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\nTable\ntable\n=\nTable\n.\nupdater\n(\n// (1)\n\"default/hive/1657025257/OPS/DEFAULT/RUN_STATS\"\n,\n\"RUN_STATS\"\n)\n.\npopularityScore\n(\n1.2345\n)\n// (2)\n.\nsourceReadCount\n(\n123L\n)\n.\nsourceReadQueryCost\n(\n5.4321\n)\n.\nsourceReadUserCount\n(\n5L\n)\n.\nsourceTotalCost\n(\n5.4321\n)\n.\nsourceQueryComputeCosts\n(\nList\n.\nof\n(\n\"A\"\n,\n\"B\"\n))\n// (3)\n.\nsourceReadRecentUsers\n(\nList\n.\nof\n(\n\"c\"\n,\n\"d\"\n,\n\"e\"\n))\n.\nsourceReadRecentUser\n(\n\"f\"\n)\n.\nsourceReadRecentUser\n(\n\"g\"\n)\n.\nsourceReadTopUsers\n(\nList\n.\nof\n(\n\"g\"\n,\n\"f\"\n,\n\"e\"\n))\n.\nsourceReadTopUser\n(\n\"d\"\n)\n.\nsourceReadTopUser\n(\n\"c\"\n)\n.\nsourceQueryComputeCostRecord\n(\n// (4)\nPopularityInsights\n.\nbuilder\n()\n.\nrecordComputeCost\n(\n4.4321\n)\n.\nrecordComputeCostUnit\n(\nSourceCostUnitType\n.\nCREDITS\n)\n.\nrecordWarehouse\n(\n\"A\"\n)\n.\nbuild\n())\n.\nsourceQueryComputeCostRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordComputeCost\n(\n1.0\n)\n.\nrecordComputeCostUnit\n(\nSourceCostUnitType\n.\nCREDITS\n)\n.\nrecordWarehouse\n(\n\"B\"\n)\n.\nbuild\n())\n.\nsourceReadRecentUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 25
    }
  },
  {
    "content": "builder\n()\n.\nrecordComputeCost\n(\n1.0\n)\n.\nrecordComputeCostUnit\n(\nSourceCostUnitType\n.\nCREDITS\n)\n.\nrecordWarehouse\n(\n\"B\"\n)\n.\nbuild\n())\n.\nsourceReadRecentUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"c\"\n)\n.\nrecordLastTimestamp\n(\n1234567899000L\n)\n.\nbuild\n())\n.\nsourceReadRecentUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"d\"\n)\n.\nrecordLastTimestamp\n(\n1234567898000L\n)\n.\nbuild\n())\n.\nsourceReadRecentUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"e\"\n)\n.\nrecordLastTimestamp\n(\n1234567897000L\n)\n.\nrecordQueryCount\n(\n3L\n)\n.\nbuild\n())\n.\nsourceReadTopUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"g\"\n)\n.\nrecordQueryCount\n(\n100L\n)\n.\nrecordLastTimestamp\n(\n1234567895000L\n)\n.\nbuild\n())\n.\nsourceReadTopUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"f\"\n)\n.\nrecordQueryCount\n(\n20L\n)\n.\nrecordLastTimestamp\n(\n1234567896000L\n)\n.\nbuild\n())\n.\nsourceReadTopUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"e\"\n)\n.\nrecordQueryCount\n(\n3L\n)\n.\nrecordLastTimestamp\n(\n1234567897000L\n)\n.\nbuild\n())\n.\nsourceReadExpensiveQueryRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordComputeCost\n(\n5.4321\n)\n.\nrecordMaxComputeCost\n(\n5.4321\n)\n.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 26
    }
  },
  {
    "content": "(\n3L\n)\n.\nrecordLastTimestamp\n(\n1234567897000L\n)\n.\nbuild\n())\n.\nsourceReadExpensiveQueryRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordComputeCost\n(\n5.4321\n)\n.\nrecordMaxComputeCost\n(\n5.4321\n)\n.\nrecordComputeCostUnit\n(\nSourceCostUnitType\n.\nCREDITS\n)\n.\nrecordQuery\n(\n\"SELECT * from RUN_STATS\"\n)\n.\nrecordQueryCount\n(\n123L\n)\n.\nrecordTotalUserCount\n(\n5L\n)\n.\nbuild\n())\n.\nsourceReadPopularQueryRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordComputeCost\n(\n5.4321\n)\n.\nrecordComputeCostUnit\n(\nSourceCostUnitType\n.\nCREDITS\n)\n.\nrecordQueryCount\n(\n123L\n)\n.\nrecordQuery\n(\n\"SELECT * from RUN_STATS\"\n)\n.\nrecordTotalUserCount\n(\n5L\n)\n.\nbuild\n())\n.\nsourceReadSlowQueryRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"g\"\n)\n.\nrecordLastTimestamp\n(\n124567895000L\n)\n.\nrecordQueryDuration\n(\n321L\n)\n.\nrecordQuery\n(\n\"SELECT * from RUN_STATS\"\n)\n.\nbuild\n())\n.\nbuild\n();\nAssetMutationResponse\nresponse\n=\ntable\n.\nsave\n(\nclient\n);\n// (5)\nUse the\nupdater()\nmethod to update an existing asset, providing the required details for that particular asset type (for more details, see\nUpdating an asset\n).\nFor single quantified metrics, you can directly set the metric.",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 27
    }
  },
  {
    "content": "Updating an asset\n).\nFor single quantified metrics, you can directly set the metric.\nFor lists, you can directly set the lists or individually add elements (or a combination of the two).\nFor the more detailed records, you need to build the\nPopularityInsights\nobject with its embedded details. As with the lists you can associate these detailed records with the asset many-at-a-time or one-by-one.\nFinally, you must save the object you've built up to persist this information in Atlan. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nAdd or update usage details\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\nfrom\npyatlan.client.atlan\nimport\nAtlanClient\nfrom\npyatlan.model.assets\nimport\nTable\nfrom\npyatlan.model.enums\nimport\nSourceCostUnitType\nfrom\npyatlan.model.structs\nimport\nPopularityInsights\nclient\n=\nAtlanClient\n()\ntable\n=\nTable\n.\nupdater\n(\n# (1)\nqualified_name\n=",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 28
    }
  },
  {
    "content": "import\nTable\nfrom\npyatlan.model.enums\nimport\nSourceCostUnitType\nfrom\npyatlan.model.structs\nimport\nPopularityInsights\nclient\n=\nAtlanClient\n()\ntable\n=\nTable\n.\nupdater\n(\n# (1)\nqualified_name\n=\n\"default/hive/1657025257/OPS/DEFAULT/RUN_STATS\"\n,\nname\n=\n\"RUN_STATS\"\n)\ntable\n.\npopularity_score\n=\n1.2345\n# (2)\ntable\n.\nsource_read_count\n=\n123\ntable\n.\nsource_read_query_cost\n=\n5.4321\ntable\n.\nsource_read_user_count\n=\n5\ntable\n.\nsource_total_cost\n=\n5.4321\ntable\n.\nsource_query_compute_cost_list\n=\n[\n\"A\"\n,\n\"B\"\n]\n# (3)\ntable\n.\nsource_read_recent_user_list\n=\n[\n\"c\"\n,\n\"d\"\n,\n\"e\"\n,\n\"f\"\n,\n\"g\"\n]\ntable\n.\nsource_read_top_user_list\n=\n[\n\"g\"\n,\n\"f\"\n,\n\"e\"\n,\n\"d\"\n,\n\"c\"\n]\ntable\n.\nsource_query_compute_cost_record_list\n=\n[\n# (4)\nPopularityInsights\n(\nrecord_compute_cost\n=\n4.4321\n,\nrecord_compute_cost_unit\n=\nSourceCostUnitType\n.\nCREDITS\n,\nrecord_warehouse\n=\n\"A\"\n),\nPopularityInsights\n(\nrecord_compute_cost\n=\n1.0\n,\nrecord_compute_cost_unit\n=\nSourceCostUnitType\n.\nCREDITS\n,\nrecord_warehouse\n=\n\"B\"\n)\n]\ntable\n.\nsource_read_recent_user_record_list\n=\n[\nPopularityInsights\n(\nrecord_user\n=\n\"c\"\n,\nrecord_last_timestamp\n=\n1234567899000\n),\nPopularityInsights\n(\nrecord_user\n=\n\"d\"\n,\nrecord_last_timestamp\n=\n1234567898000\n),\nPopularityInsights",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 29
    }
  },
  {
    "content": "=\n[\nPopularityInsights\n(\nrecord_user\n=\n\"c\"\n,\nrecord_last_timestamp\n=\n1234567899000\n),\nPopularityInsights\n(\nrecord_user\n=\n\"d\"\n,\nrecord_last_timestamp\n=\n1234567898000\n),\nPopularityInsights\n(\nrecord_user\n=\n\"e\"\n,\nrecord_last_timestamp\n=\n1234567897000\n,\nrecord_query_count\n=\n3\n)\n]\ntable\n.\nsource_read_top_user_record_list\n=\n[\nPopularityInsights\n(\nrecord_user\n=\n\"g\"\n,\nrecord_query_count\n=\n100\n,\nrecord_last_timestamp\n=\n1234567895000\n),\nPopularityInsights\n(\nrecord_user\n=\n\"f\"\n,\nrecord_query_count\n=\n20\n,\nrecord_last_timestamp\n=\n1234567896000\n),\nPopularityInsights\n(\nrecord_user\n=\n\"e\"\n,\nrecord_query_count\n=\n3\n,\nrecord_last_timestamp\n=\n1234567897000\n)\n]\ntable\n.\nsource_read_expensive_query_record_list\n=\n[\nPopularityInsights\n(\nrecord_compute_cost\n=\n5.4321\n,\nrecord_max_compute_cost\n=\n5.4321\n,\nrecord_compute_cost_unit\n=\nSourceCostUnitType\n.\nCREDITS\n,\nrecord_query\n=\n\"SELECT * from RUN_STATS\"\n,\nrecord_query_count\n=\n123\n,\nrecord_total_user_count\n=\n5\n)\n]\ntable\n.\nsource_read_popular_query_record_list\n=\n[\nPopularityInsights\n(\nrecord_compute_cost\n=\n5.4321\n,\nrecord_compute_cost_unit\n=\nSourceCostUnitType\n.\nCREDITS\n,\nrecord_query_count\n=\n123\n,\nrecord_query\n=\n\"SELECT * from RUN_STATS\"\n,\nrecord_total_user_count",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 30
    }
  },
  {
    "content": "(\nrecord_compute_cost\n=\n5.4321\n,\nrecord_compute_cost_unit\n=\nSourceCostUnitType\n.\nCREDITS\n,\nrecord_query_count\n=\n123\n,\nrecord_query\n=\n\"SELECT * from RUN_STATS\"\n,\nrecord_total_user_count\n=\n5\n)\n]\ntable\n.\nsource_read_slow_query_record_list\n=\n[\nPopularityInsights\n(\nrecord_user\n=\n\"g\"\n,\nrecord_last_timestamp\n=\n1234567895000\n,\nrecord_query_duration\n=\n321\n,\nrecord_query\n=\n\"SELECT * from RUN_STATS\"\n)\n]\nresponse\n=\nclient\n.\nasset\n.\nsave\n(\ntable\n)\n# (5)\nUse the\nupdater()\nmethod to update an existing asset, providing the required details for that particular asset type (for more details, see\nUpdating an asset\n).\nFor single quantified metrics, you can directly set the metric.\nFor lists, you can directly set the lists.\nFor the more detailed records, you need to build each\nPopularityInsights\nobject with its embedded details.\nFinally, you must save the object you've built up to persist this information in Atlan.\nAdd or update usage details\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\nval\ntable\n=",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 31
    }
  },
  {
    "content": "26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\nval\ntable\n=\nTable\n.\nupdater\n(\n// (1)\n\"default/hive/1657025257/OPS/DEFAULT/RUN_STATS\"\n,\n\"RUN_STATS\"\n)\n.\npopularityScore\n(\n1.2345\n)\n// (2)\n.\nsourceReadCount\n(\n123L\n)\n.\nsourceReadQueryCost\n(\n5.4321\n)\n.\nsourceReadUserCount\n(\n5L\n)\n.\nsourceTotalCost\n(\n5.4321\n)\n.\nsourceQueryComputeCosts\n(\nList\n.\nof\n(\n\"A\"\n,\n\"B\"\n))\n// (3)\n.\nsourceReadRecentUsers\n(\nList\n.\nof\n(\n\"c\"\n,\n\"d\"\n,\n\"e\"\n))\n.\nsourceReadRecentUser\n(\n\"f\"\n)\n.\nsourceReadRecentUser\n(\n\"g\"\n)\n.\nsourceReadTopUsers\n(\nList\n.\nof\n(\n\"g\"\n,\n\"f\"\n,\n\"e\"\n))\n.\nsourceReadTopUser\n(\n\"d\"\n)\n.\nsourceReadTopUser\n(\n\"c\"\n)\n.\nsourceQueryComputeCostRecord\n(\n// (4)\nPopularityInsights\n.\nbuilder\n()\n.\nrecordComputeCost\n(\n4.4321\n)\n.\nrecordComputeCostUnit\n(\nSourceCostUnitType\n.\nCREDITS\n)\n.\nrecordWarehouse\n(\n\"A\"\n)\n.\nbuild\n())\n.\nsourceQueryComputeCostRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordComputeCost\n(\n1.0\n)\n.\nrecordComputeCostUnit\n(\nSourceCostUnitType\n.\nCREDITS\n)\n.\nrecordWarehouse\n(\n\"B\"\n)\n.\nbuild\n())\n.\nsourceReadRecentUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"c\"\n)",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 32
    }
  },
  {
    "content": "(\n1.0\n)\n.\nrecordComputeCostUnit\n(\nSourceCostUnitType\n.\nCREDITS\n)\n.\nrecordWarehouse\n(\n\"B\"\n)\n.\nbuild\n())\n.\nsourceReadRecentUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"c\"\n)\n.\nrecordLastTimestamp\n(\n1234567899000L\n)\n.\nbuild\n())\n.\nsourceReadRecentUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"d\"\n)\n.\nrecordLastTimestamp\n(\n1234567898000L\n)\n.\nbuild\n())\n.\nsourceReadRecentUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"e\"\n)\n.\nrecordLastTimestamp\n(\n1234567897000L\n)\n.\nrecordQueryCount\n(\n3L\n)\n.\nbuild\n())\n.\nsourceReadTopUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"g\"\n)\n.\nrecordQueryCount\n(\n100L\n)\n.\nrecordLastTimestamp\n(\n1234567895000L\n)\n.\nbuild\n())\n.\nsourceReadTopUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"f\"\n)\n.\nrecordQueryCount\n(\n20L\n)\n.\nrecordLastTimestamp\n(\n1234567896000L\n)\n.\nbuild\n())\n.\nsourceReadTopUserRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"e\"\n)\n.\nrecordQueryCount\n(\n3L\n)\n.\nrecordLastTimestamp\n(\n1234567897000L\n)\n.\nbuild\n())\n.\nsourceReadExpensiveQueryRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordComputeCost\n(\n5.4321\n)\n.\nrecordMaxComputeCost\n(\n5.4321\n)\n.\nrecordComputeCostUnit\n(\nSourceCostUnitType",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 33
    }
  },
  {
    "content": ")\n.\nbuild\n())\n.\nsourceReadExpensiveQueryRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordComputeCost\n(\n5.4321\n)\n.\nrecordMaxComputeCost\n(\n5.4321\n)\n.\nrecordComputeCostUnit\n(\nSourceCostUnitType\n.\nCREDITS\n)\n.\nrecordQuery\n(\n\"SELECT * from RUN_STATS\"\n)\n.\nrecordQueryCount\n(\n123L\n)\n.\nrecordTotalUserCount\n(\n5L\n)\n.\nbuild\n())\n.\nsourceReadPopularQueryRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordComputeCost\n(\n5.4321\n)\n.\nrecordComputeCostUnit\n(\nSourceCostUnitType\n.\nCREDITS\n)\n.\nrecordQueryCount\n(\n123L\n)\n.\nrecordQuery\n(\n\"SELECT * from RUN_STATS\"\n)\n.\nrecordTotalUserCount\n(\n5L\n)\n.\nbuild\n())\n.\nsourceReadSlowQueryRecord\n(\nPopularityInsights\n.\nbuilder\n()\n.\nrecordUser\n(\n\"g\"\n)\n.\nrecordLastTimestamp\n(\n124567895000L\n)\n.\nrecordQueryDuration\n(\n321L\n)\n.\nrecordQuery\n(\n\"SELECT * from RUN_STATS\"\n)\n.\nbuild\n())\n.\nbuild\n()\nval\nresponse\n=\ntable\n.\nsave\n(\nclient\n)\n// (5)\nUse the\nupdater()\nmethod to update an existing asset, providing the required details for that particular asset type (for more details, see\nUpdating an asset\n).\nFor single quantified metrics, you can directly set the metric.\nFor lists, you can directly set the lists or individually add elements (or a combination of the two).",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 34
    }
  },
  {
    "content": "Updating an asset\n).\nFor single quantified metrics, you can directly set the metric.\nFor lists, you can directly set the lists or individually add elements (or a combination of the two).\nFor the more detailed records, you need to build the\nPopularityInsights\nobject with its embedded details. As with the lists you can associate these detailed records with the asset many-at-a-time or one-by-one.\nFinally, you must save the object you've built up to persist this information in Atlan. Because this operation will persist the asset in Atlan, you must\nprovide it an\nAtlanClient\nthrough which to connect to the tenant.\nPOST /api/meta/entity/bulk\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n{\n\"entities\"\n:\n[{\n// (1)\n\"typeName\"\n:\n\"Table\"\n,\n// (2)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"RUN_STATS\"\n,\n// (3)\n\"qualifiedName\"\n:",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 35
    }
  },
  {
    "content": "110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n{\n\"entities\"\n:\n[{\n// (1)\n\"typeName\"\n:\n\"Table\"\n,\n// (2)\n\"attributes\"\n:\n{\n\"name\"\n:\n\"RUN_STATS\"\n,\n// (3)\n\"qualifiedName\"\n:\n\"default/hive/1657025257/OPS/DEFAULT/RUN_STATS\"\n,\n// (4)\n\"popularityScore\"\n:\n1.2345\n,\n// (5)\n\"sourceReadCount\"\n:\n123\n,\n\"sourceReadQueryCost\"\n:\n5.4321\n,\n\"sourceReadUserCount\"\n:\n5\n,\n\"sourceTotalCost\"\n:\n5.4321\n,\n\"sourceLastReadAt\"\n:\n1689508975245\n,\n\"sourceCostUnit\"\n:\n\"Credits\"\n,\n\"sourceQueryComputeCostList\"\n:\n[\n// (6)\n\"A\"\n,\n\"B\"\n],\n\"sourceReadTopUserList\"\n:\n[\n\"c\"\n,\n\"d\"\n,\n\"e\"\n,\n\"f\"\n,\n\"g\"\n],\n\"sourceReadRecentUserList\"\n:\n[\n\"g\"\n,\n\"f\"\n,\n\"e\"\n,\n\"d\"\n,\n\"c\"\n],\n\"sourceQueryComputeCostRecordList\"\n:\n[\n// (7)\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordWarehouse\"\n:\n\"A\"\n,\n\"recordComputeCost\"\n:\n4.4321\n,\n\"recordComputeCostUnit\"\n:\n\"Credits\"\n}\n},\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordWarehouse\"\n:\n\"B\"\n,\n\"recordComputeCost\"\n:\n1.0\n,\n\"recordComputeCostUnit\"\n:\n\"Credits\"\n}\n}\n],\n\"sourceReadRecentUserRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordUser\"\n:\n\"c\"\n,\n\"recordLastTimestamp\"\n:\n1234567899000\n}\n},\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 36
    }
  },
  {
    "content": "}\n],\n\"sourceReadRecentUserRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordUser\"\n:\n\"c\"\n,\n\"recordLastTimestamp\"\n:\n1234567899000\n}\n},\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordUser\"\n:\n\"d\"\n,\n\"recordLastTimestamp\"\n:\n1234567898000\n}\n},\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordUser\"\n:\n\"e\"\n,\n\"recordLastTimestamp\"\n:\n1234567897000\n,\n\"recordQueryCount\"\n:\n3\n}\n}\n],\n\"sourceReadTopUserRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordUser\"\n:\n\"g\"\n,\n\"recordQueryCount\"\n:\n100\n,\n\"recordLastTimestamp\"\n:\n1234567895000\n}\n},\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordUser\"\n:\n\"f\"\n,\n\"recordQueryCount\"\n:\n20\n,\n\"recordLastTimestamp\"\n:\n1234567896000\n}\n},\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordUser\"\n:\n\"e\"\n,\n\"recordQueryCount\"\n:\n3\n,\n\"recordLastTimestamp\"\n:\n1234567897000\n}\n}\n],\n\"sourceReadExpensiveQueryRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordTotalUserCount\"\n:\n5\n,\n\"recordQueryCount\"\n:\n123\n,\n\"recordComputeCost\"\n:\n5.4321\n,\n\"recordQuery\"\n:\n\"SELECT * from RUN_STATS\"\n,\n\"recordMaxComputeCost\"\n:\n5.4321\n,\n\"recordComputeCostUnit\"\n:\n\"Credits\"\n}\n}",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 37
    }
  },
  {
    "content": ":\n5\n,\n\"recordQueryCount\"\n:\n123\n,\n\"recordComputeCost\"\n:\n5.4321\n,\n\"recordQuery\"\n:\n\"SELECT * from RUN_STATS\"\n,\n\"recordMaxComputeCost\"\n:\n5.4321\n,\n\"recordComputeCostUnit\"\n:\n\"Credits\"\n}\n}\n],\n\"sourceReadPopularQueryRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordTotalUserCount\"\n:\n5\n,\n\"recordQueryCount\"\n:\n123\n,\n\"recordComputeCost\"\n:\n5.4321\n,\n\"recordQuery\"\n:\n\"SELECT * from RUN_STATS\"\n,\n\"recordComputeCostUnit\"\n:\n\"Credits\"\n}\n}\n],\n\"sourceReadSlowQueryRecordList\"\n:\n[\n{\n\"typeName\"\n:\n\"PopularityInsights\"\n,\n\"attributes\"\n:\n{\n\"recordUser\"\n:\n\"g\"\n,\n\"recordLastTimestamp\"\n:\n124567895000\n,\n\"recordQuery\"\n:\n\"SELECT * from RUN_STATS\"\n,\n\"recordQueryDuration\"\n:\n321\n}\n}\n]\n}\n}]\n}\nAll assets must be wrapped in an\nentities\narray.\nThe\ntypeName\nmust match the appropriate type for the asset being updated.\nYou must provide the exact name of the asset (case-sensitive).\nYou must provide the exact\nqualifiedName\nof the asset (case-sensitive).\nFor single quantified metrics, you can directly set the metric.\nFor lists, you can directly set the lists.\nFor the more detailed records, you need to build each\nPopularityInsights\nobject with its embedded details.\n2023-03-06\n2025-06-11",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 38
    }
  },
  {
    "content": "For lists, you can directly set the lists.\nFor the more detailed records, you need to build each\nPopularityInsights\nobject with its embedded details.\n2023-03-06\n2025-06-11\nWas this page helpful?\nThanks for your feedback!\nThanks for your feedback! Help us improve this page by using our\nfeedback form\nto provide us with more information.\nBack to top\nCookie consent\nWe use cookies to:\nAnonymously measure page views, and\nAllow you to give us one-click feedback on any page.\nWe do\nnot\ncollect or store:\nAny personally identifiable information.\nAny information for any (re)marketing purposes.\nWith your consent, you're helping us to make our documentation better 💙\nGoogle Analytics\nAccept\nReject\nManage settings",
    "metadata": {
      "source_url": "snippets_common-examples_profiling-and-popularity_popularity.html",
      "source_type": "sdk",
      "file": "snippets_common-examples_profiling-and-popularity_popularity.json",
      "chunk_id": 39
    }
  }
]